//[File]            : wf_wfdma_ext_wrap_csr.h
//[Revision time]   : Thu Apr 29 14:29:36 2021
//[Description]     : This file is auto generated by CODA
//[Copyright]       : Copyright (C) 2021 Mediatek Incorportion. All rights reserved.

#ifndef __WF_WFDMA_EXT_WRAP_CSR_REGS_H__
#define __WF_WFDMA_EXT_WRAP_CSR_REGS_H__

#include "hal_common.h"

#ifdef __cplusplus
extern "C" {
#endif


//****************************************************************************
//
//                     WF_WFDMA_EXT_WRAP_CSR CR Definitions                     
//
//****************************************************************************

#define WF_WFDMA_EXT_WRAP_CSR_BASE                             (0x18027000 + CONN_INFRA_REMAPPING_OFFSET)

#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_TOP_CTRL_CR_ADDR           (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x00) // 7000
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_ADDR (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x04) // 7004
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL1_ADDR (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x08) // 7008
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_STATUS_ADDR (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x0C) // 700C
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_CTRL0_ADDR (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x20) // 7020
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_CTRL1_ADDR (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x24) // 7024
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_STATUS_ADDR (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x28) // 7028
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_MSI_CONFIG_ADDR            (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x2C) // 702C
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_ADDR           (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x30) // 7030
#define WF_WFDMA_EXT_WRAP_CSR_WED_RING_CONTROL_IDX_ADDR        (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x34) // 7034
#define WF_WFDMA_EXT_WRAP_CSR_DLY_INT_TICK_THRES_ADDR          (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x38) // 7038
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_SW_RST_ADDR                (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x3C) // 703C
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_DBG_SEL_ADDR               (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x40) // 7040
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HIF_MISC_ADDR              (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x44) // 7044
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_CTRL_ADDR      (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x50) // 7050
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_VIO_ADDR_ADDR  (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x54) // 7054
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_MBIST_FUSE_CTRL_ADDR       (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x5C) // 705C
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_MBIST_PREFUSE_D_ADDR       (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x60) // 7060
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_DCM_CTRL_ADDR              (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x74) // 7074
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_MBIST_FUSE_CTRL1_ADDR      (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x80) // 7080
#define WF_WFDMA_EXT_WRAP_CSR_PCIE_RECOGNITION_ID_ADDR         (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x90) // 7090
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PF_MEM_DUMP_CTRL_ADDR      (WF_WFDMA_EXT_WRAP_CSR_BASE + 0xB0) // 70B0
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PF_MEM_DUMP_DDW0_ADDR      (WF_WFDMA_EXT_WRAP_CSR_BASE + 0xB4) // 70B4
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PF_MEM_DUMP_DDW1_ADDR      (WF_WFDMA_EXT_WRAP_CSR_BASE + 0xB8) // 70B8
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HIF_PERF_MAVG_DIV_ADDR     (WF_WFDMA_EXT_WRAP_CSR_BASE + 0xC0) // 70C0
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HIF_PERF_FST_TRAN_STS_ADDR (WF_WFDMA_EXT_WRAP_CSR_BASE + 0xC4) // 70C4
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN0_FST_MPDU_TIME_STS_ADDR (WF_WFDMA_EXT_WRAP_CSR_BASE + 0xC8) // 70C8
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN0_FST_MPDU_LEN_STS_ADDR  (WF_WFDMA_EXT_WRAP_CSR_BASE + 0xCC) // 70CC
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN1_FST_MPDU_TIME_STS_ADDR (WF_WFDMA_EXT_WRAP_CSR_BASE + 0xD0) // 70D0
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN1_FST_MPDU_LEN_STS_ADDR  (WF_WFDMA_EXT_WRAP_CSR_BASE + 0xD4) // 70D4
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_CTRL0_ADDR (WF_WFDMA_EXT_WRAP_CSR_BASE + 0xE0) // 70E0
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_CTRL1_ADDR (WF_WFDMA_EXT_WRAP_CSR_BASE + 0xE4) // 70E4
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_STATUS_ADDR (WF_WFDMA_EXT_WRAP_CSR_BASE + 0xE8) // 70E8
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_ADDR            (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x200) // 7200
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_ADDR            (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x204) // 7204
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX0_CTRL0_ADDR               (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x300) // 7300
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX0_CTRL1_ADDR               (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x304) // 7304
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX0_CTRL2_ADDR               (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x308) // 7308
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX0_STS_ADDR                 (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x30C) // 730C
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX1_CTRL0_ADDR               (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x310) // 7310
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX1_CTRL1_ADDR               (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x314) // 7314
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX1_CTRL2_ADDR               (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x318) // 7318
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX1_STS_ADDR                 (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x31C) // 731C
#define WF_WFDMA_EXT_WRAP_CSR_WED_RX1_CTRL0_ADDR               (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x410) // 7410
#define WF_WFDMA_EXT_WRAP_CSR_WED_RX1_CTRL1_ADDR               (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x414) // 7414
#define WF_WFDMA_EXT_WRAP_CSR_WED_RX1_CTRL2_ADDR               (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x418) // 7418
#define WF_WFDMA_EXT_WRAP_CSR_WED_RX1_STS_ADDR                 (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x41C) // 741C
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_ADDR       (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x500) // 7500
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_1_ADDR       (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x504) // 7504
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_ADDR       (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x508) // 7508
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_STS_ADDR          (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x50C) // 750C
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_DMAWR_PROBE_ADDR  (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x510) // 7510
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_DMARD_PROBE_ADDR  (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x514) // 7514
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_WR_DBG_AXIM_OUT0_ADDR (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x518) // 7518
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_WR_DBG_AXIM_OUT1_ADDR (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x51C) // 751C
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_AXI_SLP_STS_ADDR  (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x520) // 7520
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_RD_DBG_AXIM_OUT0_ADDR (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x524) // 7524
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_RD_DBG_AXIM_OUT1_ADDR (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x528) // 7528
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_FSM_CMD_ST_ADDR   (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x52C) // 752C
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_FSM_DAT_ST_ADDR   (WF_WFDMA_EXT_WRAP_CSR_BASE + 0x530) // 7530




/* =====================================================================================

  ---WFDMA_TOP_CTRL_CR (0x18027000 + 0x00)---

    CONN_HIF_WRAP_CSR_OUT[15..0] - (RW) conn_hif_wrap_csr_out for top_ctrl if needed in the future
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_TOP_CTRL_CR_CONN_HIF_WRAP_CSR_OUT_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_TOP_CTRL_CR_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_TOP_CTRL_CR_CONN_HIF_WRAP_CSR_OUT_MASK 0x0000FFFF                // CONN_HIF_WRAP_CSR_OUT[15..0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_TOP_CTRL_CR_CONN_HIF_WRAP_CSR_OUT_SHFT 0

/* =====================================================================================

  ---WFDMA_PREFETCH_SRAM_MBIST_CTRL0 (0x18027000 + 0x04)---

    SLEEP_TEST[0]                - (RW) SLEEP_TEST
    SLEEP_INV[1]                 - (RW) SLEEP_INV
    SLEEP_W[2]                   - (RW) SLEEP_W
    SLEEP_R[3]                   - (RW) SLEEP_R
    USE_DEFAULT_DELSEL[4]        - (RW) USE_DEFAULT_DELSEL
    MBIST_DEBUG[5]               - (RW) MBIST_DEBUG
    MBIST_HOLDB[6]               - (RW) MBIST_HOLDB
    MBIST_MODE[7]                - (RW) MBIST_MODE
    MBIST_RSTB[8]                - (RW) MBIST_RSTB
    MBIST_AWT[9]                 - (RW) MBIST_AWT
    MBIST_HDEN[10]               - (RW) MBIST_HDEN
    RESERVED11[31..11]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_MBIST_HDEN_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_MBIST_HDEN_MASK 0x00000400                // MBIST_HDEN[10]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_MBIST_HDEN_SHFT 10
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_MBIST_AWT_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_MBIST_AWT_MASK 0x00000200                // MBIST_AWT[9]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_MBIST_AWT_SHFT 9
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_MBIST_RSTB_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_MBIST_RSTB_MASK 0x00000100                // MBIST_RSTB[8]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_MBIST_RSTB_SHFT 8
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_MBIST_MODE_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_MBIST_MODE_MASK 0x00000080                // MBIST_MODE[7]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_MBIST_MODE_SHFT 7
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_MBIST_HOLDB_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_MBIST_HOLDB_MASK 0x00000040                // MBIST_HOLDB[6]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_MBIST_HOLDB_SHFT 6
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_MBIST_DEBUG_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_MBIST_DEBUG_MASK 0x00000020                // MBIST_DEBUG[5]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_MBIST_DEBUG_SHFT 5
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_USE_DEFAULT_DELSEL_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_USE_DEFAULT_DELSEL_MASK 0x00000010                // USE_DEFAULT_DELSEL[4]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_USE_DEFAULT_DELSEL_SHFT 4
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_SLEEP_R_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_SLEEP_R_MASK 0x00000008                // SLEEP_R[3]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_SLEEP_R_SHFT 3
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_SLEEP_W_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_SLEEP_W_MASK 0x00000004                // SLEEP_W[2]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_SLEEP_W_SHFT 2
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_SLEEP_INV_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_SLEEP_INV_MASK 0x00000002                // SLEEP_INV[1]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_SLEEP_INV_SHFT 1
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_SLEEP_TEST_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_SLEEP_TEST_MASK 0x00000001                // SLEEP_TEST[0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL0_SLEEP_TEST_SHFT 0

/* =====================================================================================

  ---WFDMA_PREFETCH_SRAM_MBIST_CTRL1 (0x18027000 + 0x08)---

    MBIST_DELSEL[31..0]          - (RW) MBIST_DELSEL

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL1_MBIST_DELSEL_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL1_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL1_MBIST_DELSEL_MASK 0xFFFFFFFF                // MBIST_DELSEL[31..0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_CTRL1_MBIST_DELSEL_SHFT 0

/* =====================================================================================

  ---WFDMA_PREFETCH_SRAM_MBIST_STATUS (0x18027000 + 0x0C)---

    MBIST_DONE[0]                - (RO) MBIST_DONE
    MBIST_FAIL_0[1]              - (RO) MBIST_FAIL_0
    RESERVED2[5..2]              - (RO) Reserved bits
    MBIST_DIAG_SCANOUT[6]        - (RO) MBIST_DIAG_SCANOUT
    RESERVED7[31..7]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_STATUS_MBIST_DIAG_SCANOUT_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_STATUS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_STATUS_MBIST_DIAG_SCANOUT_MASK 0x00000040                // MBIST_DIAG_SCANOUT[6]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_STATUS_MBIST_DIAG_SCANOUT_SHFT 6
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_STATUS_MBIST_FAIL_0_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_STATUS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_STATUS_MBIST_FAIL_0_MASK 0x00000002                // MBIST_FAIL_0[1]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_STATUS_MBIST_FAIL_0_SHFT 1
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_STATUS_MBIST_DONE_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_STATUS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_STATUS_MBIST_DONE_MASK 0x00000001                // MBIST_DONE[0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PREFETCH_SRAM_MBIST_STATUS_MBIST_DONE_SHFT 0

/* =====================================================================================

  ---WFDMA_PCIE0_AXIRD_SRAM_MBIST_CTRL0 (0x18027000 + 0x20)---

    RESERVED0[3..0]              - (RO) Reserved bits
    USE_DEFAULT_DELSEL[4]        - (RW) USE_DEFAULT_DELSEL
    RESERVED5[6..5]              - (RO) Reserved bits
    MBIST_MODE[7]                - (RW) MBIST_MODE
    MBIST_RSTB[8]                - (RW) MBIST_RSTB
    RESERVED9[31..9]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_CTRL0_MBIST_RSTB_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_CTRL0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_CTRL0_MBIST_RSTB_MASK 0x00000100                // MBIST_RSTB[8]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_CTRL0_MBIST_RSTB_SHFT 8
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_CTRL0_MBIST_MODE_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_CTRL0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_CTRL0_MBIST_MODE_MASK 0x00000080                // MBIST_MODE[7]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_CTRL0_MBIST_MODE_SHFT 7
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_CTRL0_USE_DEFAULT_DELSEL_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_CTRL0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_CTRL0_USE_DEFAULT_DELSEL_MASK 0x00000010                // USE_DEFAULT_DELSEL[4]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_CTRL0_USE_DEFAULT_DELSEL_SHFT 4

/* =====================================================================================

  ---WFDMA_PCIE0_AXIRD_SRAM_MBIST_CTRL1 (0x18027000 + 0x24)---

    MBIST_DELSEL[31..0]          - (RW) MBIST_DELSEL

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_CTRL1_MBIST_DELSEL_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_CTRL1_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_CTRL1_MBIST_DELSEL_MASK 0xFFFFFFFF                // MBIST_DELSEL[31..0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_CTRL1_MBIST_DELSEL_SHFT 0

/* =====================================================================================

  ---WFDMA_PCIE0_AXIRD_SRAM_MBIST_STATUS (0x18027000 + 0x28)---

    MBIST_DONE[0]                - (RO) MBIST_DONE
    MBIST_FAIL_0[1]              - (RO) MBIST_FAIL_0
    RESERVED2[5..2]              - (RO) Reserved bits
    MBIST_DIAG_SCANOUT[6]        - (RO) MBIST_DIAG_SCANOUT
    RESERVED7[31..7]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_STATUS_MBIST_DIAG_SCANOUT_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_STATUS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_STATUS_MBIST_DIAG_SCANOUT_MASK 0x00000040                // MBIST_DIAG_SCANOUT[6]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_STATUS_MBIST_DIAG_SCANOUT_SHFT 6
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_STATUS_MBIST_FAIL_0_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_STATUS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_STATUS_MBIST_FAIL_0_MASK 0x00000002                // MBIST_FAIL_0[1]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_STATUS_MBIST_FAIL_0_SHFT 1
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_STATUS_MBIST_DONE_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_STATUS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_STATUS_MBIST_DONE_MASK 0x00000001                // MBIST_DONE[0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE0_AXIRD_SRAM_MBIST_STATUS_MBIST_DONE_SHFT 0

/* =====================================================================================

  ---WFDMA_MSI_CONFIG (0x18027000 + 0x2C)---

    pcie0_msi_ack_mode[8..0]     - (RW) MSI ack mode
                                     0: MSI ack does not clear PDMA HOST_INT_STA automatically
                                     1: MSI ack would clear PDMA HOST_INT_STA automatically
                                     Note that MSI ack auto clear is only suitable for dedicate MSI usage without MSI sharing
                                     [7:0] - MSI for AP; [8] - MSI for MD
    pcie1_msi_ack_mode[16..9]    - (RW) MSI ack mode
                                     0: MSI ack does not clear PDMA HOST_INT_STA automatically
                                     1: MSI ack would clear PDMA HOST_INT_STA automatically
                                     Note that MSI ack auto clear is only suitable for dedicate MSI usage without MSI sharing
    msi_deassert_tmr_ticks[24..17] - (RW) MSI deassertion timer ticks in unit of host clock cycle
    msi_deassert_tmr_en[25]      - (RW) MSI deassertion timer enable
                                     1: Any MSI INT source de-assertion would ensure MSI low duration until timer is expired
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_MSI_CONFIG_msi_deassert_tmr_en_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_MSI_CONFIG_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_MSI_CONFIG_msi_deassert_tmr_en_MASK 0x02000000                // msi_deassert_tmr_en[25]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_MSI_CONFIG_msi_deassert_tmr_en_SHFT 25
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_MSI_CONFIG_msi_deassert_tmr_ticks_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_MSI_CONFIG_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_MSI_CONFIG_msi_deassert_tmr_ticks_MASK 0x01FE0000                // msi_deassert_tmr_ticks[24..17]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_MSI_CONFIG_msi_deassert_tmr_ticks_SHFT 17
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_MSI_CONFIG_pcie1_msi_ack_mode_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_MSI_CONFIG_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_MSI_CONFIG_pcie1_msi_ack_mode_MASK 0x0001FE00                // pcie1_msi_ack_mode[16..9]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_MSI_CONFIG_pcie1_msi_ack_mode_SHFT 9
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_MSI_CONFIG_pcie0_msi_ack_mode_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_MSI_CONFIG_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_MSI_CONFIG_pcie0_msi_ack_mode_MASK 0x000001FF                // pcie0_msi_ack_mode[8..0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_MSI_CONFIG_pcie0_msi_ack_mode_SHFT 0

/* =====================================================================================

  ---WFDMA_HOST_CONFIG (0x18027000 + 0x30)---

    pdma_per_band[0]             - (RW) 0: 1PCIE   1: 2PCIE
    host_wed_en[1]               - (RW) TX WED function enable
    pcie0_msi_num[3..2]          - (RW) PCIE0 MSI message number for AP - 2'h0: 1MSI , 2'h1: 2MSI , 2'h2: 4MSI , 2'h3: 8MSI
                                     MD has single MSI allocation
    pcie1_msi_num[5..4]          - (RW) PCIE1 MSI message number for AP - 2'h0: 1MSI , 2'h1: 2MSI , 2'h2: 4MSI , 2'h3: 8MSI
    usb_rxevt_ep4[6]             - (RW) RX event forward to USB IN EP4, otherwise EP5
    usb_cmdpkt_dst[7]            - (RW) 0: command packet forward to TX ring 17 (WMCPU)   1: forward to TX ring 20 (WACPU)
    RESERVED8[8]                 - (RO) Reserved bits
    pcie_dly_rx_int_en[9]        - (RW) PCIE mode RX delay interrupt enable
    RESERVED10[14..10]           - (RO) Reserved bits
    conn2ap_irq_mode[15]         - (RW) 0: single IRQ dispatch   1: multiple IRQ dispatch
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_conn2ap_irq_mode_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_conn2ap_irq_mode_MASK 0x00008000                // conn2ap_irq_mode[15]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_conn2ap_irq_mode_SHFT 15
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_pcie_dly_rx_int_en_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_pcie_dly_rx_int_en_MASK 0x00000200                // pcie_dly_rx_int_en[9]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_pcie_dly_rx_int_en_SHFT 9
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_usb_cmdpkt_dst_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_usb_cmdpkt_dst_MASK 0x00000080                // usb_cmdpkt_dst[7]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_usb_cmdpkt_dst_SHFT 7
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_usb_rxevt_ep4_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_usb_rxevt_ep4_MASK 0x00000040                // usb_rxevt_ep4[6]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_usb_rxevt_ep4_SHFT 6
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_pcie1_msi_num_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_pcie1_msi_num_MASK 0x00000030                // pcie1_msi_num[5..4]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_pcie1_msi_num_SHFT 4
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_pcie0_msi_num_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_pcie0_msi_num_MASK 0x0000000C                // pcie0_msi_num[3..2]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_pcie0_msi_num_SHFT 2
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_host_wed_en_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_host_wed_en_MASK 0x00000002                // host_wed_en[1]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_host_wed_en_SHFT 1
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_pdma_per_band_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_pdma_per_band_MASK 0x00000001                // pdma_per_band[0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HOST_CONFIG_pdma_per_band_SHFT 0

/* =====================================================================================

  ---WED_RING_CONTROL_IDX (0x18027000 + 0x34)---

    WED_TX_RING0_CONTROL_IDX[4..0] - (RW) WED ring index for TX0 control
    RESERVED5[7..5]              - (RO) Reserved bits
    WED_TX_RING1_CONTROL_IDX[12..8] - (RW) WED ring index for TX1 control
    RESERVED13[15..13]           - (RO) Reserved bits
    WED_RX_RING1_CONTROL_IDX[20..16] - (RW) WED ring index for RX1 control
    RESERVED21[31..21]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WED_RING_CONTROL_IDX_WED_RX_RING1_CONTROL_IDX_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_RING_CONTROL_IDX_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_RING_CONTROL_IDX_WED_RX_RING1_CONTROL_IDX_MASK 0x001F0000                // WED_RX_RING1_CONTROL_IDX[20..16]
#define WF_WFDMA_EXT_WRAP_CSR_WED_RING_CONTROL_IDX_WED_RX_RING1_CONTROL_IDX_SHFT 16
#define WF_WFDMA_EXT_WRAP_CSR_WED_RING_CONTROL_IDX_WED_TX_RING1_CONTROL_IDX_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_RING_CONTROL_IDX_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_RING_CONTROL_IDX_WED_TX_RING1_CONTROL_IDX_MASK 0x00001F00                // WED_TX_RING1_CONTROL_IDX[12..8]
#define WF_WFDMA_EXT_WRAP_CSR_WED_RING_CONTROL_IDX_WED_TX_RING1_CONTROL_IDX_SHFT 8
#define WF_WFDMA_EXT_WRAP_CSR_WED_RING_CONTROL_IDX_WED_TX_RING0_CONTROL_IDX_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_RING_CONTROL_IDX_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_RING_CONTROL_IDX_WED_TX_RING0_CONTROL_IDX_MASK 0x0000001F                // WED_TX_RING0_CONTROL_IDX[4..0]
#define WF_WFDMA_EXT_WRAP_CSR_WED_RING_CONTROL_IDX_WED_TX_RING0_CONTROL_IDX_SHFT 0

/* =====================================================================================

  ---DLY_INT_TICK_THRES (0x18027000 + 0x38)---

    delay_int_tick_threshold[15..0] - (RW) 1us tick generation: slow clock period = 2*(delay_int_tick_threshold)*fast_clock_cycle_time
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_DLY_INT_TICK_THRES_delay_int_tick_threshold_ADDR WF_WFDMA_EXT_WRAP_CSR_DLY_INT_TICK_THRES_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_DLY_INT_TICK_THRES_delay_int_tick_threshold_MASK 0x0000FFFF                // delay_int_tick_threshold[15..0]
#define WF_WFDMA_EXT_WRAP_CSR_DLY_INT_TICK_THRES_delay_int_tick_threshold_SHFT 0

/* =====================================================================================

  ---WFDMA_SW_RST (0x18027000 + 0x3C)---

    HIF_SW_RST[0]                - (RW) HIF side S/W reset , write 1 to trigger reset pulse then auto clear
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_SW_RST_HIF_SW_RST_ADDR     WF_WFDMA_EXT_WRAP_CSR_WFDMA_SW_RST_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_SW_RST_HIF_SW_RST_MASK     0x00000001                // HIF_SW_RST[0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_SW_RST_HIF_SW_RST_SHFT     0

/* =====================================================================================

  ---WFDMA_DBG_SEL (0x18027000 + 0x40)---

    DEBUG_SEL[1..0]              - (RW) debug select among PDMA
    RESERVED2[31..2]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_DBG_SEL_DEBUG_SEL_ADDR     WF_WFDMA_EXT_WRAP_CSR_WFDMA_DBG_SEL_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_DBG_SEL_DEBUG_SEL_MASK     0x00000003                // DEBUG_SEL[1..0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_DBG_SEL_DEBUG_SEL_SHFT     0

/* =====================================================================================

  ---WFDMA_HIF_MISC (0x18027000 + 0x44)---

    HIF_BUSY[0]                  - (RO) Inverse of idle indicator
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HIF_MISC_HIF_BUSY_ADDR     WF_WFDMA_EXT_WRAP_CSR_WFDMA_HIF_MISC_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HIF_MISC_HIF_BUSY_MASK     0x00000001                // HIF_BUSY[0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HIF_MISC_HIF_BUSY_SHFT     0

/* =====================================================================================

  ---WFDMA_AXI_SLPPROT_CTRL (0x18027000 + 0x50)---

    AXI0_SLPPROT_EN[0]           - (RW) AXI0 sleep protect enable
    AXI0_SLPPROT_RDY[1]          - (RO) AXI0 sleep protect ready
    AXI0_SLPPROT_IDLE[2]         - (RO) AXI0 sleep protect idle
    AXI0_SLPPROT_ERR[3]          - (RO) AXI0 sleep protect error
    AXI0_SLPPROT_VIO_RD[4]       - (RO) AXI0 sleep protect violated transaction is read type
    AXI0_SLPPROT_VIO_WR[5]       - (RO) AXI0 sleep protect violated transaction is write type
    RESERVED6[7..6]              - (RO) Reserved bits
    AXI0_SLPPROT_VIO_ADDR_EXT[11..8] - (RO) AXI0 sleep protect violated address [35:32]
    RESERVED12[31..12]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_CTRL_AXI0_SLPPROT_VIO_ADDR_EXT_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_CTRL_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_CTRL_AXI0_SLPPROT_VIO_ADDR_EXT_MASK 0x00000F00                // AXI0_SLPPROT_VIO_ADDR_EXT[11..8]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_CTRL_AXI0_SLPPROT_VIO_ADDR_EXT_SHFT 8
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_CTRL_AXI0_SLPPROT_VIO_WR_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_CTRL_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_CTRL_AXI0_SLPPROT_VIO_WR_MASK 0x00000020                // AXI0_SLPPROT_VIO_WR[5]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_CTRL_AXI0_SLPPROT_VIO_WR_SHFT 5
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_CTRL_AXI0_SLPPROT_VIO_RD_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_CTRL_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_CTRL_AXI0_SLPPROT_VIO_RD_MASK 0x00000010                // AXI0_SLPPROT_VIO_RD[4]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_CTRL_AXI0_SLPPROT_VIO_RD_SHFT 4
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_CTRL_AXI0_SLPPROT_ERR_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_CTRL_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_CTRL_AXI0_SLPPROT_ERR_MASK 0x00000008                // AXI0_SLPPROT_ERR[3]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_CTRL_AXI0_SLPPROT_ERR_SHFT 3
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_CTRL_AXI0_SLPPROT_IDLE_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_CTRL_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_CTRL_AXI0_SLPPROT_IDLE_MASK 0x00000004                // AXI0_SLPPROT_IDLE[2]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_CTRL_AXI0_SLPPROT_IDLE_SHFT 2
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_CTRL_AXI0_SLPPROT_RDY_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_CTRL_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_CTRL_AXI0_SLPPROT_RDY_MASK 0x00000002                // AXI0_SLPPROT_RDY[1]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_CTRL_AXI0_SLPPROT_RDY_SHFT 1
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_CTRL_AXI0_SLPPROT_EN_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_CTRL_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_CTRL_AXI0_SLPPROT_EN_MASK 0x00000001                // AXI0_SLPPROT_EN[0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_CTRL_AXI0_SLPPROT_EN_SHFT 0

/* =====================================================================================

  ---WFDMA_AXI_SLPPROT_VIO_ADDR (0x18027000 + 0x54)---

    AXI0_SLPPROT_VIO_ADDR[31..0] - (RO) AXI0 sleep protect violated address [31:0]

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_VIO_ADDR_AXI0_SLPPROT_VIO_ADDR_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_VIO_ADDR_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_VIO_ADDR_AXI0_SLPPROT_VIO_ADDR_MASK 0xFFFFFFFF                // AXI0_SLPPROT_VIO_ADDR[31..0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI_SLPPROT_VIO_ADDR_AXI0_SLPPROT_VIO_ADDR_SHFT 0

/* =====================================================================================

  ---WFDMA_MBIST_FUSE_CTRL (0x18027000 + 0x5C)---

    MBIST_FUSE_SEL[0]            - (RW) TMBIST FUSE selection
    MBIST_PREFUSE_0[16..1]       - (RO) TMBIST PREFUSE control
    RESERVED17[31..17]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_MBIST_FUSE_CTRL_MBIST_PREFUSE_0_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_MBIST_FUSE_CTRL_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_MBIST_FUSE_CTRL_MBIST_PREFUSE_0_MASK 0x0001FFFE                // MBIST_PREFUSE_0[16..1]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_MBIST_FUSE_CTRL_MBIST_PREFUSE_0_SHFT 1
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_MBIST_FUSE_CTRL_MBIST_FUSE_SEL_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_MBIST_FUSE_CTRL_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_MBIST_FUSE_CTRL_MBIST_FUSE_SEL_MASK 0x00000001                // MBIST_FUSE_SEL[0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_MBIST_FUSE_CTRL_MBIST_FUSE_SEL_SHFT 0

/* =====================================================================================

  ---WFDMA_MBIST_PREFUSE_D (0x18027000 + 0x60)---

    MBIST_PREFUSE_D[15..0]       - (RO) TMBIST PREFUSE data
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_MBIST_PREFUSE_D_MBIST_PREFUSE_D_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_MBIST_PREFUSE_D_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_MBIST_PREFUSE_D_MBIST_PREFUSE_D_MASK 0x0000FFFF                // MBIST_PREFUSE_D[15..0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_MBIST_PREFUSE_D_MBIST_PREFUSE_D_SHFT 0

/* =====================================================================================

  ---WFDMA_DCM_CTRL (0x18027000 + 0x74)---

    DCM_CTRL_CR[0]               - (RW) DCM enable for CR module
    RESERVED1[2..1]              - (RO) Reserved bits
    DCM_CTRL_BUS[3]              - (RW) DCM enable for RBUS to AXI module
    RESERVED4[4]                 - (RO) Reserved bits
    PSEL_BUSY_CNT[12..5]         - (RW) APB PSEL timer to extend DCM high speed duration
    PSEL_BUSY_CNT_UNIT[13]       - (RW) 1'b0: 1us   1'b1: host clock
    RESERVED14[14]               - (RO) Reserved bits
    TXP_SAF_MODE[15]             - (RW) 1'b0: CT mode   1'b1: Store & Forward mode
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_DCM_CTRL_TXP_SAF_MODE_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_DCM_CTRL_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_DCM_CTRL_TXP_SAF_MODE_MASK 0x00008000                // TXP_SAF_MODE[15]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_DCM_CTRL_TXP_SAF_MODE_SHFT 15
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_DCM_CTRL_PSEL_BUSY_CNT_UNIT_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_DCM_CTRL_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_DCM_CTRL_PSEL_BUSY_CNT_UNIT_MASK 0x00002000                // PSEL_BUSY_CNT_UNIT[13]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_DCM_CTRL_PSEL_BUSY_CNT_UNIT_SHFT 13
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_DCM_CTRL_PSEL_BUSY_CNT_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_DCM_CTRL_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_DCM_CTRL_PSEL_BUSY_CNT_MASK 0x00001FE0                // PSEL_BUSY_CNT[12..5]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_DCM_CTRL_PSEL_BUSY_CNT_SHFT 5
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_DCM_CTRL_DCM_CTRL_BUS_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_DCM_CTRL_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_DCM_CTRL_DCM_CTRL_BUS_MASK 0x00000008                // DCM_CTRL_BUS[3]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_DCM_CTRL_DCM_CTRL_BUS_SHFT 3
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_DCM_CTRL_DCM_CTRL_CR_ADDR  WF_WFDMA_EXT_WRAP_CSR_WFDMA_DCM_CTRL_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_DCM_CTRL_DCM_CTRL_CR_MASK  0x00000001                // DCM_CTRL_CR[0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_DCM_CTRL_DCM_CTRL_CR_SHFT  0

/* =====================================================================================

  ---WFDMA_MBIST_FUSE_CTRL1 (0x18027000 + 0x80)---

    MBIST_FUSE_LOAD_SEL[0]       - (RW) TMBIST FUSE selection - 1'b0: FUSE map = 0xFFFF, 1'b1: FUSE map from EFUSE
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_MBIST_FUSE_CTRL1_MBIST_FUSE_LOAD_SEL_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_MBIST_FUSE_CTRL1_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_MBIST_FUSE_CTRL1_MBIST_FUSE_LOAD_SEL_MASK 0x00000001                // MBIST_FUSE_LOAD_SEL[0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_MBIST_FUSE_CTRL1_MBIST_FUSE_LOAD_SEL_SHFT 0

/* =====================================================================================

  ---PCIE_RECOGNITION_ID (0x18027000 + 0x90)---

    PCIE_RECOG_ID[30..0]         - (RW) PCIE recognition ID
    PCIE_RECOG_SEM[31]           - (RC) H/W semaphore: read to clear and S/W needs to write 1 upon setting PCIE recognition ID to release semaphore

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_PCIE_RECOGNITION_ID_PCIE_RECOG_SEM_ADDR WF_WFDMA_EXT_WRAP_CSR_PCIE_RECOGNITION_ID_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_PCIE_RECOGNITION_ID_PCIE_RECOG_SEM_MASK 0x80000000                // PCIE_RECOG_SEM[31]
#define WF_WFDMA_EXT_WRAP_CSR_PCIE_RECOGNITION_ID_PCIE_RECOG_SEM_SHFT 31
#define WF_WFDMA_EXT_WRAP_CSR_PCIE_RECOGNITION_ID_PCIE_RECOG_ID_ADDR WF_WFDMA_EXT_WRAP_CSR_PCIE_RECOGNITION_ID_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_PCIE_RECOGNITION_ID_PCIE_RECOG_ID_MASK 0x7FFFFFFF                // PCIE_RECOG_ID[30..0]
#define WF_WFDMA_EXT_WRAP_CSR_PCIE_RECOGNITION_ID_PCIE_RECOG_ID_SHFT 0

/* =====================================================================================

  ---WFDMA_PF_MEM_DUMP_CTRL (0x18027000 + 0xB0)---

    PF_MEM_REQ[0]                - (RW) Debug dump request for pre-fetch SRAM
    RESERVED1[7..1]              - (RO) Reserved bits
    PF_MEM_ADDR[15..8]           - (RW) pre-fetch SRAM entry address
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PF_MEM_DUMP_CTRL_PF_MEM_ADDR_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PF_MEM_DUMP_CTRL_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PF_MEM_DUMP_CTRL_PF_MEM_ADDR_MASK 0x0000FF00                // PF_MEM_ADDR[15..8]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PF_MEM_DUMP_CTRL_PF_MEM_ADDR_SHFT 8
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PF_MEM_DUMP_CTRL_PF_MEM_REQ_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PF_MEM_DUMP_CTRL_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PF_MEM_DUMP_CTRL_PF_MEM_REQ_MASK 0x00000001                // PF_MEM_REQ[0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PF_MEM_DUMP_CTRL_PF_MEM_REQ_SHFT 0

/* =====================================================================================

  ---WFDMA_PF_MEM_DUMP_DDW0 (0x18027000 + 0xB4)---

    PF_MEM_RDATA[31..0]          - (RO) Debug dump data [31:0] for pre-fetch SRAM

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PF_MEM_DUMP_DDW0_PF_MEM_RDATA_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PF_MEM_DUMP_DDW0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PF_MEM_DUMP_DDW0_PF_MEM_RDATA_MASK 0xFFFFFFFF                // PF_MEM_RDATA[31..0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PF_MEM_DUMP_DDW0_PF_MEM_RDATA_SHFT 0

/* =====================================================================================

  ---WFDMA_PF_MEM_DUMP_DDW1 (0x18027000 + 0xB8)---

    PF_MEM_RDATA[31..0]          - (RO) Debug dump data [63:32] for pre-fetch SRAM

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PF_MEM_DUMP_DDW1_PF_MEM_RDATA_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PF_MEM_DUMP_DDW1_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PF_MEM_DUMP_DDW1_PF_MEM_RDATA_MASK 0xFFFFFFFF                // PF_MEM_RDATA[31..0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PF_MEM_DUMP_DDW1_PF_MEM_RDATA_SHFT 0

/* =====================================================================================

  ---WFDMA_HIF_PERF_MAVG_DIV (0x18027000 + 0xC0)---

    FST_ISSUE_TRAN_MAVG_DIV[2..0] - (RW) First issued transaction latency moving average divider
                                     3'h0 - input / 2
                                     3'h1 - input / 4
                                     3'h2 - input / 8
                                     3'h3 - input / 16
                                     3'h4 - input / 32
                                     3'h5 - input / 64
                                     3'h6 - input / 128
                                     3'h7 - input / 128
    FST_MPDU_MAVG_DIV[5..3]      - (RW) First MPDU time moving average divider
                                     3'h0 - input / 2
                                     3'h1 - input / 4
                                     3'h2 - input / 8
                                     3'h3 - input / 16
                                     3'h4 - input / 32
                                     3'h5 - input / 64
                                     3'h6 - input / 128
                                     3'h7 - input / 128
    RESERVED6[31..6]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HIF_PERF_MAVG_DIV_FST_MPDU_MAVG_DIV_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_HIF_PERF_MAVG_DIV_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HIF_PERF_MAVG_DIV_FST_MPDU_MAVG_DIV_MASK 0x00000038                // FST_MPDU_MAVG_DIV[5..3]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HIF_PERF_MAVG_DIV_FST_MPDU_MAVG_DIV_SHFT 3
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HIF_PERF_MAVG_DIV_FST_ISSUE_TRAN_MAVG_DIV_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_HIF_PERF_MAVG_DIV_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HIF_PERF_MAVG_DIV_FST_ISSUE_TRAN_MAVG_DIV_MASK 0x00000007                // FST_ISSUE_TRAN_MAVG_DIV[2..0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HIF_PERF_MAVG_DIV_FST_ISSUE_TRAN_MAVG_DIV_SHFT 0

/* =====================================================================================

  ---WFDMA_HIF_PERF_FST_TRAN_STS (0x18027000 + 0xC4)---

    MAVG_VALUE[15..0]            - (RO) First issued transaction latency moving average value; clear by read
    MAVG_COUNT[31..16]           - (RO) First issued transaction latency moving average count; clear by read

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HIF_PERF_FST_TRAN_STS_MAVG_COUNT_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_HIF_PERF_FST_TRAN_STS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HIF_PERF_FST_TRAN_STS_MAVG_COUNT_MASK 0xFFFF0000                // MAVG_COUNT[31..16]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HIF_PERF_FST_TRAN_STS_MAVG_COUNT_SHFT 16
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HIF_PERF_FST_TRAN_STS_MAVG_VALUE_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_HIF_PERF_FST_TRAN_STS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HIF_PERF_FST_TRAN_STS_MAVG_VALUE_MASK 0x0000FFFF                // MAVG_VALUE[15..0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_HIF_PERF_FST_TRAN_STS_MAVG_VALUE_SHFT 0

/* =====================================================================================

  ---WFDMA_BN0_FST_MPDU_TIME_STS (0x18027000 + 0xC8)---

    MAVG_VALUE[15..0]            - (RO) Band 0 first MPDU time moving average value; clear by read
    MAVG_COUNT[31..16]           - (RO) Band 0 first MPDU time moving average count; clear by read

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN0_FST_MPDU_TIME_STS_MAVG_COUNT_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN0_FST_MPDU_TIME_STS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN0_FST_MPDU_TIME_STS_MAVG_COUNT_MASK 0xFFFF0000                // MAVG_COUNT[31..16]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN0_FST_MPDU_TIME_STS_MAVG_COUNT_SHFT 16
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN0_FST_MPDU_TIME_STS_MAVG_VALUE_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN0_FST_MPDU_TIME_STS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN0_FST_MPDU_TIME_STS_MAVG_VALUE_MASK 0x0000FFFF                // MAVG_VALUE[15..0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN0_FST_MPDU_TIME_STS_MAVG_VALUE_SHFT 0

/* =====================================================================================

  ---WFDMA_BN0_FST_MPDU_LEN_STS (0x18027000 + 0xCC)---

    MAVG_VALUE[15..0]            - (RO) Band 0 first MPDU length moving average value; clear by read
    MAVG_COUNT[31..16]           - (RO) Band 0 first MPDU length moving average count; clear by read

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN0_FST_MPDU_LEN_STS_MAVG_COUNT_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN0_FST_MPDU_LEN_STS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN0_FST_MPDU_LEN_STS_MAVG_COUNT_MASK 0xFFFF0000                // MAVG_COUNT[31..16]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN0_FST_MPDU_LEN_STS_MAVG_COUNT_SHFT 16
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN0_FST_MPDU_LEN_STS_MAVG_VALUE_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN0_FST_MPDU_LEN_STS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN0_FST_MPDU_LEN_STS_MAVG_VALUE_MASK 0x0000FFFF                // MAVG_VALUE[15..0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN0_FST_MPDU_LEN_STS_MAVG_VALUE_SHFT 0

/* =====================================================================================

  ---WFDMA_BN1_FST_MPDU_TIME_STS (0x18027000 + 0xD0)---

    MAVG_VALUE[15..0]            - (RO) Band 1 first MPDU time moving average value; clear by read
    MAVG_COUNT[31..16]           - (RO) Band 1 first MPDU time moving average count; clear by read

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN1_FST_MPDU_TIME_STS_MAVG_COUNT_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN1_FST_MPDU_TIME_STS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN1_FST_MPDU_TIME_STS_MAVG_COUNT_MASK 0xFFFF0000                // MAVG_COUNT[31..16]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN1_FST_MPDU_TIME_STS_MAVG_COUNT_SHFT 16
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN1_FST_MPDU_TIME_STS_MAVG_VALUE_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN1_FST_MPDU_TIME_STS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN1_FST_MPDU_TIME_STS_MAVG_VALUE_MASK 0x0000FFFF                // MAVG_VALUE[15..0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN1_FST_MPDU_TIME_STS_MAVG_VALUE_SHFT 0

/* =====================================================================================

  ---WFDMA_BN1_FST_MPDU_LEN_STS (0x18027000 + 0xD4)---

    MAVG_VALUE[15..0]            - (RO) Band 1 first MPDU length moving average value; clear by read
    MAVG_COUNT[31..16]           - (RO) Band 1 first MPDU length moving average count; clear by read

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN1_FST_MPDU_LEN_STS_MAVG_COUNT_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN1_FST_MPDU_LEN_STS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN1_FST_MPDU_LEN_STS_MAVG_COUNT_MASK 0xFFFF0000                // MAVG_COUNT[31..16]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN1_FST_MPDU_LEN_STS_MAVG_COUNT_SHFT 16
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN1_FST_MPDU_LEN_STS_MAVG_VALUE_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN1_FST_MPDU_LEN_STS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN1_FST_MPDU_LEN_STS_MAVG_VALUE_MASK 0x0000FFFF                // MAVG_VALUE[15..0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_BN1_FST_MPDU_LEN_STS_MAVG_VALUE_SHFT 0

/* =====================================================================================

  ---WFDMA_PCIE1_AXIRD_SRAM_MBIST_CTRL0 (0x18027000 + 0xE0)---

    RESERVED0[3..0]              - (RO) Reserved bits
    USE_DEFAULT_DELSEL[4]        - (RW) USE_DEFAULT_DELSEL
    RESERVED5[6..5]              - (RO) Reserved bits
    MBIST_MODE[7]                - (RW) MBIST_MODE
    MBIST_RSTB[8]                - (RW) MBIST_RSTB
    RESERVED9[31..9]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_CTRL0_MBIST_RSTB_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_CTRL0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_CTRL0_MBIST_RSTB_MASK 0x00000100                // MBIST_RSTB[8]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_CTRL0_MBIST_RSTB_SHFT 8
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_CTRL0_MBIST_MODE_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_CTRL0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_CTRL0_MBIST_MODE_MASK 0x00000080                // MBIST_MODE[7]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_CTRL0_MBIST_MODE_SHFT 7
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_CTRL0_USE_DEFAULT_DELSEL_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_CTRL0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_CTRL0_USE_DEFAULT_DELSEL_MASK 0x00000010                // USE_DEFAULT_DELSEL[4]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_CTRL0_USE_DEFAULT_DELSEL_SHFT 4

/* =====================================================================================

  ---WFDMA_PCIE1_AXIRD_SRAM_MBIST_CTRL1 (0x18027000 + 0xE4)---

    MBIST_DELSEL[31..0]          - (RW) MBIST_DELSEL

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_CTRL1_MBIST_DELSEL_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_CTRL1_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_CTRL1_MBIST_DELSEL_MASK 0xFFFFFFFF                // MBIST_DELSEL[31..0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_CTRL1_MBIST_DELSEL_SHFT 0

/* =====================================================================================

  ---WFDMA_PCIE1_AXIRD_SRAM_MBIST_STATUS (0x18027000 + 0xE8)---

    MBIST_DONE[0]                - (RO) MBIST_DONE
    MBIST_FAIL_0[1]              - (RO) MBIST_FAIL_0
    RESERVED2[5..2]              - (RO) Reserved bits
    MBIST_DIAG_SCANOUT[6]        - (RO) MBIST_DIAG_SCANOUT
    RESERVED7[31..7]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_STATUS_MBIST_DIAG_SCANOUT_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_STATUS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_STATUS_MBIST_DIAG_SCANOUT_MASK 0x00000040                // MBIST_DIAG_SCANOUT[6]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_STATUS_MBIST_DIAG_SCANOUT_SHFT 6
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_STATUS_MBIST_FAIL_0_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_STATUS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_STATUS_MBIST_FAIL_0_MASK 0x00000002                // MBIST_FAIL_0[1]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_STATUS_MBIST_FAIL_0_SHFT 1
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_STATUS_MBIST_DONE_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_STATUS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_STATUS_MBIST_DONE_MASK 0x00000001                // MBIST_DONE[0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_PCIE1_AXIRD_SRAM_MBIST_STATUS_MBIST_DONE_SHFT 0

/* =====================================================================================

  ---WED_HOST_INT_STA (0x18027000 + 0x200)---

    host_dma_rx_done_int_sts_0[0] - (W1C) RX Queue#0 packet receive interrupt
                                     Write 1 to clear the interrupt
                                     Read to get the raw interrupt status
    host_dma_rx_done_int_sts_1[1] - (W1C) RX Queue#1 packet receive interrupt
                                     Write 1 to clear the interrupt
                                     Read to get the raw interrupt status
    host_dma_rx_done_int_sts_2[2] - (W1C) RX Queue#2 packet receive interrupt
                                     Write 1 to clear the interrupt
                                     Read to get the raw interrupt status
    host_dma_rx_done_int_sts_3[3] - (W1C) RX Queue#3 packet receive interrupt
                                     Write 1 to clear the interrupt
                                     Read to get the raw interrupt status
    host_dma_tx_done_int_sts_0[4] - (W1C) TX Queue#0 packet transmit interrupt
                                     Write 1 to clear the interrupt
    host_dma_tx_done_int_sts_1[5] - (W1C) TX Queue#1 packet transmit interrupt
                                     Write 1 to clear the interrupt
    RESERVED6[16..6]             - (RO) Reserved bits
    host_dma_wacpu_evt_int_sts[17] - (W1C) RX Queue#1 packet receive interrupt
                                     Write 1 to clear the interrupt
                                     Read to get the raw interrupt status
    host_dma_rx_done_int_sts_4[18] - (W1C) RX Queue#4 packet receive interrupt
                                     Write 1 to clear the interrupt
                                     Read to get the raw interrupt status
    host_dma_rx_done_int_sts_5[19] - (W1C) RX Queue#5 packet receive interrupt
                                     Write 1 to clear the interrupt
                                     Read to get the raw interrupt status
    host_dma_rx_coherent_int_sts[20] - (W1C) RX_DMA finds data coherent event when checking ddone bit
                                     Write 1 to clear the interrupt
                                     Read to get the raw interrupt status
    host_dma_tx_coherent_int_sts[21] - (W1C) TX_DMA finds data coherent event when checking ddone bit
                                     Write 1 to clear the interrupt
                                     Read to get the raw interrupt status
    RESERVED22[23..22]           - (RO) Reserved bits
    host_dma_wpdma2host_err_int_sts[24] - (W1C) wpdma interrupt overall status
                                     User should should check WPDMA_ERR_INT_STA for each wpdma error interrupt status 
                                     Host could read [0x0_41E8] to check indivisual wpdma2host_error interrupt status
    host_dma_tx_done_int_sts_20[25] - (W1C) TX Queue#20 packet transmit interrupt
                                     Write 1 to clear the interrupt
    host_dma_tx_done_int_sts_16[26] - (W1C) TX Queue#16 packet transmit interrupt
                                     Write 1 to clear the interrupt
    host_dma_tx_done_int_sts_17[27] - (W1C) TX Queue#17 packet transmit interrupt
                                     Write 1 to clear the interrupt
    host_dma_subsys_int_sts[28]  - (W1C) subsys interrupt overall status
                                     User should should check SUBSYS2HOST_INT_STA for each interrupt status 
                                     Host could read [0x0_41F8] to check indivisual subsys hw interrupt status
    host_dma_mcu2host_sw_int_sts[29] - (W1C) subsys interrupt overall status
                                     User should should check SUBSYS2HOST_INT_STA for each interrupt status 
                                     Host could read [0x0_41F8] to check indivisual subsys hw interrupt status
    host_dma_tx_done_int_sts_18[30] - (W1C) TX Queue#18 packet transmit interrupt
                                     Write 1 to clear the interrupt
    host_dma_tx_done_int_sts_19[31] - (W1C) TX Queue#19 packet transmit interrupt
                                     Write 1 to clear the interrupt

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_tx_done_int_sts_19_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_tx_done_int_sts_19_MASK 0x80000000                // host_dma_tx_done_int_sts_19[31]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_tx_done_int_sts_19_SHFT 31
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_tx_done_int_sts_18_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_tx_done_int_sts_18_MASK 0x40000000                // host_dma_tx_done_int_sts_18[30]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_tx_done_int_sts_18_SHFT 30
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_mcu2host_sw_int_sts_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_mcu2host_sw_int_sts_MASK 0x20000000                // host_dma_mcu2host_sw_int_sts[29]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_mcu2host_sw_int_sts_SHFT 29
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_subsys_int_sts_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_subsys_int_sts_MASK 0x10000000                // host_dma_subsys_int_sts[28]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_subsys_int_sts_SHFT 28
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_tx_done_int_sts_17_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_tx_done_int_sts_17_MASK 0x08000000                // host_dma_tx_done_int_sts_17[27]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_tx_done_int_sts_17_SHFT 27
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_tx_done_int_sts_16_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_tx_done_int_sts_16_MASK 0x04000000                // host_dma_tx_done_int_sts_16[26]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_tx_done_int_sts_16_SHFT 26
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_tx_done_int_sts_20_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_tx_done_int_sts_20_MASK 0x02000000                // host_dma_tx_done_int_sts_20[25]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_tx_done_int_sts_20_SHFT 25
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_wpdma2host_err_int_sts_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_wpdma2host_err_int_sts_MASK 0x01000000                // host_dma_wpdma2host_err_int_sts[24]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_wpdma2host_err_int_sts_SHFT 24
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_tx_coherent_int_sts_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_tx_coherent_int_sts_MASK 0x00200000                // host_dma_tx_coherent_int_sts[21]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_tx_coherent_int_sts_SHFT 21
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_rx_coherent_int_sts_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_rx_coherent_int_sts_MASK 0x00100000                // host_dma_rx_coherent_int_sts[20]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_rx_coherent_int_sts_SHFT 20
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_rx_done_int_sts_5_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_rx_done_int_sts_5_MASK 0x00080000                // host_dma_rx_done_int_sts_5[19]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_rx_done_int_sts_5_SHFT 19
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_rx_done_int_sts_4_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_rx_done_int_sts_4_MASK 0x00040000                // host_dma_rx_done_int_sts_4[18]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_rx_done_int_sts_4_SHFT 18
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_wacpu_evt_int_sts_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_wacpu_evt_int_sts_MASK 0x00020000                // host_dma_wacpu_evt_int_sts[17]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_wacpu_evt_int_sts_SHFT 17
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_tx_done_int_sts_1_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_tx_done_int_sts_1_MASK 0x00000020                // host_dma_tx_done_int_sts_1[5]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_tx_done_int_sts_1_SHFT 5
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_tx_done_int_sts_0_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_tx_done_int_sts_0_MASK 0x00000010                // host_dma_tx_done_int_sts_0[4]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_tx_done_int_sts_0_SHFT 4
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_rx_done_int_sts_3_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_rx_done_int_sts_3_MASK 0x00000008                // host_dma_rx_done_int_sts_3[3]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_rx_done_int_sts_3_SHFT 3
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_rx_done_int_sts_2_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_rx_done_int_sts_2_MASK 0x00000004                // host_dma_rx_done_int_sts_2[2]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_rx_done_int_sts_2_SHFT 2
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_rx_done_int_sts_1_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_rx_done_int_sts_1_MASK 0x00000002                // host_dma_rx_done_int_sts_1[1]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_rx_done_int_sts_1_SHFT 1
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_rx_done_int_sts_0_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_rx_done_int_sts_0_MASK 0x00000001                // host_dma_rx_done_int_sts_0[0]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_STA_host_dma_rx_done_int_sts_0_SHFT 0

/* =====================================================================================

  ---WED_HOST_INT_ENA (0x18027000 + 0x204)---

    host_dma_rx_done_int_ena_0[0] - (RW) RX Queue#0 packet receive interrupt
    host_dma_rx_done_int_ena_1[1] - (RW) RX Queue#1 packet receive interrupt
    host_dma_rx_done_int_ena_2[2] - (RW) RX Queue#2 packet receive interrupt
    host_dma_rx_done_int_ena_3[3] - (RW) RX Queue#3 packet receive interrupt
    host_dma_tx_done_int_ena_0[4] - (RW) TX Queue#0 packet transmit interrupt
    host_dma_tx_done_int_ena_1[5] - (RW) TX Queue#1 packet transmit interrupt
    RESERVED6[16..6]             - (RO) Reserved bits
    host_dma_wacpu_evt_int_ena[17] - (RW) RX Queue#1 packet receive interrupt
    host_dma_rx_done_int_ena_4[18] - (RW) RX Queue#4 packet receive interrupt
    host_dma_rx_done_int_ena_5[19] - (RW) RX Queue#5 packet receive interrupt
    host_dma_rx_coherent_int_ena[20] - (RW) Enable for RX_DMA data coherent interrupt
    host_dma_tx_coherent_int_ena[21] - (RW) Enable for TX_DMA data coherent interrupt
    RESERVED22[23..22]           - (RO) Reserved bits
    host_dma_wpdma2host_err_int_ena[24] - (RW) Enable bit of wpdma2host_err_int
    host_dma_tx_done_int_ena_20[25] - (RW) TX Queue#20 packet transmit interrupt
    host_dma_tx_done_int_ena_16[26] - (RW) TX Queue#16 packet transmit interrupt
    host_dma_tx_done_int_ena_17[27] - (RW) TX Queue#17 packet transmit interrupt
    host_dma_subsys_int_ena[28]  - (RW) Enable bit of subsys_int
    host_dma_mcu2host_sw_int_ena[29] - (RW) Enable bit of mcu2host_sw_int
    host_dma_tx_done_int_ena_18[30] - (RW) TX Queue#18 packet transmit interrupt
    host_dma_tx_done_int_ena_19[31] - (RW) TX Queue#19 packet transmit interrupt

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_tx_done_int_ena_19_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_tx_done_int_ena_19_MASK 0x80000000                // host_dma_tx_done_int_ena_19[31]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_tx_done_int_ena_19_SHFT 31
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_tx_done_int_ena_18_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_tx_done_int_ena_18_MASK 0x40000000                // host_dma_tx_done_int_ena_18[30]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_tx_done_int_ena_18_SHFT 30
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_mcu2host_sw_int_ena_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_mcu2host_sw_int_ena_MASK 0x20000000                // host_dma_mcu2host_sw_int_ena[29]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_mcu2host_sw_int_ena_SHFT 29
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_subsys_int_ena_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_subsys_int_ena_MASK 0x10000000                // host_dma_subsys_int_ena[28]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_subsys_int_ena_SHFT 28
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_tx_done_int_ena_17_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_tx_done_int_ena_17_MASK 0x08000000                // host_dma_tx_done_int_ena_17[27]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_tx_done_int_ena_17_SHFT 27
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_tx_done_int_ena_16_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_tx_done_int_ena_16_MASK 0x04000000                // host_dma_tx_done_int_ena_16[26]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_tx_done_int_ena_16_SHFT 26
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_tx_done_int_ena_20_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_tx_done_int_ena_20_MASK 0x02000000                // host_dma_tx_done_int_ena_20[25]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_tx_done_int_ena_20_SHFT 25
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_wpdma2host_err_int_ena_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_wpdma2host_err_int_ena_MASK 0x01000000                // host_dma_wpdma2host_err_int_ena[24]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_wpdma2host_err_int_ena_SHFT 24
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_tx_coherent_int_ena_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_tx_coherent_int_ena_MASK 0x00200000                // host_dma_tx_coherent_int_ena[21]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_tx_coherent_int_ena_SHFT 21
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_rx_coherent_int_ena_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_rx_coherent_int_ena_MASK 0x00100000                // host_dma_rx_coherent_int_ena[20]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_rx_coherent_int_ena_SHFT 20
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_rx_done_int_ena_5_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_rx_done_int_ena_5_MASK 0x00080000                // host_dma_rx_done_int_ena_5[19]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_rx_done_int_ena_5_SHFT 19
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_rx_done_int_ena_4_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_rx_done_int_ena_4_MASK 0x00040000                // host_dma_rx_done_int_ena_4[18]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_rx_done_int_ena_4_SHFT 18
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_wacpu_evt_int_ena_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_wacpu_evt_int_ena_MASK 0x00020000                // host_dma_wacpu_evt_int_ena[17]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_wacpu_evt_int_ena_SHFT 17
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_tx_done_int_ena_1_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_tx_done_int_ena_1_MASK 0x00000020                // host_dma_tx_done_int_ena_1[5]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_tx_done_int_ena_1_SHFT 5
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_tx_done_int_ena_0_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_tx_done_int_ena_0_MASK 0x00000010                // host_dma_tx_done_int_ena_0[4]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_tx_done_int_ena_0_SHFT 4
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_rx_done_int_ena_3_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_rx_done_int_ena_3_MASK 0x00000008                // host_dma_rx_done_int_ena_3[3]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_rx_done_int_ena_3_SHFT 3
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_rx_done_int_ena_2_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_rx_done_int_ena_2_MASK 0x00000004                // host_dma_rx_done_int_ena_2[2]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_rx_done_int_ena_2_SHFT 2
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_rx_done_int_ena_1_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_rx_done_int_ena_1_MASK 0x00000002                // host_dma_rx_done_int_ena_1[1]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_rx_done_int_ena_1_SHFT 1
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_rx_done_int_ena_0_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_rx_done_int_ena_0_MASK 0x00000001                // host_dma_rx_done_int_ena_0[0]
#define WF_WFDMA_EXT_WRAP_CSR_WED_HOST_INT_ENA_host_dma_rx_done_int_ena_0_SHFT 0

/* =====================================================================================

  ---WED_TX0_CTRL0 (0x18027000 + 0x300)---

    WED_TX_RING0_CTRL0[31..0]    - (RW) WED TX ring 0 control 0

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX0_CTRL0_WED_TX_RING0_CTRL0_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_TX0_CTRL0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX0_CTRL0_WED_TX_RING0_CTRL0_MASK 0xFFFFFFFF                // WED_TX_RING0_CTRL0[31..0]
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX0_CTRL0_WED_TX_RING0_CTRL0_SHFT 0

/* =====================================================================================

  ---WED_TX0_CTRL1 (0x18027000 + 0x304)---

    WED_TX_RING0_CTRL1[31..0]    - (RW) WED TX ring 0 control 1

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX0_CTRL1_WED_TX_RING0_CTRL1_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_TX0_CTRL1_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX0_CTRL1_WED_TX_RING0_CTRL1_MASK 0xFFFFFFFF                // WED_TX_RING0_CTRL1[31..0]
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX0_CTRL1_WED_TX_RING0_CTRL1_SHFT 0

/* =====================================================================================

  ---WED_TX0_CTRL2 (0x18027000 + 0x308)---

    WED_TX_RING0_CTRL2[31..0]    - (RW) WED TX ring 0 control 2

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX0_CTRL2_WED_TX_RING0_CTRL2_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_TX0_CTRL2_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX0_CTRL2_WED_TX_RING0_CTRL2_MASK 0xFFFFFFFF                // WED_TX_RING0_CTRL2[31..0]
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX0_CTRL2_WED_TX_RING0_CTRL2_SHFT 0

/* =====================================================================================

  ---WED_TX0_STS (0x18027000 + 0x30C)---

    WED_TX_RING0_DIDX[11..0]     - (RO) WED TX ring 0 DMA index
    RESERVED12[31..12]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX0_STS_WED_TX_RING0_DIDX_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_TX0_STS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX0_STS_WED_TX_RING0_DIDX_MASK 0x00000FFF                // WED_TX_RING0_DIDX[11..0]
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX0_STS_WED_TX_RING0_DIDX_SHFT 0

/* =====================================================================================

  ---WED_TX1_CTRL0 (0x18027000 + 0x310)---

    WED_TX_RING1_CTRL0[31..0]    - (RW) WED TX ring 1 control 0

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX1_CTRL0_WED_TX_RING1_CTRL0_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_TX1_CTRL0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX1_CTRL0_WED_TX_RING1_CTRL0_MASK 0xFFFFFFFF                // WED_TX_RING1_CTRL0[31..0]
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX1_CTRL0_WED_TX_RING1_CTRL0_SHFT 0

/* =====================================================================================

  ---WED_TX1_CTRL1 (0x18027000 + 0x314)---

    WED_TX_RING1_CTRL1[31..0]    - (RW) WED TX ring 1 control 1

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX1_CTRL1_WED_TX_RING1_CTRL1_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_TX1_CTRL1_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX1_CTRL1_WED_TX_RING1_CTRL1_MASK 0xFFFFFFFF                // WED_TX_RING1_CTRL1[31..0]
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX1_CTRL1_WED_TX_RING1_CTRL1_SHFT 0

/* =====================================================================================

  ---WED_TX1_CTRL2 (0x18027000 + 0x318)---

    WED_TX_RING1_CTRL2[31..0]    - (RW) WED TX ring 1 control 2

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX1_CTRL2_WED_TX_RING1_CTRL2_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_TX1_CTRL2_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX1_CTRL2_WED_TX_RING1_CTRL2_MASK 0xFFFFFFFF                // WED_TX_RING1_CTRL2[31..0]
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX1_CTRL2_WED_TX_RING1_CTRL2_SHFT 0

/* =====================================================================================

  ---WED_TX1_STS (0x18027000 + 0x31C)---

    WED_TX_RING1_DIDX[11..0]     - (RO) WED TX ring 1 DMA index
    RESERVED12[31..12]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX1_STS_WED_TX_RING1_DIDX_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_TX1_STS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX1_STS_WED_TX_RING1_DIDX_MASK 0x00000FFF                // WED_TX_RING1_DIDX[11..0]
#define WF_WFDMA_EXT_WRAP_CSR_WED_TX1_STS_WED_TX_RING1_DIDX_SHFT 0

/* =====================================================================================

  ---WED_RX1_CTRL0 (0x18027000 + 0x410)---

    WED_RX_RING1_CTRL0[31..0]    - (RW) WED RX ring 1 control 0

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WED_RX1_CTRL0_WED_RX_RING1_CTRL0_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_RX1_CTRL0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_RX1_CTRL0_WED_RX_RING1_CTRL0_MASK 0xFFFFFFFF                // WED_RX_RING1_CTRL0[31..0]
#define WF_WFDMA_EXT_WRAP_CSR_WED_RX1_CTRL0_WED_RX_RING1_CTRL0_SHFT 0

/* =====================================================================================

  ---WED_RX1_CTRL1 (0x18027000 + 0x414)---

    WED_RX_RING1_CTRL1[31..0]    - (RW) WED RX ring 1 control 1

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WED_RX1_CTRL1_WED_RX_RING1_CTRL1_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_RX1_CTRL1_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_RX1_CTRL1_WED_RX_RING1_CTRL1_MASK 0xFFFFFFFF                // WED_RX_RING1_CTRL1[31..0]
#define WF_WFDMA_EXT_WRAP_CSR_WED_RX1_CTRL1_WED_RX_RING1_CTRL1_SHFT 0

/* =====================================================================================

  ---WED_RX1_CTRL2 (0x18027000 + 0x418)---

    WED_RX_RING1_CTRL2[31..0]    - (RW) WED RX ring 1 control 2

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WED_RX1_CTRL2_WED_RX_RING1_CTRL2_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_RX1_CTRL2_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_RX1_CTRL2_WED_RX_RING1_CTRL2_MASK 0xFFFFFFFF                // WED_RX_RING1_CTRL2[31..0]
#define WF_WFDMA_EXT_WRAP_CSR_WED_RX1_CTRL2_WED_RX_RING1_CTRL2_SHFT 0

/* =====================================================================================

  ---WED_RX1_STS (0x18027000 + 0x41C)---

    WED_RX_RING1_DIDX[11..0]     - (RO) WED RX ring 1 DMA index
    RESERVED12[31..12]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WED_RX1_STS_WED_RX_RING1_DIDX_ADDR WF_WFDMA_EXT_WRAP_CSR_WED_RX1_STS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WED_RX1_STS_WED_RX_RING1_DIDX_MASK 0x00000FFF                // WED_RX_RING1_DIDX[11..0]
#define WF_WFDMA_EXT_WRAP_CSR_WED_RX1_STS_WED_RX_RING1_DIDX_SHFT 0

/* =====================================================================================

  ---WFDMA_AXI0_R2A_CTRL_0 (0x18027000 + 0x500)---

    RD_OUTSTAND_NUM[3..0]        - (RW) AXI read outstanding number
    LAST_NONBUF[4]               - (RW) Last nonbuf
    BUFFERABLE[5]                - (RW) Bufferable
    BURST_SIZE[7..6]             - (RW) AXI burst size   2'h0: 128B , 2'h1: 256B
    SLEEP_MODE[9..8]             - (RW) Sleep mode
    BRESP_ERR_CHK_BYP[10]        - (RW) BRESP error check bypass enable
    BID_CHK_BYP[11]              - (RW) BID check bypass enable
    BUFRDY_BYP[12]               - (RW) Buffer ready bypass enable
    CLKGATE_BYP[13]              - (RW) Clock gating bypass enable
    RX_ERR_EN[14]                - (RW) RX error detect enable
    TX_ERR_EN[15]                - (RW) TX error detect enable
    TX_ERR_TH[23..16]            - (RW) TX error timer threshold
    RX_ERR_TH[31..24]            - (RW) RX error timer threshold

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_RX_ERR_TH_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_RX_ERR_TH_MASK 0xFF000000                // RX_ERR_TH[31..24]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_RX_ERR_TH_SHFT 24
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_TX_ERR_TH_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_TX_ERR_TH_MASK 0x00FF0000                // TX_ERR_TH[23..16]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_TX_ERR_TH_SHFT 16
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_TX_ERR_EN_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_TX_ERR_EN_MASK 0x00008000                // TX_ERR_EN[15]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_TX_ERR_EN_SHFT 15
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_RX_ERR_EN_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_RX_ERR_EN_MASK 0x00004000                // RX_ERR_EN[14]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_RX_ERR_EN_SHFT 14
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_CLKGATE_BYP_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_CLKGATE_BYP_MASK 0x00002000                // CLKGATE_BYP[13]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_CLKGATE_BYP_SHFT 13
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_BUFRDY_BYP_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_BUFRDY_BYP_MASK 0x00001000                // BUFRDY_BYP[12]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_BUFRDY_BYP_SHFT 12
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_BID_CHK_BYP_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_BID_CHK_BYP_MASK 0x00000800                // BID_CHK_BYP[11]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_BID_CHK_BYP_SHFT 11
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_BRESP_ERR_CHK_BYP_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_BRESP_ERR_CHK_BYP_MASK 0x00000400                // BRESP_ERR_CHK_BYP[10]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_BRESP_ERR_CHK_BYP_SHFT 10
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_SLEEP_MODE_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_SLEEP_MODE_MASK 0x00000300                // SLEEP_MODE[9..8]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_SLEEP_MODE_SHFT 8
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_BURST_SIZE_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_BURST_SIZE_MASK 0x000000C0                // BURST_SIZE[7..6]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_BURST_SIZE_SHFT 6
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_BUFFERABLE_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_BUFFERABLE_MASK 0x00000020                // BUFFERABLE[5]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_BUFFERABLE_SHFT 5
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_LAST_NONBUF_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_LAST_NONBUF_MASK 0x00000010                // LAST_NONBUF[4]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_LAST_NONBUF_SHFT 4
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_RD_OUTSTAND_NUM_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_RD_OUTSTAND_NUM_MASK 0x0000000F                // RD_OUTSTAND_NUM[3..0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_0_RD_OUTSTAND_NUM_SHFT 0

/* =====================================================================================

  ---WFDMA_AXI0_R2A_CTRL_1 (0x18027000 + 0x504)---

    LIMITER_SEL[0]               - (RW) LIMITER_SEL
    LIMITER_RX_RD_EN[2..1]       - (RW) LIMITER_RX_RD_EN
    LIMITER_RX_RD_1[8..3]        - (RW) LIMITER_RX_RD_1
    LIMITER_RX_RD_0[14..9]       - (RW) LIMITER_RX_RD_0
    LIMITER_RX_WR_EN[16..15]     - (RW) LIMITER_RX_WR_EN
    LIMITER_RX_WR_1[22..17]      - (RW) LIMITER_RX_WR_1
    LIMITER_RX_WR_0[28..23]      - (RW) LIMITER_RX_WR_0
    RESERVED29[31..29]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_1_LIMITER_RX_WR_0_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_1_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_1_LIMITER_RX_WR_0_MASK 0x1F800000                // LIMITER_RX_WR_0[28..23]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_1_LIMITER_RX_WR_0_SHFT 23
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_1_LIMITER_RX_WR_1_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_1_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_1_LIMITER_RX_WR_1_MASK 0x007E0000                // LIMITER_RX_WR_1[22..17]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_1_LIMITER_RX_WR_1_SHFT 17
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_1_LIMITER_RX_WR_EN_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_1_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_1_LIMITER_RX_WR_EN_MASK 0x00018000                // LIMITER_RX_WR_EN[16..15]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_1_LIMITER_RX_WR_EN_SHFT 15
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_1_LIMITER_RX_RD_0_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_1_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_1_LIMITER_RX_RD_0_MASK 0x00007E00                // LIMITER_RX_RD_0[14..9]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_1_LIMITER_RX_RD_0_SHFT 9
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_1_LIMITER_RX_RD_1_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_1_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_1_LIMITER_RX_RD_1_MASK 0x000001F8                // LIMITER_RX_RD_1[8..3]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_1_LIMITER_RX_RD_1_SHFT 3
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_1_LIMITER_RX_RD_EN_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_1_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_1_LIMITER_RX_RD_EN_MASK 0x00000006                // LIMITER_RX_RD_EN[2..1]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_1_LIMITER_RX_RD_EN_SHFT 1
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_1_LIMITER_SEL_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_1_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_1_LIMITER_SEL_MASK 0x00000001                // LIMITER_SEL[0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_1_LIMITER_SEL_SHFT 0

/* =====================================================================================

  ---WFDMA_AXI0_R2A_CTRL_2 (0x18027000 + 0x508)---

    LOCK_MAX_CNT[4..0]           - (RW) LOCK_MAX_CNT
    LOCK_MAX_CNT_EN[5]           - (RW) LOCK_MAX_CNT_EN
    ERR_FLAGS_CLR[6]             - (RW) ERR_FLAGS_CLR
    WFIFO_LAST_SW_CTL[7]         - (RW) WFIFO_LAST_SW_CTL
    LOCK_RLS_CNT[23..8]          - (RW) LOCK_RLS_CNT
    LOCK_RLS_EN[24]              - (RW) LOCK_RLS_EN
    AXI_RD_OUT_OF_ORDER[25]      - (RW) AXI read supports out-of-order response data
    RESERVED26[27..26]           - (RO) Reserved bits
    WR_OUTSTAND_NUM[31..28]      - (RW) AXI write outstanding number

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_WR_OUTSTAND_NUM_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_WR_OUTSTAND_NUM_MASK 0xF0000000                // WR_OUTSTAND_NUM[31..28]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_WR_OUTSTAND_NUM_SHFT 28
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_AXI_RD_OUT_OF_ORDER_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_AXI_RD_OUT_OF_ORDER_MASK 0x02000000                // AXI_RD_OUT_OF_ORDER[25]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_AXI_RD_OUT_OF_ORDER_SHFT 25
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_LOCK_RLS_EN_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_LOCK_RLS_EN_MASK 0x01000000                // LOCK_RLS_EN[24]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_LOCK_RLS_EN_SHFT 24
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_LOCK_RLS_CNT_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_LOCK_RLS_CNT_MASK 0x00FFFF00                // LOCK_RLS_CNT[23..8]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_LOCK_RLS_CNT_SHFT 8
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_WFIFO_LAST_SW_CTL_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_WFIFO_LAST_SW_CTL_MASK 0x00000080                // WFIFO_LAST_SW_CTL[7]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_WFIFO_LAST_SW_CTL_SHFT 7
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_ERR_FLAGS_CLR_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_ERR_FLAGS_CLR_MASK 0x00000040                // ERR_FLAGS_CLR[6]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_ERR_FLAGS_CLR_SHFT 6
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_LOCK_MAX_CNT_EN_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_LOCK_MAX_CNT_EN_MASK 0x00000020                // LOCK_MAX_CNT_EN[5]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_LOCK_MAX_CNT_EN_SHFT 5
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_LOCK_MAX_CNT_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_LOCK_MAX_CNT_MASK 0x0000001F                // LOCK_MAX_CNT[4..0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_CTRL_2_LOCK_MAX_CNT_SHFT 0

/* =====================================================================================

  ---WFDMA_AXI0_R2A_STS (0x18027000 + 0x50C)---

    RD_AXI_ERR_DET_INT[0]        - (RO) RD_AXI_ERR_DET_INT
    WR_AXI_ERR_DET_INT[1]        - (RO) WR_AXI_ERR_DET_INT
    ERR_PORT_RD_DAT_RID[2]       - (RO) ERR_PORT_RD_DAT_RID
    RRESP_ERR_STS[10..3]         - (RO) RRESP_ERR_STS
    RRESP_ERR[11]                - (RO) RRESP_ERR
    BRESP_ERR_STS[19..12]        - (RO) BRESP_ERR_STS
    BRESP_ERR[20]                - (RO) BRESP_ERR
    RESERVED21[31..21]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_STS_BRESP_ERR_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_STS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_STS_BRESP_ERR_MASK 0x00100000                // BRESP_ERR[20]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_STS_BRESP_ERR_SHFT 20
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_STS_BRESP_ERR_STS_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_STS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_STS_BRESP_ERR_STS_MASK 0x000FF000                // BRESP_ERR_STS[19..12]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_STS_BRESP_ERR_STS_SHFT 12
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_STS_RRESP_ERR_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_STS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_STS_RRESP_ERR_MASK 0x00000800                // RRESP_ERR[11]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_STS_RRESP_ERR_SHFT 11
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_STS_RRESP_ERR_STS_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_STS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_STS_RRESP_ERR_STS_MASK 0x000007F8                // RRESP_ERR_STS[10..3]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_STS_RRESP_ERR_STS_SHFT 3
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_STS_ERR_PORT_RD_DAT_RID_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_STS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_STS_ERR_PORT_RD_DAT_RID_MASK 0x00000004                // ERR_PORT_RD_DAT_RID[2]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_STS_ERR_PORT_RD_DAT_RID_SHFT 2
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_STS_WR_AXI_ERR_DET_INT_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_STS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_STS_WR_AXI_ERR_DET_INT_MASK 0x00000002                // WR_AXI_ERR_DET_INT[1]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_STS_WR_AXI_ERR_DET_INT_SHFT 1
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_STS_RD_AXI_ERR_DET_INT_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_STS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_STS_RD_AXI_ERR_DET_INT_MASK 0x00000001                // RD_AXI_ERR_DET_INT[0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_STS_RD_AXI_ERR_DET_INT_SHFT 0

/* =====================================================================================

  ---WFDMA_AXI0_R2A_DMAWR_PROBE (0x18027000 + 0x510)---

    WFDMA_AXI0_R2A_DMAWR_PROBE[31..0] - (RO) WFDMA_AXI0_R2A_DMAWR_PROBE

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_DMAWR_PROBE_WFDMA_AXI0_R2A_DMAWR_PROBE_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_DMAWR_PROBE_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_DMAWR_PROBE_WFDMA_AXI0_R2A_DMAWR_PROBE_MASK 0xFFFFFFFF                // WFDMA_AXI0_R2A_DMAWR_PROBE[31..0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_DMAWR_PROBE_WFDMA_AXI0_R2A_DMAWR_PROBE_SHFT 0

/* =====================================================================================

  ---WFDMA_AXI0_R2A_DMARD_PROBE (0x18027000 + 0x514)---

    WFDMA_AXI0_R2A_DMARD_PROBE[31..0] - (RO) WFDMA_AXI0_R2A_DMARD_PROBE

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_DMARD_PROBE_WFDMA_AXI0_R2A_DMARD_PROBE_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_DMARD_PROBE_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_DMARD_PROBE_WFDMA_AXI0_R2A_DMARD_PROBE_MASK 0xFFFFFFFF                // WFDMA_AXI0_R2A_DMARD_PROBE[31..0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_DMARD_PROBE_WFDMA_AXI0_R2A_DMARD_PROBE_SHFT 0

/* =====================================================================================

  ---WFDMA_AXI0_R2A_WR_DBG_AXIM_OUT0 (0x18027000 + 0x518)---

    WFDMA_AXI0_R2A_WR_DBG_AXIM_OUT0[31..0] - (RO) WFDMA_AXI0_R2A_WR_DBG_AXIM_OUT0

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_WR_DBG_AXIM_OUT0_WFDMA_AXI0_R2A_WR_DBG_AXIM_OUT0_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_WR_DBG_AXIM_OUT0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_WR_DBG_AXIM_OUT0_WFDMA_AXI0_R2A_WR_DBG_AXIM_OUT0_MASK 0xFFFFFFFF                // WFDMA_AXI0_R2A_WR_DBG_AXIM_OUT0[31..0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_WR_DBG_AXIM_OUT0_WFDMA_AXI0_R2A_WR_DBG_AXIM_OUT0_SHFT 0

/* =====================================================================================

  ---WFDMA_AXI0_R2A_WR_DBG_AXIM_OUT1 (0x18027000 + 0x51C)---

    WFDMA_AXI0_R2A_WR_DBG_AXIM_OUT1[31..0] - (RO) WFDMA_AXI0_R2A_WR_DBG_AXIM_OUT1

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_WR_DBG_AXIM_OUT1_WFDMA_AXI0_R2A_WR_DBG_AXIM_OUT1_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_WR_DBG_AXIM_OUT1_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_WR_DBG_AXIM_OUT1_WFDMA_AXI0_R2A_WR_DBG_AXIM_OUT1_MASK 0xFFFFFFFF                // WFDMA_AXI0_R2A_WR_DBG_AXIM_OUT1[31..0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_WR_DBG_AXIM_OUT1_WFDMA_AXI0_R2A_WR_DBG_AXIM_OUT1_SHFT 0

/* =====================================================================================

  ---WFDMA_AXI0_R2A_AXI_SLP_STS (0x18027000 + 0x520)---

    WFDMA_AXI0_R2A_AXI_RD_SLP_STS[15..0] - (RO) WFDMA_AXI0_R2A_AXI_RD_SLP_STS
    WFDMA_AXI0_R2A_AXI_WR_SLP_STS[31..16] - (RO) WFDMA_AXI0_R2A_AXI_WR_SLP_STS

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_AXI_SLP_STS_WFDMA_AXI0_R2A_AXI_WR_SLP_STS_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_AXI_SLP_STS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_AXI_SLP_STS_WFDMA_AXI0_R2A_AXI_WR_SLP_STS_MASK 0xFFFF0000                // WFDMA_AXI0_R2A_AXI_WR_SLP_STS[31..16]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_AXI_SLP_STS_WFDMA_AXI0_R2A_AXI_WR_SLP_STS_SHFT 16
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_AXI_SLP_STS_WFDMA_AXI0_R2A_AXI_RD_SLP_STS_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_AXI_SLP_STS_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_AXI_SLP_STS_WFDMA_AXI0_R2A_AXI_RD_SLP_STS_MASK 0x0000FFFF                // WFDMA_AXI0_R2A_AXI_RD_SLP_STS[15..0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_AXI_SLP_STS_WFDMA_AXI0_R2A_AXI_RD_SLP_STS_SHFT 0

/* =====================================================================================

  ---WFDMA_AXI0_R2A_RD_DBG_AXIM_OUT0 (0x18027000 + 0x524)---

    WFDMA_AXI0_R2A_RD_DBG_AXIM_OUT0[31..0] - (RO) WFDMA_AXI0_R2A_RD_DBG_AXIM_OUT0

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_RD_DBG_AXIM_OUT0_WFDMA_AXI0_R2A_RD_DBG_AXIM_OUT0_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_RD_DBG_AXIM_OUT0_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_RD_DBG_AXIM_OUT0_WFDMA_AXI0_R2A_RD_DBG_AXIM_OUT0_MASK 0xFFFFFFFF                // WFDMA_AXI0_R2A_RD_DBG_AXIM_OUT0[31..0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_RD_DBG_AXIM_OUT0_WFDMA_AXI0_R2A_RD_DBG_AXIM_OUT0_SHFT 0

/* =====================================================================================

  ---WFDMA_AXI0_R2A_RD_DBG_AXIM_OUT1 (0x18027000 + 0x528)---

    WFDMA_AXI0_R2A_RD_DBG_AXIM_OUT1[31..0] - (RO) WFDMA_AXI0_R2A_RD_DBG_AXIM_OUT1

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_RD_DBG_AXIM_OUT1_WFDMA_AXI0_R2A_RD_DBG_AXIM_OUT1_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_RD_DBG_AXIM_OUT1_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_RD_DBG_AXIM_OUT1_WFDMA_AXI0_R2A_RD_DBG_AXIM_OUT1_MASK 0xFFFFFFFF                // WFDMA_AXI0_R2A_RD_DBG_AXIM_OUT1[31..0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_RD_DBG_AXIM_OUT1_WFDMA_AXI0_R2A_RD_DBG_AXIM_OUT1_SHFT 0

/* =====================================================================================

  ---WFDMA_AXI0_R2A_FSM_CMD_ST (0x18027000 + 0x52C)---

    WFDMA_AXI0_R2A_FSM_CMD_ST[31..0] - (RO) WFDMA_AXI0_R2A_FSM_CMD_ST

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_FSM_CMD_ST_WFDMA_AXI0_R2A_FSM_CMD_ST_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_FSM_CMD_ST_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_FSM_CMD_ST_WFDMA_AXI0_R2A_FSM_CMD_ST_MASK 0xFFFFFFFF                // WFDMA_AXI0_R2A_FSM_CMD_ST[31..0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_FSM_CMD_ST_WFDMA_AXI0_R2A_FSM_CMD_ST_SHFT 0

/* =====================================================================================

  ---WFDMA_AXI0_R2A_FSM_DAT_ST (0x18027000 + 0x530)---

    WFDMA_AXI0_R2A_FSM_DAT_ST[31..0] - (RO) WFDMA_AXI0_R2A_FSM_DAT_ST

 =====================================================================================*/
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_FSM_DAT_ST_WFDMA_AXI0_R2A_FSM_DAT_ST_ADDR WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_FSM_DAT_ST_ADDR
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_FSM_DAT_ST_WFDMA_AXI0_R2A_FSM_DAT_ST_MASK 0xFFFFFFFF                // WFDMA_AXI0_R2A_FSM_DAT_ST[31..0]
#define WF_WFDMA_EXT_WRAP_CSR_WFDMA_AXI0_R2A_FSM_DAT_ST_WFDMA_AXI0_R2A_FSM_DAT_ST_SHFT 0

#ifdef __cplusplus
}
#endif

#endif // __WF_WFDMA_EXT_WRAP_CSR_REGS_H__
