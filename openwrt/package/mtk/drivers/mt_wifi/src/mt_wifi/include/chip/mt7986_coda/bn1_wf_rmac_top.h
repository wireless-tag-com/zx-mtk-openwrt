//[File]            : bn1_wf_rmac_top.h
//[Revision time]   : Fri Sep 25 23:35:35 2020
//[Description]     : This file is auto generated by CODA
//[Copyright]       : Copyright (C) 2020 Mediatek Incorportion. All rights reserved.

#ifndef __BN1_WF_RMAC_TOP_REGS_H__
#define __BN1_WF_RMAC_TOP_REGS_H__

#include "hal_common.h"

#ifdef __cplusplus
extern "C" {
#endif


//****************************************************************************
//
//                     BN1_WF_RMAC_TOP CR Definitions                     
//
//****************************************************************************

#define BN1_WF_RMAC_TOP_BASE                                   0x820f5000

#define BN1_WF_RMAC_TOP_RFCR_ADDR                              (BN1_WF_RMAC_TOP_BASE + 0x0) // 5000
#define BN1_WF_RMAC_TOP_RFCR1_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x4) // 5004
#define BN1_WF_RMAC_TOP_BCNF0_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x10) // 5010
#define BN1_WF_RMAC_TOP_BCNF1_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x14) // 5014
#define BN1_WF_RMAC_TOP_BCNF2_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x18) // 5018
#define BN1_WF_RMAC_TOP_BCNF3_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x1c) // 501C
#define BN1_WF_RMAC_TOP_BCN_EXTEID_ADDR                        (BN1_WF_RMAC_TOP_BASE + 0x20) // 5020
#define BN1_WF_RMAC_TOP_BCN01_HASH_BURS_PA_ADDR                (BN1_WF_RMAC_TOP_BASE + 0x24) // 5024
#define BN1_WF_RMAC_TOP_BCN23_HASH_BURS_PA_ADDR                (BN1_WF_RMAC_TOP_BASE + 0x28) // 5028
#define BN1_WF_RMAC_TOP_BTIM_BR_ADDR                           (BN1_WF_RMAC_TOP_BASE + 0x2c) // 502C
#define BN1_WF_RMAC_TOP_BIPN_DBG_ADDR                          (BN1_WF_RMAC_TOP_BASE + 0x30) // 5030
#define BN1_WF_RMAC_TOP_BSCR0_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x38) // 5038
#define BN1_WF_RMAC_TOP_BSCR1_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x3C) // 503C
#define BN1_WF_RMAC_TOP_NSUR_ADDR                              (BN1_WF_RMAC_TOP_BASE + 0x40) // 5040
#define BN1_WF_RMAC_TOP_LUNVR_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x44) // 5044
#define BN1_WF_RMAC_TOP_INSUR_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x48) // 5048
#define BN1_WF_RMAC_TOP_LUINVR_ADDR                            (BN1_WF_RMAC_TOP_BASE + 0x4c) // 504C
#define BN1_WF_RMAC_TOP_NAVOPT_PA_ADDR                         (BN1_WF_RMAC_TOP_BASE + 0x50) // 5050
#define BN1_WF_RMAC_TOP_NAVOPT_2_PA_ADDR                       (BN1_WF_RMAC_TOP_BASE + 0x54) // 5054
#define BN1_WF_RMAC_TOP_INTRAPS_CTRL_ADDR                      (BN1_WF_RMAC_TOP_BASE + 0x5C) // 505C
#define BN1_WF_RMAC_TOP_TMR_PA_ADDR                            (BN1_WF_RMAC_TOP_BASE + 0x60) // 5060
#define BN1_WF_RMAC_TOP_TMR0_ADDR                              (BN1_WF_RMAC_TOP_BASE + 0x64) // 5064
#define BN1_WF_RMAC_TOP_TMR1_ADDR                              (BN1_WF_RMAC_TOP_BASE + 0x68) // 5068
#define BN1_WF_RMAC_TOP_TMR2_ADDR                              (BN1_WF_RMAC_TOP_BASE + 0x6c) // 506C
#define BN1_WF_RMAC_TOP_TXOPPS_PA_ADDR                         (BN1_WF_RMAC_TOP_BASE + 0x70) // 5070
#define BN1_WF_RMAC_TOP_OPPOPS_ADDR                            (BN1_WF_RMAC_TOP_BASE + 0x74) // 5074
#define BN1_WF_RMAC_TOP_SMESH_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x78) // 5078
#define BN1_WF_RMAC_TOP_INTRAPS_CNT_ADDR                       (BN1_WF_RMAC_TOP_BASE + 0x7C) // 507C
#define BN1_WF_RMAC_TOP_PMSRC0_ADDR                            (BN1_WF_RMAC_TOP_BASE + 0x80) // 5080
#define BN1_WF_RMAC_TOP_PMCTL0_ADDR                            (BN1_WF_RMAC_TOP_BASE + 0x84) // 5084
#define BN1_WF_RMAC_TOP_BTENCR_ADDR                            (BN1_WF_RMAC_TOP_BASE + 0x88) // 5088
#define BN1_WF_RMAC_TOP_SCON_ADDR                              (BN1_WF_RMAC_TOP_BASE + 0x8c) // 508C
#define BN1_WF_RMAC_TOP_CHFREQ_ADDR                            (BN1_WF_RMAC_TOP_BASE + 0x90) // 5090
#define BN1_WF_RMAC_TOP_PHY_DELAY_ADDR                         (BN1_WF_RMAC_TOP_BASE + 0x94) // 5094
#define BN1_WF_RMAC_TOP_RCPI_OFST_ADDR                         (BN1_WF_RMAC_TOP_BASE + 0x9C) // 509C
#define BN1_WF_RMAC_TOP_RXICSRPT_ADDR                          (BN1_WF_RMAC_TOP_BASE + 0xD0) // 50D0
#define BN1_WF_RMAC_TOP_RXICSRPT_CNT_ADDR                      (BN1_WF_RMAC_TOP_BASE + 0xD4) // 50D4
#define BN1_WF_RMAC_TOP_RXICSRPT_CNT2_ADDR                     (BN1_WF_RMAC_TOP_BASE + 0xD8) // 50D8
#define BN1_WF_RMAC_TOP_BSR_CTRL_ADDR                          (BN1_WF_RMAC_TOP_BASE + 0xE0) // 50E0
#define BN1_WF_RMAC_TOP_RXRSPCR_ADDR                           (BN1_WF_RMAC_TOP_BASE + 0xE4) // 50E4
#define BN1_WF_RMAC_TOP_RXMBACR_ADDR                           (BN1_WF_RMAC_TOP_BASE + 0xE8) // 50E8
#define BN1_WF_RMAC_TOP_TFPARCR0_ADDR                          (BN1_WF_RMAC_TOP_BASE + 0x100) // 5100
#define BN1_WF_RMAC_TOP_TFCSD_INFO0_ADDR                       (BN1_WF_RMAC_TOP_BASE + 0x104) // 5104
#define BN1_WF_RMAC_TOP_TFCSD_INFO1_ADDR                       (BN1_WF_RMAC_TOP_BASE + 0x108) // 5108
#define BN1_WF_RMAC_TOP_TFPUSR_INFO_ADDR                       (BN1_WF_RMAC_TOP_BASE + 0x10c) // 510C
#define BN1_WF_RMAC_TOP_TFFILTER_ADDR                          (BN1_WF_RMAC_TOP_BASE + 0x110) // 5110
#define BN1_WF_RMAC_TOP_TFRXV_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x114) // 5114
#define BN1_WF_RMAC_TOP_TF_USERTONE0_ADDR                      (BN1_WF_RMAC_TOP_BASE + 0x118) // 5118
#define BN1_WF_RMAC_TOP_TF_USERTONE1_ADDR                      (BN1_WF_RMAC_TOP_BASE + 0x11c) // 511C
#define BN1_WF_RMAC_TOP_NAN0_ADDR                              (BN1_WF_RMAC_TOP_BASE + 0x130) // 5130
#define BN1_WF_RMAC_TOP_NAN1_ADDR                              (BN1_WF_RMAC_TOP_BASE + 0x134) // 5134
#define BN1_WF_RMAC_TOP_NAN2_ADDR                              (BN1_WF_RMAC_TOP_BASE + 0x138) // 5138
#define BN1_WF_RMAC_TOP_NAN3_ADDR                              (BN1_WF_RMAC_TOP_BASE + 0x13c) // 513C
#define BN1_WF_RMAC_TOP_NAN4_ADDR                              (BN1_WF_RMAC_TOP_BASE + 0x140) // 5140
#define BN1_WF_RMAC_TOP_NAN5_ADDR                              (BN1_WF_RMAC_TOP_BASE + 0x144) // 5144
#define BN1_WF_RMAC_TOP_NANBR0_ADDR                            (BN1_WF_RMAC_TOP_BASE + 0x148) // 5148
#define BN1_WF_RMAC_TOP_NANBR1_ADDR                            (BN1_WF_RMAC_TOP_BASE + 0x14c) // 514C
#define BN1_WF_RMAC_TOP_NANBR2_ADDR                            (BN1_WF_RMAC_TOP_BASE + 0x150) // 5150
#define BN1_WF_RMAC_TOP_NANBR3_ADDR                            (BN1_WF_RMAC_TOP_BASE + 0x154) // 5154
#define BN1_WF_RMAC_TOP_NANBR4_ADDR                            (BN1_WF_RMAC_TOP_BASE + 0x158) // 5158
#define BN1_WF_RMAC_TOP_RXSR0_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x160) // 5160
#define BN1_WF_RMAC_TOP_RXSR1_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x164) // 5164
#define BN1_WF_RMAC_TOP_RXSR2_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x168) // 5168
#define BN1_WF_RMAC_TOP_RXSR3_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x16C) // 516C
#define BN1_WF_RMAC_TOP_RXSR4_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x170) // 5170
#define BN1_WF_RMAC_TOP_RXSR5_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x174) // 5174
#define BN1_WF_RMAC_TOP_SRG_VLDCNT_ADDR                        (BN1_WF_RMAC_TOP_BASE + 0x198) // 5198
#define BN1_WF_RMAC_TOP_SR_PPDUCNT_ADDR                        (BN1_WF_RMAC_TOP_BASE + 0x19C) // 519C
#define BN1_WF_RMAC_TOP_SR_PPDUVLDCNT_ADDR                     (BN1_WF_RMAC_TOP_BASE + 0x1A0) // 51A0
#define BN1_WF_RMAC_TOP_SRT_CTRL0_ADDR                         (BN1_WF_RMAC_TOP_BASE + 0x1A4) // 51A4
#define BN1_WF_RMAC_TOP_SRT_CTRL1_ADDR                         (BN1_WF_RMAC_TOP_BASE + 0x1A8) // 51A8
#define BN1_WF_RMAC_TOP_SRT_RCNT_ADDR                          (BN1_WF_RMAC_TOP_BASE + 0x1AC) // 51AC
#define BN1_WF_RMAC_TOP_SRT_PEER_DATA_ADDR                     (BN1_WF_RMAC_TOP_BASE + 0x1B0) // 51B0
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE0_ADDR                     (BN1_WF_RMAC_TOP_BASE + 0x1B4) // 51B4
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE1_ADDR                     (BN1_WF_RMAC_TOP_BASE + 0x1B8) // 51B8
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE2_ADDR                     (BN1_WF_RMAC_TOP_BASE + 0x1BC) // 51BC
#define BN1_WF_RMAC_TOP_SR_RCPI_OFST0_ADDR                     (BN1_WF_RMAC_TOP_BASE + 0x1C0) // 51C0
#define BN1_WF_RMAC_TOP_SR_RCPI_OFST1_ADDR                     (BN1_WF_RMAC_TOP_BASE + 0x1C4) // 51C4
#define BN1_WF_RMAC_TOP_SR_FNQ_ADDR                            (BN1_WF_RMAC_TOP_BASE + 0x1C8) // 51C8
#define BN1_WF_RMAC_TOP_SR_FRM_FILT_ADDR                       (BN1_WF_RMAC_TOP_BASE + 0x1CC) // 51CC
#define BN1_WF_RMAC_TOP_SRT_CTRL2_ADDR                         (BN1_WF_RMAC_TOP_BASE + 0x1D0) // 51D0
#define BN1_WF_RMAC_TOP_SR_INTERPS_CTRL_ADDR                   (BN1_WF_RMAC_TOP_BASE + 0x1D4) // 51D4
#define BN1_WF_RMAC_TOP_SR_INTERPS_DBG_ADDR                    (BN1_WF_RMAC_TOP_BASE + 0x1D8) // 51D8
#define BN1_WF_RMAC_TOP_CB0R0_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x200) // 5200
#define BN1_WF_RMAC_TOP_CB0R1_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x204) // 5204
#define BN1_WF_RMAC_TOP_OMA0R0_ADDR                            (BN1_WF_RMAC_TOP_BASE + 0x208) // 5208
#define BN1_WF_RMAC_TOP_OMA0R1_ADDR                            (BN1_WF_RMAC_TOP_BASE + 0x20C) // 520C
#define BN1_WF_RMAC_TOP_CFOBSS0_ADDR                           (BN1_WF_RMAC_TOP_BASE + 0x210) // 5210
#define BN1_WF_RMAC_TOP_CB1R0_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x220) // 5220
#define BN1_WF_RMAC_TOP_CB1R1_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x224) // 5224
#define BN1_WF_RMAC_TOP_OMA1R0_ADDR                            (BN1_WF_RMAC_TOP_BASE + 0x228) // 5228
#define BN1_WF_RMAC_TOP_OMA1R1_ADDR                            (BN1_WF_RMAC_TOP_BASE + 0x22C) // 522C
#define BN1_WF_RMAC_TOP_CFOBSS1_ADDR                           (BN1_WF_RMAC_TOP_BASE + 0x230) // 5230
#define BN1_WF_RMAC_TOP_CB2R0_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x240) // 5240
#define BN1_WF_RMAC_TOP_CB2R1_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x244) // 5244
#define BN1_WF_RMAC_TOP_OMA2R0_ADDR                            (BN1_WF_RMAC_TOP_BASE + 0x248) // 5248
#define BN1_WF_RMAC_TOP_OMA2R1_ADDR                            (BN1_WF_RMAC_TOP_BASE + 0x24C) // 524C
#define BN1_WF_RMAC_TOP_CFOBSS2_ADDR                           (BN1_WF_RMAC_TOP_BASE + 0x250) // 5250
#define BN1_WF_RMAC_TOP_CB3R0_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x260) // 5260
#define BN1_WF_RMAC_TOP_CB3R1_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x264) // 5264
#define BN1_WF_RMAC_TOP_OMA3R0_ADDR                            (BN1_WF_RMAC_TOP_BASE + 0x268) // 5268
#define BN1_WF_RMAC_TOP_OMA3R1_ADDR                            (BN1_WF_RMAC_TOP_BASE + 0x26C) // 526C
#define BN1_WF_RMAC_TOP_CFOBSS3_ADDR                           (BN1_WF_RMAC_TOP_BASE + 0x270) // 5270
#define BN1_WF_RMAC_TOP_OMA4R0_ADDR                            (BN1_WF_RMAC_TOP_BASE + 0x280) // 5280
#define BN1_WF_RMAC_TOP_OMA4R1_ADDR                            (BN1_WF_RMAC_TOP_BASE + 0x284) // 5284
#define BN1_WF_RMAC_TOP_B01AR_B1AR_ADDR                        (BN1_WF_RMAC_TOP_BASE + 0x290) // 5290
#define BN1_WF_RMAC_TOP_B23AR_B1AR_ADDR                        (BN1_WF_RMAC_TOP_BASE + 0x294) // 5294
#define BN1_WF_RMAC_TOP_MBSSIDACT0_ADDR                        (BN1_WF_RMAC_TOP_BASE + 0x298) // 5298
#define BN1_WF_RMAC_TOP_MBSSIDACT1_ADDR                        (BN1_WF_RMAC_TOP_BASE + 0x29C) // 529C
#define BN1_WF_RMAC_TOP_MBSSID_IDX_ADDR                        (BN1_WF_RMAC_TOP_BASE + 0x2A0) // 52A0
#define BN1_WF_RMAC_TOP_PQC_OPT_ADDR                           (BN1_WF_RMAC_TOP_BASE + 0x2B0) // 52B0
#define BN1_WF_RMAC_TOP_MAR0_ADDR                              (BN1_WF_RMAC_TOP_BASE + 0x2C0) // 52C0
#define BN1_WF_RMAC_TOP_MAR1_ADDR                              (BN1_WF_RMAC_TOP_BASE + 0x2C4) // 52C4
#define BN1_WF_RMAC_TOP_MUARBR0_ADDR                           (BN1_WF_RMAC_TOP_BASE + 0x2C8) // 52C8
#define BN1_WF_RMAC_TOP_MUARBR1_ADDR                           (BN1_WF_RMAC_TOP_BASE + 0x2CC) // 52CC
#define BN1_WF_RMAC_TOP_MBSSIDEXT1_0_ADDR                      (BN1_WF_RMAC_TOP_BASE + 0x300) // 5300
#define BN1_WF_RMAC_TOP_MBSSIDEXT1_1_ADDR                      (BN1_WF_RMAC_TOP_BASE + 0x304) // 5304
#define BN1_WF_RMAC_TOP_MBSSIDEXT2_0_ADDR                      (BN1_WF_RMAC_TOP_BASE + 0x308) // 5308
#define BN1_WF_RMAC_TOP_MBSSIDEXT2_1_ADDR                      (BN1_WF_RMAC_TOP_BASE + 0x30C) // 530C
#define BN1_WF_RMAC_TOP_MBSSIDEXT3_0_ADDR                      (BN1_WF_RMAC_TOP_BASE + 0x310) // 5310
#define BN1_WF_RMAC_TOP_MBSSIDEXT3_1_ADDR                      (BN1_WF_RMAC_TOP_BASE + 0x314) // 5314
#define BN1_WF_RMAC_TOP_MBSSIDEXT4_0_ADDR                      (BN1_WF_RMAC_TOP_BASE + 0x318) // 5318
#define BN1_WF_RMAC_TOP_MBSSIDEXT4_1_ADDR                      (BN1_WF_RMAC_TOP_BASE + 0x31C) // 531C
#define BN1_WF_RMAC_TOP_MBSSIDEXT5_0_ADDR                      (BN1_WF_RMAC_TOP_BASE + 0x320) // 5320
#define BN1_WF_RMAC_TOP_MBSSIDEXT5_1_ADDR                      (BN1_WF_RMAC_TOP_BASE + 0x324) // 5324
#define BN1_WF_RMAC_TOP_MBSSIDEXT6_0_ADDR                      (BN1_WF_RMAC_TOP_BASE + 0x328) // 5328
#define BN1_WF_RMAC_TOP_MBSSIDEXT6_1_ADDR                      (BN1_WF_RMAC_TOP_BASE + 0x32C) // 532C
#define BN1_WF_RMAC_TOP_MBSSIDEXT7_0_ADDR                      (BN1_WF_RMAC_TOP_BASE + 0x330) // 5330
#define BN1_WF_RMAC_TOP_MBSSIDEXT7_1_ADDR                      (BN1_WF_RMAC_TOP_BASE + 0x334) // 5334
#define BN1_WF_RMAC_TOP_MBSSIDEXT8_0_ADDR                      (BN1_WF_RMAC_TOP_BASE + 0x338) // 5338
#define BN1_WF_RMAC_TOP_MBSSIDEXT8_1_ADDR                      (BN1_WF_RMAC_TOP_BASE + 0x33C) // 533C
#define BN1_WF_RMAC_TOP_MBSSIDEXT9_0_ADDR                      (BN1_WF_RMAC_TOP_BASE + 0x340) // 5340
#define BN1_WF_RMAC_TOP_MBSSIDEXT9_1_ADDR                      (BN1_WF_RMAC_TOP_BASE + 0x344) // 5344
#define BN1_WF_RMAC_TOP_MBSSIDEXT10_0_ADDR                     (BN1_WF_RMAC_TOP_BASE + 0x348) // 5348
#define BN1_WF_RMAC_TOP_MBSSIDEXT10_1_ADDR                     (BN1_WF_RMAC_TOP_BASE + 0x34C) // 534C
#define BN1_WF_RMAC_TOP_MBSSIDEXT11_0_ADDR                     (BN1_WF_RMAC_TOP_BASE + 0x350) // 5350
#define BN1_WF_RMAC_TOP_MBSSIDEXT11_1_ADDR                     (BN1_WF_RMAC_TOP_BASE + 0x354) // 5354
#define BN1_WF_RMAC_TOP_MBSSIDEXT12_0_ADDR                     (BN1_WF_RMAC_TOP_BASE + 0x358) // 5358
#define BN1_WF_RMAC_TOP_MBSSIDEXT12_1_ADDR                     (BN1_WF_RMAC_TOP_BASE + 0x35C) // 535C
#define BN1_WF_RMAC_TOP_MBSSIDEXT13_0_ADDR                     (BN1_WF_RMAC_TOP_BASE + 0x360) // 5360
#define BN1_WF_RMAC_TOP_MBSSIDEXT13_1_ADDR                     (BN1_WF_RMAC_TOP_BASE + 0x364) // 5364
#define BN1_WF_RMAC_TOP_MBSSIDEXT14_0_ADDR                     (BN1_WF_RMAC_TOP_BASE + 0x368) // 5368
#define BN1_WF_RMAC_TOP_MBSSIDEXT14_1_ADDR                     (BN1_WF_RMAC_TOP_BASE + 0x36C) // 536C
#define BN1_WF_RMAC_TOP_MBSSIDEXT15_0_ADDR                     (BN1_WF_RMAC_TOP_BASE + 0x370) // 5370
#define BN1_WF_RMAC_TOP_MBSSIDEXT15_1_ADDR                     (BN1_WF_RMAC_TOP_BASE + 0x374) // 5374
#define BN1_WF_RMAC_TOP_ACBEN_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x378) // 5378
#define BN1_WF_RMAC_TOP_AIRTIME0_ADDR                          (BN1_WF_RMAC_TOP_BASE + 0x380) // 5380
#define BN1_WF_RMAC_TOP_AIRTIME1_ADDR                          (BN1_WF_RMAC_TOP_BASE + 0x384) // 5384
#define BN1_WF_RMAC_TOP_AIRTIME2_ADDR                          (BN1_WF_RMAC_TOP_BASE + 0x388) // 5388
#define BN1_WF_RMAC_TOP_AIRTIME3_ADDR                          (BN1_WF_RMAC_TOP_BASE + 0x38C) // 538C
#define BN1_WF_RMAC_TOP_AIRTIME4_ADDR                          (BN1_WF_RMAC_TOP_BASE + 0x390) // 5390
#define BN1_WF_RMAC_TOP_AIRTIME13_ADDR                         (BN1_WF_RMAC_TOP_BASE + 0x394) // 5394
#define BN1_WF_RMAC_TOP_AIRTIME14_ADDR                         (BN1_WF_RMAC_TOP_BASE + 0x398) // 5398
#define BN1_WF_RMAC_TOP_FS0CR_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x3A0) // 53A0
#define BN1_WF_RMAC_TOP_RSVD0_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x3E0) // 53E0
#define BN1_WF_RMAC_TOP_RSVD1_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x3E4) // 53E4
#define BN1_WF_RMAC_TOP_RCPI0_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x400) // 5400
#define BN1_WF_RMAC_TOP_RCPI3_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x404) // 5404
#define BN1_WF_RMAC_TOP_RCPI2_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x410) // 5410
#define BN1_WF_RMAC_TOP_RCPI9_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0X414) // 5414
#define BN1_WF_RMAC_TOP_RCPI4_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x420) // 5420
#define BN1_WF_RMAC_TOP_RCPI7_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x424) // 5424
#define BN1_WF_RMAC_TOP_RCPI6_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x430) // 5430
#define BN1_WF_RMAC_TOP_RCPI11_ADDR                            (BN1_WF_RMAC_TOP_BASE + 0X434) // 5434
#define BN1_WF_RMAC_TOP_LRCPITMPCCK0_ADDR                      (BN1_WF_RMAC_TOP_BASE + 0x588) // 5588
#define BN1_WF_RMAC_TOP_LRCPITMPCCK1_ADDR                      (BN1_WF_RMAC_TOP_BASE + 0x58C) // 558C
#define BN1_WF_RMAC_TOP_LRCPITMPCCK2_ADDR                      (BN1_WF_RMAC_TOP_BASE + 0x590) // 5590
#define BN1_WF_RMAC_TOP_LRCPITMPCCK3_ADDR                      (BN1_WF_RMAC_TOP_BASE + 0x594) // 5594
#define BN1_WF_RMAC_TOP_LRCPITMPOFDM0_ADDR                     (BN1_WF_RMAC_TOP_BASE + 0x598) // 5598
#define BN1_WF_RMAC_TOP_LRCPITMPOFDM1_ADDR                     (BN1_WF_RMAC_TOP_BASE + 0x59C) // 559C
#define BN1_WF_RMAC_TOP_LRCPITMPOFDM2_ADDR                     (BN1_WF_RMAC_TOP_BASE + 0x5A0) // 55A0
#define BN1_WF_RMAC_TOP_LRCPITMPOFDM3_ADDR                     (BN1_WF_RMAC_TOP_BASE + 0x5A4) // 55A4
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_ADDR                      (BN1_WF_RMAC_TOP_BASE + 0x5A8) // 55A8
#define BN1_WF_RMAC_TOP_RMACDR_ADDR                            (BN1_WF_RMAC_TOP_BASE + 0x600) // 5600
#define BN1_WF_RMAC_TOP_RMCR_ADDR                              (BN1_WF_RMAC_TOP_BASE + 0x604) // 5604
#define BN1_WF_RMAC_TOP_MORE_ADDR                              (BN1_WF_RMAC_TOP_BASE + 0x608) // 5608
#define BN1_WF_RMAC_TOP_MISC_ADDR                              (BN1_WF_RMAC_TOP_BASE + 0x610) // 5610
#define BN1_WF_RMAC_TOP_MISC2_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x614) // 5614
#define BN1_WF_RMAC_TOP_MISC3_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x618) // 5618
#define BN1_WF_RMAC_TOP_MISC4_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x61C) // 561C
#define BN1_WF_RMAC_TOP_MISC5_ADDR                             (BN1_WF_RMAC_TOP_BASE + 0x620) // 5620
#define BN1_WF_RMAC_TOP_PCIL1SS_ADDR                           (BN1_WF_RMAC_TOP_BASE + 0x62c) // 562C
#define BN1_WF_RMAC_TOP_RXCOEX_ADDR                            (BN1_WF_RMAC_TOP_BASE + 0x630) // 5630
#define BN1_WF_RMAC_TOP_MAXMINLEN_ADDR                         (BN1_WF_RMAC_TOP_BASE + 0x634) // 5634
#define BN1_WF_RMAC_TOP_DBGCTRL_ADDR                           (BN1_WF_RMAC_TOP_BASE + 0x6A0) // 56A0
#define BN1_WF_RMAC_TOP_DBGMIB_ADDR                            (BN1_WF_RMAC_TOP_BASE + 0x6A4) // 56A4
#define BN1_WF_RMAC_TOP_DBGMIB_RD_ADDR                         (BN1_WF_RMAC_TOP_BASE + 0x6A8) // 56A8
#define BN1_WF_RMAC_TOP_RXV_DUMP0_ADDR                         (BN1_WF_RMAC_TOP_BASE + 0x6B0) // 56B0
#define BN1_WF_RMAC_TOP_RXV_DUMP1_ADDR                         (BN1_WF_RMAC_TOP_BASE + 0x6B4) // 56B4
#define BN1_WF_RMAC_TOP_RX_STS0_ADDR                           (BN1_WF_RMAC_TOP_BASE + 0x6C0) // 56C0
#define BN1_WF_RMAC_TOP_RX_STS2_ADDR                           (BN1_WF_RMAC_TOP_BASE + 0x6C4) // 56C4
#define BN1_WF_RMAC_TOP_RX_STS3_ADDR                           (BN1_WF_RMAC_TOP_BASE + 0x6C8) // 56C8




/* =====================================================================================

  ---RFCR (0x820f5000 + 0x0)---

    DROP_STBC_BCN_BC_MC[0]       - (RW) Drop STBC beacon/BC/MC frames
                                     0: Bypass this check
                                     1: Discard STBC BC/MC/Beacon frames.
    DROP_FCS_ERROR_FRAME[1]      - (RW) Drop FCS error frames
                                     0: Bypass this check
                                     1: If the FCS check of the packet fails, drop the packet.
    RESERVED2[2]                 - (RO) Reserved bits
    DROP_VERSION_NO_0[3]         - (RW) Drop version field of Frame Control field is not 0
                                     0: Do not check the protocol version field of the 802.11 frame
                                     1: If the protocol version field of the 802.11 frame is not 0, drop it.
    DROP_PROBE_REQ[4]            - (RW) Drop probe request frame
                                     0: The Probe Request frames will pass this check
                                     1: The Probe Request frames will be dropped
    DROP_MC_FRAME[5]             - (RW) Drop multicast frame
                                     0: The multicast frame will pass the check.
                                     1: The multicast frame will be dropped.
    DROP_BC_FRAME[6]             - (RW) Drop broadcast frame
                                     0: The broadcast frame will pass the check.
                                     1: The broadcast frame will be dropped.
    DROP_NOT_IN_MC_TABLE_BSSID0[7] - (RW) For BSSID0 setting
                                     0: All multicast frames will pass the check.
                                     1: If the A1 of the multicast frame specified is not in the multicast-address table (MAR0, MAR1), drop it.
    DROP_ADDR3_OWN_MAC[8]        - (RW) Drop Addr3 is own MAC address
                                     0: Bypass this check
                                     1: If the broadcast/multicast data packet matches the following condition, drop it. Otherwise pass this check.
                                     ToDS = 0,
                                     FromDS = 1
                                     A3 = Own MACx
    DROP_DIFF_BSSID_A3[9]        - (RW) Drop Addr3 is different BSSID
                                     0: Bypass this check
                                     1: If the broadcast/multicast data packet matches the following condition, drop it. Otherwise pass the check.
                                     ToDS = 0,
                                     FromDS = 0,
                                     A3 != BSSIDx
    DROP_DIFF_BSSID_A2[10]       - (RW) Drop Addr2 is different BSSID
                                     0: Bypass this check
                                     1: If the broadcast/multicast data packet matches the following condition, drop it. Otherwise pass the check.
                                     ToDS = 0,
                                     FromDS = 1,
                                     A2 != BSSIDx
    DROP_DIFF_BSSID_BCN[11]      - (RW) Drop different BSSID beacon frames
                                     0: Bypass this check
                                     1: If received beacon frame matches following rule, drop it. Otherwise, pass this check.
                                     A3 != BSSID0 and A3!=BSSID1
    RM_FRAME_REPORT_EN[12]       - (RW) Frame report mode enable
                                     0: Bypass this check
                                     1: Receive all data/mgt frame for Frame Report function
                                     Otherwise, pass this check.
    DROP_CTRL_RSV[13]            - (RW) Drop reserved definition control frames
                                     0: Bypass this check
                                     1: Drop control frames with reserved type
    DROP_CTS[14]                 - (RW) Drop CTS frames
                                     0: Bypass this check
                                     1: Drop CTS frame
    DROP_RTS[15]                 - (RW) Drop RTS frames
                                     0: Bypass this check
                                     1: Drop RTS frame
    DROP_DUPLICATE[16]           - (RW) Drop duplicate frames
                                     0: Bypass this check 
                                     1: Drop duplicate packet. Only MPDU. No BA session frame
    DROP_NOT_MY_BSSID[17]        - (RW) Drop not my BSSID frames
                                     0: Bypass this check
                                     1: Drop not my BSSID0/1/2/3 if enable  each BSSID.
    DROP_NOT_UC2ME[18]           - (RW) Drop not unicast to me frames
                                     0: Bypass this check
                                     1: Drop not unicast to OWNMAC0/1/2/3/4 if enable each OWNMAC
    DROP_DIFF_BSSID_BTIM[19]     - (RW) Drop different BSSID TIM Broadcast frame
                                     0: Not drop diff bssid TIM broadcast
                                     1: Drop diff bssid TIM broadcast
    DROP_NDPA[20]                - (RW) Drop NDPA or not
                                     0: not drop NDPA control frame
                                     1: drop NDPA control frame
    RX_UNWANTED_CTL_FRM[21]      - (RW) Receive unwanted control frame
                                     0: Drop
                                     1: Receive
    IND_FILTER_EN_OF_31_23_BIT[22] - (RW) For normal usage, SW does not need to configure this register
                                     not include RFCR bit 23 function
                                     0: Disable RFCR 31-21 function
                                     1: Enable RFCR 31-21 function
    SECOND_BCN_EN[23]            - (RW) For normal usage, SW does not need to configure this register
                                     0: Disable RX second beacon packet (STBC BCN)
                                     1: Enable RX second beacon packet (non STBC BCN)
    RX_MGMT_FRAME_CTRL[24]       - (RW) For normal usage, SW does not need to configure this register
                                     0: Disable RX all management packet
                                     1: Enable RX all management packet
    RX_DATA_FRAME_CTRL[25]       - (RW) For normal usage, SW does not need to configure this register
                                     0: Disable RX all data packet
                                     1: Enable RX all data packet
    RX_SAMEBSSIDPRORESP_CTRL[26] - (RW) For normal usage, SW does not need to configure this register
                                     0: Disable RX same BSSID probe response packet
                                     1: Enable RX same BSSID probe response packet
    RX_DIFFBSSIDPRORESP_CTRL[27] - (RW) For normal usage, SW does not need to configure this register
                                     0: Disable RX different BSSID probe response packet
                                     1: Enable RX different BSSID probe response packet
    RX_SAMEBSSIDBCN_CTRL[28]     - (RW) For normal usage, SW does not need to configure this register
                                     0: Disable RX same BSSID beacon packet
                                     1: Enable RX same BSSID beacon packet
    RX_SAMEBSSIDNULL_CTRL[29]    - (RW) For normal usage, SW does not need to configure this register
                                     0: Disable RX same BSSID null-data packet
                                     1: Enable RX same BSSID null-data packet
    RX_DIFFBSSIDNULL_CTRL[30]    - (RW) For normal usage, SW does not need to configure this register
                                     0: Disable RX same BSSID null-data packet
                                     1: Enable RX same BSSID null-data packet
    DROP_DIFFBSSIDMGT_CTRL[31]   - (RW) For normal usage, SW does not need to configure this register
                                     0: Disable drop different BSSID management frame
                                     1: enable drop diffenent BSSID management frame

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RFCR_DROP_DIFFBSSIDMGT_CTRL_ADDR       BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_DROP_DIFFBSSIDMGT_CTRL_MASK       0x80000000                // DROP_DIFFBSSIDMGT_CTRL[31]
#define BN1_WF_RMAC_TOP_RFCR_DROP_DIFFBSSIDMGT_CTRL_SHFT       31
#define BN1_WF_RMAC_TOP_RFCR_RX_DIFFBSSIDNULL_CTRL_ADDR        BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_RX_DIFFBSSIDNULL_CTRL_MASK        0x40000000                // RX_DIFFBSSIDNULL_CTRL[30]
#define BN1_WF_RMAC_TOP_RFCR_RX_DIFFBSSIDNULL_CTRL_SHFT        30
#define BN1_WF_RMAC_TOP_RFCR_RX_SAMEBSSIDNULL_CTRL_ADDR        BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_RX_SAMEBSSIDNULL_CTRL_MASK        0x20000000                // RX_SAMEBSSIDNULL_CTRL[29]
#define BN1_WF_RMAC_TOP_RFCR_RX_SAMEBSSIDNULL_CTRL_SHFT        29
#define BN1_WF_RMAC_TOP_RFCR_RX_SAMEBSSIDBCN_CTRL_ADDR         BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_RX_SAMEBSSIDBCN_CTRL_MASK         0x10000000                // RX_SAMEBSSIDBCN_CTRL[28]
#define BN1_WF_RMAC_TOP_RFCR_RX_SAMEBSSIDBCN_CTRL_SHFT         28
#define BN1_WF_RMAC_TOP_RFCR_RX_DIFFBSSIDPRORESP_CTRL_ADDR     BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_RX_DIFFBSSIDPRORESP_CTRL_MASK     0x08000000                // RX_DIFFBSSIDPRORESP_CTRL[27]
#define BN1_WF_RMAC_TOP_RFCR_RX_DIFFBSSIDPRORESP_CTRL_SHFT     27
#define BN1_WF_RMAC_TOP_RFCR_RX_SAMEBSSIDPRORESP_CTRL_ADDR     BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_RX_SAMEBSSIDPRORESP_CTRL_MASK     0x04000000                // RX_SAMEBSSIDPRORESP_CTRL[26]
#define BN1_WF_RMAC_TOP_RFCR_RX_SAMEBSSIDPRORESP_CTRL_SHFT     26
#define BN1_WF_RMAC_TOP_RFCR_RX_DATA_FRAME_CTRL_ADDR           BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_RX_DATA_FRAME_CTRL_MASK           0x02000000                // RX_DATA_FRAME_CTRL[25]
#define BN1_WF_RMAC_TOP_RFCR_RX_DATA_FRAME_CTRL_SHFT           25
#define BN1_WF_RMAC_TOP_RFCR_RX_MGMT_FRAME_CTRL_ADDR           BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_RX_MGMT_FRAME_CTRL_MASK           0x01000000                // RX_MGMT_FRAME_CTRL[24]
#define BN1_WF_RMAC_TOP_RFCR_RX_MGMT_FRAME_CTRL_SHFT           24
#define BN1_WF_RMAC_TOP_RFCR_SECOND_BCN_EN_ADDR                BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_SECOND_BCN_EN_MASK                0x00800000                // SECOND_BCN_EN[23]
#define BN1_WF_RMAC_TOP_RFCR_SECOND_BCN_EN_SHFT                23
#define BN1_WF_RMAC_TOP_RFCR_IND_FILTER_EN_OF_31_23_BIT_ADDR   BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_IND_FILTER_EN_OF_31_23_BIT_MASK   0x00400000                // IND_FILTER_EN_OF_31_23_BIT[22]
#define BN1_WF_RMAC_TOP_RFCR_IND_FILTER_EN_OF_31_23_BIT_SHFT   22
#define BN1_WF_RMAC_TOP_RFCR_RX_UNWANTED_CTL_FRM_ADDR          BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_RX_UNWANTED_CTL_FRM_MASK          0x00200000                // RX_UNWANTED_CTL_FRM[21]
#define BN1_WF_RMAC_TOP_RFCR_RX_UNWANTED_CTL_FRM_SHFT          21
#define BN1_WF_RMAC_TOP_RFCR_DROP_NDPA_ADDR                    BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_DROP_NDPA_MASK                    0x00100000                // DROP_NDPA[20]
#define BN1_WF_RMAC_TOP_RFCR_DROP_NDPA_SHFT                    20
#define BN1_WF_RMAC_TOP_RFCR_DROP_DIFF_BSSID_BTIM_ADDR         BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_DROP_DIFF_BSSID_BTIM_MASK         0x00080000                // DROP_DIFF_BSSID_BTIM[19]
#define BN1_WF_RMAC_TOP_RFCR_DROP_DIFF_BSSID_BTIM_SHFT         19
#define BN1_WF_RMAC_TOP_RFCR_DROP_NOT_UC2ME_ADDR               BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_DROP_NOT_UC2ME_MASK               0x00040000                // DROP_NOT_UC2ME[18]
#define BN1_WF_RMAC_TOP_RFCR_DROP_NOT_UC2ME_SHFT               18
#define BN1_WF_RMAC_TOP_RFCR_DROP_NOT_MY_BSSID_ADDR            BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_DROP_NOT_MY_BSSID_MASK            0x00020000                // DROP_NOT_MY_BSSID[17]
#define BN1_WF_RMAC_TOP_RFCR_DROP_NOT_MY_BSSID_SHFT            17
#define BN1_WF_RMAC_TOP_RFCR_DROP_DUPLICATE_ADDR               BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_DROP_DUPLICATE_MASK               0x00010000                // DROP_DUPLICATE[16]
#define BN1_WF_RMAC_TOP_RFCR_DROP_DUPLICATE_SHFT               16
#define BN1_WF_RMAC_TOP_RFCR_DROP_RTS_ADDR                     BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_DROP_RTS_MASK                     0x00008000                // DROP_RTS[15]
#define BN1_WF_RMAC_TOP_RFCR_DROP_RTS_SHFT                     15
#define BN1_WF_RMAC_TOP_RFCR_DROP_CTS_ADDR                     BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_DROP_CTS_MASK                     0x00004000                // DROP_CTS[14]
#define BN1_WF_RMAC_TOP_RFCR_DROP_CTS_SHFT                     14
#define BN1_WF_RMAC_TOP_RFCR_DROP_CTRL_RSV_ADDR                BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_DROP_CTRL_RSV_MASK                0x00002000                // DROP_CTRL_RSV[13]
#define BN1_WF_RMAC_TOP_RFCR_DROP_CTRL_RSV_SHFT                13
#define BN1_WF_RMAC_TOP_RFCR_RM_FRAME_REPORT_EN_ADDR           BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_RM_FRAME_REPORT_EN_MASK           0x00001000                // RM_FRAME_REPORT_EN[12]
#define BN1_WF_RMAC_TOP_RFCR_RM_FRAME_REPORT_EN_SHFT           12
#define BN1_WF_RMAC_TOP_RFCR_DROP_DIFF_BSSID_BCN_ADDR          BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_DROP_DIFF_BSSID_BCN_MASK          0x00000800                // DROP_DIFF_BSSID_BCN[11]
#define BN1_WF_RMAC_TOP_RFCR_DROP_DIFF_BSSID_BCN_SHFT          11
#define BN1_WF_RMAC_TOP_RFCR_DROP_DIFF_BSSID_A2_ADDR           BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_DROP_DIFF_BSSID_A2_MASK           0x00000400                // DROP_DIFF_BSSID_A2[10]
#define BN1_WF_RMAC_TOP_RFCR_DROP_DIFF_BSSID_A2_SHFT           10
#define BN1_WF_RMAC_TOP_RFCR_DROP_DIFF_BSSID_A3_ADDR           BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_DROP_DIFF_BSSID_A3_MASK           0x00000200                // DROP_DIFF_BSSID_A3[9]
#define BN1_WF_RMAC_TOP_RFCR_DROP_DIFF_BSSID_A3_SHFT           9
#define BN1_WF_RMAC_TOP_RFCR_DROP_ADDR3_OWN_MAC_ADDR           BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_DROP_ADDR3_OWN_MAC_MASK           0x00000100                // DROP_ADDR3_OWN_MAC[8]
#define BN1_WF_RMAC_TOP_RFCR_DROP_ADDR3_OWN_MAC_SHFT           8
#define BN1_WF_RMAC_TOP_RFCR_DROP_NOT_IN_MC_TABLE_BSSID0_ADDR  BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_DROP_NOT_IN_MC_TABLE_BSSID0_MASK  0x00000080                // DROP_NOT_IN_MC_TABLE_BSSID0[7]
#define BN1_WF_RMAC_TOP_RFCR_DROP_NOT_IN_MC_TABLE_BSSID0_SHFT  7
#define BN1_WF_RMAC_TOP_RFCR_DROP_BC_FRAME_ADDR                BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_DROP_BC_FRAME_MASK                0x00000040                // DROP_BC_FRAME[6]
#define BN1_WF_RMAC_TOP_RFCR_DROP_BC_FRAME_SHFT                6
#define BN1_WF_RMAC_TOP_RFCR_DROP_MC_FRAME_ADDR                BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_DROP_MC_FRAME_MASK                0x00000020                // DROP_MC_FRAME[5]
#define BN1_WF_RMAC_TOP_RFCR_DROP_MC_FRAME_SHFT                5
#define BN1_WF_RMAC_TOP_RFCR_DROP_PROBE_REQ_ADDR               BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_DROP_PROBE_REQ_MASK               0x00000010                // DROP_PROBE_REQ[4]
#define BN1_WF_RMAC_TOP_RFCR_DROP_PROBE_REQ_SHFT               4
#define BN1_WF_RMAC_TOP_RFCR_DROP_VERSION_NO_0_ADDR            BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_DROP_VERSION_NO_0_MASK            0x00000008                // DROP_VERSION_NO_0[3]
#define BN1_WF_RMAC_TOP_RFCR_DROP_VERSION_NO_0_SHFT            3
#define BN1_WF_RMAC_TOP_RFCR_DROP_FCS_ERROR_FRAME_ADDR         BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_DROP_FCS_ERROR_FRAME_MASK         0x00000002                // DROP_FCS_ERROR_FRAME[1]
#define BN1_WF_RMAC_TOP_RFCR_DROP_FCS_ERROR_FRAME_SHFT         1
#define BN1_WF_RMAC_TOP_RFCR_DROP_STBC_BCN_BC_MC_ADDR          BN1_WF_RMAC_TOP_RFCR_ADDR
#define BN1_WF_RMAC_TOP_RFCR_DROP_STBC_BCN_BC_MC_MASK          0x00000001                // DROP_STBC_BCN_BC_MC[0]
#define BN1_WF_RMAC_TOP_RFCR_DROP_STBC_BCN_BC_MC_SHFT          0

/* =====================================================================================

  ---RFCR1 (0x820f5000 + 0x4)---

    DROP_NOT_IN_MC_TABLE_BSSID1[0] - (RW) For BSSID1 setting
                                     0: All multicast frames will pass the check.
                                     1: If the A1 of the multicast frame specified is not in the multicast-address table (MAR0, MAR1), drop it.
    DROP_NOT_IN_MC_TABLE_BSSID2[1] - (RW) For BSSID2 setting
                                     0: All multicast frames will pass the check.
                                     1: If the A1 of the multicast frame specified is not in the multicast-address table (MAR0, MAR1), drop it.
    DROP_NOT_IN_MC_TABLE_BSSID3[2] - (RW) For BSSID3 setting
                                     0: All multicast frames will pass the check.
                                     1: If the A1 of the multicast frame specified is not in the multicast-address table (MAR0, MAR1), drop it.
    DROP_NOT_IN_MC_TABLE_BSSIDX[3] - (RW) For un-matching any BSSID setting
                                     0: All multicast frames will pass the check.
                                     1: If the A1 of the multicast frame specified is not in the multicast-address table (MAR0, MAR1), drop it.
    DROP_ACK_FRAME[4]            - (RW) Drop ACK frame
                                     0: Bypass this check. For PS-bit update
                                     1: Discard ACK control frame
    DROP_BFR_POLL_FRAME[5]       - (RW) Drop BeamformReportPoll frame
                                     0: Bypass this check. For PS-bit update
                                     1: Discard Beamform Report Poll control frame
    DROP_BA_FRAME[6]             - (RW) Drop BA frame
                                     0: Bypass this check. For PS-bit update
                                     1: Discard BA control frame
    DROP_CFEND_FRAME[7]          - (RW) Drop CFEND frame
                                     0: Bypass this check. For PS-bit update
                                     1: Discard CFEND control frame
    DROP_CFEND_CFACK_FRAME[8]    - (RW) Drop CFEND_CFACK frame
                                     0: Bypass this check. For PS-bit update
                                     1: Discard CFEND_CFACK control frame
    RX_CTRL_FOR_PS_CFEND_CFACK[9] - (RW) CFEND-CFACK
                                     This bit only effect CFEND_CFACK frame even if set DROP by RX filter
                                     0: Bypass this check.
                                     1: Receive CFEND_CFACK to DMA, and drop by DMA
    RX_CTRL_FOR_PS_CFEND[10]     - (RW) CFEND frame to update PS bit
                                     This bit only effect CFEND frame even if set DROP by RX filter
                                     0: Bypass this check.
                                     1: Receive CFEND to DMA, and drop by DMA
    RX_CTRL_FOR_PS_BFRPOL[11]    - (RW) BeamformReportPoll frame to update PS bit
                                     This bit only effect BFRPOL frame even if set DROP by RX filter
                                     0: Bypass this check.
                                     1: Receive BFRPOL to DMA, and drop by DMA
    RX_CTRL_FOR_PS_NDPA[12]      - (RW) NDPA frame to update PS bit
                                     This bit only effect NDPA frame even if set DROP by RX filter
                                     0: Bypass this check.
                                     1: Receive NDPA to DMA, and drop by DMA
    RX_CTRL_FOR_PS_RSVD[13]      - (RW) Reserved control frames to update PS bit
                                     This bit only effect RSVD frame even if set DROP by RX filter
                                     0: Bypass this check.
                                     1: Receive RSVD to DMA, and drop by DMA
    RX_CTRL_FOR_PS_BA[14]        - (RW) BA frame to update PS bit
                                     This bit only effect BA frame even if set DROP by RX filter
                                     0: Bypass this check.
                                     1: Receive BA to DMA, and drop by DMA
    RX_CTRL_FOR_PS_ACK[15]       - (RW) ACK frame to update PS bit
                                     This bit only effect ACK frame even if set DROP by RX filter
                                     0: Bypass this check.
                                     1: Receive ACK to DMA, and drop by DMA
    RX_CTRL_FOR_PS_CTS[16]       - (RW) CTS frame to update PS bit
                                     This bit only effect CTS frame even if set DROP by RX filter
                                     0: Bypass this check.
                                     1: Receive CTS to DMA, and drop by DMA
    RX_CTRL_FOR_PS_RTS[17]       - (RW) RTS frame to update PS bit
                                     This bit only effect RTS frame even if set DROP by RX filter
                                     0: Bypass this check.
                                     1: Receive RTS to DMA, and drop by DMA
    RX_SMART_CONNECTION_EN[18]   - (RW) For smart connection 
                                     0: disable smart connection
                                     1: enable smart connection. When ToDS=1 and A3=multicast packet, receive it (bypass other RX filter setting except FCS)
    RX_SMART_CONN_NEW_MODE_EN[19] - (RW) Smart Connection New Mode. (Only valid when RX_SMART_CONNECTION_EN == 1)
                                     0 : Disable Smart Connection New Mode.
                                     1 : Enable smart Connection new mode. When Rx packet's destination addr[23:0] matches SCON.SCONN_DA_COMP_PAT, and Rx packet's Addr2 matches designated MAC address configured in MUAR table even entry 32~63 (EX: addr32, addr34, xxx).(A2 compare is optional and enabled by RX_SMART_CONN_NEW_A2_COMP_EN) 
                                     Receive it. (bypass other RX filter setting except FCS)
    RX_SMART_CONN_NEW_A2_COMP_EN[20] - (RW) Smart Connection New Mode Addr2 Compare Enable (Only valid when RX_SMART_CONNECTION_EN and RX_SMART_CONN_NEW_A2_COMP_EN == 1)
                                     0 : Disable Smart Connection New Mode Addr2 comparison.
                                     1 : Only the Rx packet whose Addr2 matches designated MAC address configured in MUAR table even entry 32~63 (EX: addr32, addr34, xxx) can further do destination addr compare with SCON.SCONN_DA_COMP_PAT and received by Smart Connection New Mode.
    DROP_RCPI_LT_THR[21]         - (RW) Drop Rx RCPI less the designate RCPI threshold.
                                     0 : Bypass this check.
                                     1 : Discard Rx packet whose RCPI is less than designated threshold configured in SCON.RCPI_DROP_THRESHOLD.
    DROP_NO2ME_TF[22]            - (RW) Drop trigger frame which is not intended to my OWNMAC address or AID.
                                     1: Drop not TOME TF
                                     0: Not Drop not TOME TF
    DROP_NON_MUBAR_TF[23]        - (RW) Drop trigger frame which Trigger ype is not MU-BAR
                                     0: Drop non MU-BAR TF by it's drop setting
                                     1: Drop non MU-BAR TF
    RX_TF_FOR_RXS_BASIC[24]      - (RW) Rx Basic Trigger frame frame to update Rx status
                                     This bit only effect Basic Trigger frame even if set DROP by RX filter
                                     0: Bypass this check.
                                     1: Receive to DMA, and drop by DMA
    RX_TF_FOR_RXS_BRP[25]        - (RW) Rx BRP Trigger frame frame to update Rx status
                                     This bit only effect BRP Trigger frame even if set DROP by RX filter
                                     0: Bypass this check.
                                     1: Receive to DMA, and drop by DMA
    RX_TF_FOR_RXS_MURTS[26]      - (RW) Rx MU RTS Trigger frame frame to update Rx status
                                     This bit only effect MU RTS Trigger frame even if set DROP by RX filter
                                     0: Bypass this check.
                                     1: Receive to DMA, and drop by DMA
    RX_TF_FOR_RXS_BSRP[27]       - (RW) Rx BSRP Trigger frame frame to update Rx status
                                     This bit only effect BSRP Trigger frame even if set DROP by RX filter
                                     0: Bypass this check.
                                     1: Receive to DMA, and drop by DMA
    RX_TF_FOR_RXS_BQRP[28]       - (RW) Rx BQRP Trigger frame frame to update Rx status
                                     This bit only effect BQRP Trigger frame even if set DROP by RX filter
                                     0: Bypass this check.
                                     1: Receive to DMA, and drop by DMA
    RX_TF_FOR_RXS_NON_SUPPORT[29] - (RW) Rx non-supported Trigger frame frame to update Rx status
                                     This bit only effect non-supportedTrigger frame even if set DROP by RX filter
                                     0: Bypass this check.
                                     1: Receive to DMA, and drop by DMA
    DROP_TF_BFRP[30]             - (RW) Drop Trigger Frame Beamform Report poll frame
                                     0: The Trigger Frame Beamform Report poll frame will pass this check
                                     1: The Trigger Frame Beamform Report poll frame will be dropped
    RESERVED31[31]               - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RFCR1_DROP_TF_BFRP_ADDR                BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_DROP_TF_BFRP_MASK                0x40000000                // DROP_TF_BFRP[30]
#define BN1_WF_RMAC_TOP_RFCR1_DROP_TF_BFRP_SHFT                30
#define BN1_WF_RMAC_TOP_RFCR1_RX_TF_FOR_RXS_NON_SUPPORT_ADDR   BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_RX_TF_FOR_RXS_NON_SUPPORT_MASK   0x20000000                // RX_TF_FOR_RXS_NON_SUPPORT[29]
#define BN1_WF_RMAC_TOP_RFCR1_RX_TF_FOR_RXS_NON_SUPPORT_SHFT   29
#define BN1_WF_RMAC_TOP_RFCR1_RX_TF_FOR_RXS_BQRP_ADDR          BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_RX_TF_FOR_RXS_BQRP_MASK          0x10000000                // RX_TF_FOR_RXS_BQRP[28]
#define BN1_WF_RMAC_TOP_RFCR1_RX_TF_FOR_RXS_BQRP_SHFT          28
#define BN1_WF_RMAC_TOP_RFCR1_RX_TF_FOR_RXS_BSRP_ADDR          BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_RX_TF_FOR_RXS_BSRP_MASK          0x08000000                // RX_TF_FOR_RXS_BSRP[27]
#define BN1_WF_RMAC_TOP_RFCR1_RX_TF_FOR_RXS_BSRP_SHFT          27
#define BN1_WF_RMAC_TOP_RFCR1_RX_TF_FOR_RXS_MURTS_ADDR         BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_RX_TF_FOR_RXS_MURTS_MASK         0x04000000                // RX_TF_FOR_RXS_MURTS[26]
#define BN1_WF_RMAC_TOP_RFCR1_RX_TF_FOR_RXS_MURTS_SHFT         26
#define BN1_WF_RMAC_TOP_RFCR1_RX_TF_FOR_RXS_BRP_ADDR           BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_RX_TF_FOR_RXS_BRP_MASK           0x02000000                // RX_TF_FOR_RXS_BRP[25]
#define BN1_WF_RMAC_TOP_RFCR1_RX_TF_FOR_RXS_BRP_SHFT           25
#define BN1_WF_RMAC_TOP_RFCR1_RX_TF_FOR_RXS_BASIC_ADDR         BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_RX_TF_FOR_RXS_BASIC_MASK         0x01000000                // RX_TF_FOR_RXS_BASIC[24]
#define BN1_WF_RMAC_TOP_RFCR1_RX_TF_FOR_RXS_BASIC_SHFT         24
#define BN1_WF_RMAC_TOP_RFCR1_DROP_NON_MUBAR_TF_ADDR           BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_DROP_NON_MUBAR_TF_MASK           0x00800000                // DROP_NON_MUBAR_TF[23]
#define BN1_WF_RMAC_TOP_RFCR1_DROP_NON_MUBAR_TF_SHFT           23
#define BN1_WF_RMAC_TOP_RFCR1_DROP_NO2ME_TF_ADDR               BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_DROP_NO2ME_TF_MASK               0x00400000                // DROP_NO2ME_TF[22]
#define BN1_WF_RMAC_TOP_RFCR1_DROP_NO2ME_TF_SHFT               22
#define BN1_WF_RMAC_TOP_RFCR1_DROP_RCPI_LT_THR_ADDR            BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_DROP_RCPI_LT_THR_MASK            0x00200000                // DROP_RCPI_LT_THR[21]
#define BN1_WF_RMAC_TOP_RFCR1_DROP_RCPI_LT_THR_SHFT            21
#define BN1_WF_RMAC_TOP_RFCR1_RX_SMART_CONN_NEW_A2_COMP_EN_ADDR BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_RX_SMART_CONN_NEW_A2_COMP_EN_MASK 0x00100000                // RX_SMART_CONN_NEW_A2_COMP_EN[20]
#define BN1_WF_RMAC_TOP_RFCR1_RX_SMART_CONN_NEW_A2_COMP_EN_SHFT 20
#define BN1_WF_RMAC_TOP_RFCR1_RX_SMART_CONN_NEW_MODE_EN_ADDR   BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_RX_SMART_CONN_NEW_MODE_EN_MASK   0x00080000                // RX_SMART_CONN_NEW_MODE_EN[19]
#define BN1_WF_RMAC_TOP_RFCR1_RX_SMART_CONN_NEW_MODE_EN_SHFT   19
#define BN1_WF_RMAC_TOP_RFCR1_RX_SMART_CONNECTION_EN_ADDR      BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_RX_SMART_CONNECTION_EN_MASK      0x00040000                // RX_SMART_CONNECTION_EN[18]
#define BN1_WF_RMAC_TOP_RFCR1_RX_SMART_CONNECTION_EN_SHFT      18
#define BN1_WF_RMAC_TOP_RFCR1_RX_CTRL_FOR_PS_RTS_ADDR          BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_RX_CTRL_FOR_PS_RTS_MASK          0x00020000                // RX_CTRL_FOR_PS_RTS[17]
#define BN1_WF_RMAC_TOP_RFCR1_RX_CTRL_FOR_PS_RTS_SHFT          17
#define BN1_WF_RMAC_TOP_RFCR1_RX_CTRL_FOR_PS_CTS_ADDR          BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_RX_CTRL_FOR_PS_CTS_MASK          0x00010000                // RX_CTRL_FOR_PS_CTS[16]
#define BN1_WF_RMAC_TOP_RFCR1_RX_CTRL_FOR_PS_CTS_SHFT          16
#define BN1_WF_RMAC_TOP_RFCR1_RX_CTRL_FOR_PS_ACK_ADDR          BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_RX_CTRL_FOR_PS_ACK_MASK          0x00008000                // RX_CTRL_FOR_PS_ACK[15]
#define BN1_WF_RMAC_TOP_RFCR1_RX_CTRL_FOR_PS_ACK_SHFT          15
#define BN1_WF_RMAC_TOP_RFCR1_RX_CTRL_FOR_PS_BA_ADDR           BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_RX_CTRL_FOR_PS_BA_MASK           0x00004000                // RX_CTRL_FOR_PS_BA[14]
#define BN1_WF_RMAC_TOP_RFCR1_RX_CTRL_FOR_PS_BA_SHFT           14
#define BN1_WF_RMAC_TOP_RFCR1_RX_CTRL_FOR_PS_RSVD_ADDR         BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_RX_CTRL_FOR_PS_RSVD_MASK         0x00002000                // RX_CTRL_FOR_PS_RSVD[13]
#define BN1_WF_RMAC_TOP_RFCR1_RX_CTRL_FOR_PS_RSVD_SHFT         13
#define BN1_WF_RMAC_TOP_RFCR1_RX_CTRL_FOR_PS_NDPA_ADDR         BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_RX_CTRL_FOR_PS_NDPA_MASK         0x00001000                // RX_CTRL_FOR_PS_NDPA[12]
#define BN1_WF_RMAC_TOP_RFCR1_RX_CTRL_FOR_PS_NDPA_SHFT         12
#define BN1_WF_RMAC_TOP_RFCR1_RX_CTRL_FOR_PS_BFRPOL_ADDR       BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_RX_CTRL_FOR_PS_BFRPOL_MASK       0x00000800                // RX_CTRL_FOR_PS_BFRPOL[11]
#define BN1_WF_RMAC_TOP_RFCR1_RX_CTRL_FOR_PS_BFRPOL_SHFT       11
#define BN1_WF_RMAC_TOP_RFCR1_RX_CTRL_FOR_PS_CFEND_ADDR        BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_RX_CTRL_FOR_PS_CFEND_MASK        0x00000400                // RX_CTRL_FOR_PS_CFEND[10]
#define BN1_WF_RMAC_TOP_RFCR1_RX_CTRL_FOR_PS_CFEND_SHFT        10
#define BN1_WF_RMAC_TOP_RFCR1_RX_CTRL_FOR_PS_CFEND_CFACK_ADDR  BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_RX_CTRL_FOR_PS_CFEND_CFACK_MASK  0x00000200                // RX_CTRL_FOR_PS_CFEND_CFACK[9]
#define BN1_WF_RMAC_TOP_RFCR1_RX_CTRL_FOR_PS_CFEND_CFACK_SHFT  9
#define BN1_WF_RMAC_TOP_RFCR1_DROP_CFEND_CFACK_FRAME_ADDR      BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_DROP_CFEND_CFACK_FRAME_MASK      0x00000100                // DROP_CFEND_CFACK_FRAME[8]
#define BN1_WF_RMAC_TOP_RFCR1_DROP_CFEND_CFACK_FRAME_SHFT      8
#define BN1_WF_RMAC_TOP_RFCR1_DROP_CFEND_FRAME_ADDR            BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_DROP_CFEND_FRAME_MASK            0x00000080                // DROP_CFEND_FRAME[7]
#define BN1_WF_RMAC_TOP_RFCR1_DROP_CFEND_FRAME_SHFT            7
#define BN1_WF_RMAC_TOP_RFCR1_DROP_BA_FRAME_ADDR               BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_DROP_BA_FRAME_MASK               0x00000040                // DROP_BA_FRAME[6]
#define BN1_WF_RMAC_TOP_RFCR1_DROP_BA_FRAME_SHFT               6
#define BN1_WF_RMAC_TOP_RFCR1_DROP_BFR_POLL_FRAME_ADDR         BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_DROP_BFR_POLL_FRAME_MASK         0x00000020                // DROP_BFR_POLL_FRAME[5]
#define BN1_WF_RMAC_TOP_RFCR1_DROP_BFR_POLL_FRAME_SHFT         5
#define BN1_WF_RMAC_TOP_RFCR1_DROP_ACK_FRAME_ADDR              BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_DROP_ACK_FRAME_MASK              0x00000010                // DROP_ACK_FRAME[4]
#define BN1_WF_RMAC_TOP_RFCR1_DROP_ACK_FRAME_SHFT              4
#define BN1_WF_RMAC_TOP_RFCR1_DROP_NOT_IN_MC_TABLE_BSSIDX_ADDR BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_DROP_NOT_IN_MC_TABLE_BSSIDX_MASK 0x00000008                // DROP_NOT_IN_MC_TABLE_BSSIDX[3]
#define BN1_WF_RMAC_TOP_RFCR1_DROP_NOT_IN_MC_TABLE_BSSIDX_SHFT 3
#define BN1_WF_RMAC_TOP_RFCR1_DROP_NOT_IN_MC_TABLE_BSSID3_ADDR BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_DROP_NOT_IN_MC_TABLE_BSSID3_MASK 0x00000004                // DROP_NOT_IN_MC_TABLE_BSSID3[2]
#define BN1_WF_RMAC_TOP_RFCR1_DROP_NOT_IN_MC_TABLE_BSSID3_SHFT 2
#define BN1_WF_RMAC_TOP_RFCR1_DROP_NOT_IN_MC_TABLE_BSSID2_ADDR BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_DROP_NOT_IN_MC_TABLE_BSSID2_MASK 0x00000002                // DROP_NOT_IN_MC_TABLE_BSSID2[1]
#define BN1_WF_RMAC_TOP_RFCR1_DROP_NOT_IN_MC_TABLE_BSSID2_SHFT 1
#define BN1_WF_RMAC_TOP_RFCR1_DROP_NOT_IN_MC_TABLE_BSSID1_ADDR BN1_WF_RMAC_TOP_RFCR1_ADDR
#define BN1_WF_RMAC_TOP_RFCR1_DROP_NOT_IN_MC_TABLE_BSSID1_MASK 0x00000001                // DROP_NOT_IN_MC_TABLE_BSSID1[0]
#define BN1_WF_RMAC_TOP_RFCR1_DROP_NOT_IN_MC_TABLE_BSSID1_SHFT 0

/* =====================================================================================

  ---BCNF0 (0x820f5000 + 0x10)---

    BCNF0_NUM[7..0]              - (RW) Beacon filter0 IE number
                                     Will be hashed if match this IE number
    BCNF0_EN[8]                  - (RW) Beacon filter0 enable
                                     0: Disable
                                     1: Enable
    BCNF0_EXTEID_EN[9]           - (RW) Beacon filter0 EXTEID enable
                                     0: Disable
                                     1: Enable
    RESERVED10[15..10]           - (RO) Reserved bits
    BCNF1_NUM[23..16]            - (RW) Beacon filter1 IE number
                                     Will be hashed if match this IE number
    BCNF1_EN[24]                 - (RW) Beacon filter1 enable
                                     0: Disable
                                     1: Enable
    BCNF1_EXTEID_EN[25]          - (RW) Beacon filter1 EXTEID enable
                                     0: Disable
                                     1: Enable
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_BCNF0_BCNF1_EXTEID_EN_ADDR             BN1_WF_RMAC_TOP_BCNF0_ADDR
#define BN1_WF_RMAC_TOP_BCNF0_BCNF1_EXTEID_EN_MASK             0x02000000                // BCNF1_EXTEID_EN[25]
#define BN1_WF_RMAC_TOP_BCNF0_BCNF1_EXTEID_EN_SHFT             25
#define BN1_WF_RMAC_TOP_BCNF0_BCNF1_EN_ADDR                    BN1_WF_RMAC_TOP_BCNF0_ADDR
#define BN1_WF_RMAC_TOP_BCNF0_BCNF1_EN_MASK                    0x01000000                // BCNF1_EN[24]
#define BN1_WF_RMAC_TOP_BCNF0_BCNF1_EN_SHFT                    24
#define BN1_WF_RMAC_TOP_BCNF0_BCNF1_NUM_ADDR                   BN1_WF_RMAC_TOP_BCNF0_ADDR
#define BN1_WF_RMAC_TOP_BCNF0_BCNF1_NUM_MASK                   0x00FF0000                // BCNF1_NUM[23..16]
#define BN1_WF_RMAC_TOP_BCNF0_BCNF1_NUM_SHFT                   16
#define BN1_WF_RMAC_TOP_BCNF0_BCNF0_EXTEID_EN_ADDR             BN1_WF_RMAC_TOP_BCNF0_ADDR
#define BN1_WF_RMAC_TOP_BCNF0_BCNF0_EXTEID_EN_MASK             0x00000200                // BCNF0_EXTEID_EN[9]
#define BN1_WF_RMAC_TOP_BCNF0_BCNF0_EXTEID_EN_SHFT             9
#define BN1_WF_RMAC_TOP_BCNF0_BCNF0_EN_ADDR                    BN1_WF_RMAC_TOP_BCNF0_ADDR
#define BN1_WF_RMAC_TOP_BCNF0_BCNF0_EN_MASK                    0x00000100                // BCNF0_EN[8]
#define BN1_WF_RMAC_TOP_BCNF0_BCNF0_EN_SHFT                    8
#define BN1_WF_RMAC_TOP_BCNF0_BCNF0_NUM_ADDR                   BN1_WF_RMAC_TOP_BCNF0_ADDR
#define BN1_WF_RMAC_TOP_BCNF0_BCNF0_NUM_MASK                   0x000000FF                // BCNF0_NUM[7..0]
#define BN1_WF_RMAC_TOP_BCNF0_BCNF0_NUM_SHFT                   0

/* =====================================================================================

  ---BCNF1 (0x820f5000 + 0x14)---

    BCNF2_NUM[7..0]              - (RW) Beacon filter2 IE number
                                     Will be hashed if match this IE number
    BCNF2_EN[8]                  - (RW) Beacon filter2 enable
                                     0: Disable
                                     1: Enable
    BCNF2_EXTEID_EN[9]           - (RW) Beacon filter2 EXTEID enable
                                     0: Disable
                                     1: Enable
    RESERVED10[15..10]           - (RO) Reserved bits
    BCNF3_NUM[23..16]            - (RW) Beacon filter3 IE number
                                     Will be hashed if match this IE number
    BCNF3_EN[24]                 - (RW) Beacon filter3 enable
                                     0: Disable
                                     1: Enable
    BCNF3_EXTEID_EN[25]          - (RW) Beacon filter3 EXTEID enable
                                     0: Disable
                                     1: Enable
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_BCNF1_BCNF3_EXTEID_EN_ADDR             BN1_WF_RMAC_TOP_BCNF1_ADDR
#define BN1_WF_RMAC_TOP_BCNF1_BCNF3_EXTEID_EN_MASK             0x02000000                // BCNF3_EXTEID_EN[25]
#define BN1_WF_RMAC_TOP_BCNF1_BCNF3_EXTEID_EN_SHFT             25
#define BN1_WF_RMAC_TOP_BCNF1_BCNF3_EN_ADDR                    BN1_WF_RMAC_TOP_BCNF1_ADDR
#define BN1_WF_RMAC_TOP_BCNF1_BCNF3_EN_MASK                    0x01000000                // BCNF3_EN[24]
#define BN1_WF_RMAC_TOP_BCNF1_BCNF3_EN_SHFT                    24
#define BN1_WF_RMAC_TOP_BCNF1_BCNF3_NUM_ADDR                   BN1_WF_RMAC_TOP_BCNF1_ADDR
#define BN1_WF_RMAC_TOP_BCNF1_BCNF3_NUM_MASK                   0x00FF0000                // BCNF3_NUM[23..16]
#define BN1_WF_RMAC_TOP_BCNF1_BCNF3_NUM_SHFT                   16
#define BN1_WF_RMAC_TOP_BCNF1_BCNF2_EXTEID_EN_ADDR             BN1_WF_RMAC_TOP_BCNF1_ADDR
#define BN1_WF_RMAC_TOP_BCNF1_BCNF2_EXTEID_EN_MASK             0x00000200                // BCNF2_EXTEID_EN[9]
#define BN1_WF_RMAC_TOP_BCNF1_BCNF2_EXTEID_EN_SHFT             9
#define BN1_WF_RMAC_TOP_BCNF1_BCNF2_EN_ADDR                    BN1_WF_RMAC_TOP_BCNF1_ADDR
#define BN1_WF_RMAC_TOP_BCNF1_BCNF2_EN_MASK                    0x00000100                // BCNF2_EN[8]
#define BN1_WF_RMAC_TOP_BCNF1_BCNF2_EN_SHFT                    8
#define BN1_WF_RMAC_TOP_BCNF1_BCNF2_NUM_ADDR                   BN1_WF_RMAC_TOP_BCNF1_ADDR
#define BN1_WF_RMAC_TOP_BCNF1_BCNF2_NUM_MASK                   0x000000FF                // BCNF2_NUM[7..0]
#define BN1_WF_RMAC_TOP_BCNF1_BCNF2_NUM_SHFT                   0

/* =====================================================================================

  ---BCNF2 (0x820f5000 + 0x18)---

    BCNF4_NUM[7..0]              - (RW) Beacon filter4 IE number
                                     Will be hashed if match this IE number
    BCNF4_EN[8]                  - (RW) Beacon filter4 enable
                                     0: Disable
                                     1: Enable
    BCNF4_EXTEID_EN[9]           - (RW) Beacon filter4 EXTEID enable
                                     0: Disable
                                     1: Enable
    RESERVED10[15..10]           - (RO) Reserved bits
    BCNF5_NUM[23..16]            - (RW) Beacon filter5 IE number
                                     Will be hashed if match this IE number
    BCNF5_EN[24]                 - (RW) Beacon filter5 enable
                                     0: Disable
                                     1: Enable
    BCNF5_EXTEID_EN[25]          - (RW) Beacon filter5 EXTEID enable
                                     0: Disable
                                     1: Enable
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_BCNF2_BCNF5_EXTEID_EN_ADDR             BN1_WF_RMAC_TOP_BCNF2_ADDR
#define BN1_WF_RMAC_TOP_BCNF2_BCNF5_EXTEID_EN_MASK             0x02000000                // BCNF5_EXTEID_EN[25]
#define BN1_WF_RMAC_TOP_BCNF2_BCNF5_EXTEID_EN_SHFT             25
#define BN1_WF_RMAC_TOP_BCNF2_BCNF5_EN_ADDR                    BN1_WF_RMAC_TOP_BCNF2_ADDR
#define BN1_WF_RMAC_TOP_BCNF2_BCNF5_EN_MASK                    0x01000000                // BCNF5_EN[24]
#define BN1_WF_RMAC_TOP_BCNF2_BCNF5_EN_SHFT                    24
#define BN1_WF_RMAC_TOP_BCNF2_BCNF5_NUM_ADDR                   BN1_WF_RMAC_TOP_BCNF2_ADDR
#define BN1_WF_RMAC_TOP_BCNF2_BCNF5_NUM_MASK                   0x00FF0000                // BCNF5_NUM[23..16]
#define BN1_WF_RMAC_TOP_BCNF2_BCNF5_NUM_SHFT                   16
#define BN1_WF_RMAC_TOP_BCNF2_BCNF4_EXTEID_EN_ADDR             BN1_WF_RMAC_TOP_BCNF2_ADDR
#define BN1_WF_RMAC_TOP_BCNF2_BCNF4_EXTEID_EN_MASK             0x00000200                // BCNF4_EXTEID_EN[9]
#define BN1_WF_RMAC_TOP_BCNF2_BCNF4_EXTEID_EN_SHFT             9
#define BN1_WF_RMAC_TOP_BCNF2_BCNF4_EN_ADDR                    BN1_WF_RMAC_TOP_BCNF2_ADDR
#define BN1_WF_RMAC_TOP_BCNF2_BCNF4_EN_MASK                    0x00000100                // BCNF4_EN[8]
#define BN1_WF_RMAC_TOP_BCNF2_BCNF4_EN_SHFT                    8
#define BN1_WF_RMAC_TOP_BCNF2_BCNF4_NUM_ADDR                   BN1_WF_RMAC_TOP_BCNF2_ADDR
#define BN1_WF_RMAC_TOP_BCNF2_BCNF4_NUM_MASK                   0x000000FF                // BCNF4_NUM[7..0]
#define BN1_WF_RMAC_TOP_BCNF2_BCNF4_NUM_SHFT                   0

/* =====================================================================================

  ---BCNF3 (0x820f5000 + 0x1c)---

    BCNF6_NUM[7..0]              - (RW) Beacon filter6 IE number
                                     Will be hashed if match this IE number
    BCNF6_EN[8]                  - (RW) Beacon filter6 enable
                                     0: Disable
                                     1: Enable
    BCNF6_EXTEID_EN[9]           - (RW) Beacon filter6 EXTEID enable
                                     0: Disable
                                     1: Enable
    RESERVED10[15..10]           - (RO) Reserved bits
    BCNF7_NUM[23..16]            - (RW) Beacon filter7 IE number
                                     Will be hashed if match this IE number
    BCNF7_EN[24]                 - (RW) Beacon filter7 enable
                                     0: Disable
                                     1: Enable
    BCNF7_EXTEID_EN[25]          - (RW) Beacon filter7 EXTEID enable
                                     0: Disable
                                     1: Enable
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_BCNF3_BCNF7_EXTEID_EN_ADDR             BN1_WF_RMAC_TOP_BCNF3_ADDR
#define BN1_WF_RMAC_TOP_BCNF3_BCNF7_EXTEID_EN_MASK             0x02000000                // BCNF7_EXTEID_EN[25]
#define BN1_WF_RMAC_TOP_BCNF3_BCNF7_EXTEID_EN_SHFT             25
#define BN1_WF_RMAC_TOP_BCNF3_BCNF7_EN_ADDR                    BN1_WF_RMAC_TOP_BCNF3_ADDR
#define BN1_WF_RMAC_TOP_BCNF3_BCNF7_EN_MASK                    0x01000000                // BCNF7_EN[24]
#define BN1_WF_RMAC_TOP_BCNF3_BCNF7_EN_SHFT                    24
#define BN1_WF_RMAC_TOP_BCNF3_BCNF7_NUM_ADDR                   BN1_WF_RMAC_TOP_BCNF3_ADDR
#define BN1_WF_RMAC_TOP_BCNF3_BCNF7_NUM_MASK                   0x00FF0000                // BCNF7_NUM[23..16]
#define BN1_WF_RMAC_TOP_BCNF3_BCNF7_NUM_SHFT                   16
#define BN1_WF_RMAC_TOP_BCNF3_BCNF6_EXTEID_EN_ADDR             BN1_WF_RMAC_TOP_BCNF3_ADDR
#define BN1_WF_RMAC_TOP_BCNF3_BCNF6_EXTEID_EN_MASK             0x00000200                // BCNF6_EXTEID_EN[9]
#define BN1_WF_RMAC_TOP_BCNF3_BCNF6_EXTEID_EN_SHFT             9
#define BN1_WF_RMAC_TOP_BCNF3_BCNF6_EN_ADDR                    BN1_WF_RMAC_TOP_BCNF3_ADDR
#define BN1_WF_RMAC_TOP_BCNF3_BCNF6_EN_MASK                    0x00000100                // BCNF6_EN[8]
#define BN1_WF_RMAC_TOP_BCNF3_BCNF6_EN_SHFT                    8
#define BN1_WF_RMAC_TOP_BCNF3_BCNF6_NUM_ADDR                   BN1_WF_RMAC_TOP_BCNF3_ADDR
#define BN1_WF_RMAC_TOP_BCNF3_BCNF6_NUM_MASK                   0x000000FF                // BCNF6_NUM[7..0]
#define BN1_WF_RMAC_TOP_BCNF3_BCNF6_NUM_SHFT                   0

/* =====================================================================================

  ---BCN_EXTEID (0x820f5000 + 0x20)---

    RMAC_BCN_CHK_EXTEL_EN[15..0] - (RW) Exclude IE comparison of following Extend IE list. MAC won't compare the Information Element with corresponding bit set to 1.
                                     [0] : Exclude IE EXTID "35" comparison
                                     [1] : Exclude IE EXTID "36" comparison
                                     [2] : Exclude IE EXTID "37" comparison
                                     [3] : Exclude IE EXTID "38" comparison
                                     [4] : Exclude IE EXTID "39" comparison
                                     [5] : Exclude IE EXTID "41" comparison
                                     [6] : Exclude IE EXTID "42" comparison
                                     [7] : Exclude IE EXTID "45" comparison
                                     [8] : Exclude IE EXTID "47" comparison
    RMAC_BCN_CHK_EL2_EN[23..16]  - (RW) Exclude IE comparison of following  IE2 list. MAC won't compare the Information Element with corresponding bit set to 1.
                                     [0] : Exclude IE ID "45" comparison
                                     [1] : Exclude IE ID "199" comparison
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_BCN_EXTEID_RMAC_BCN_CHK_EL2_EN_ADDR    BN1_WF_RMAC_TOP_BCN_EXTEID_ADDR
#define BN1_WF_RMAC_TOP_BCN_EXTEID_RMAC_BCN_CHK_EL2_EN_MASK    0x00FF0000                // RMAC_BCN_CHK_EL2_EN[23..16]
#define BN1_WF_RMAC_TOP_BCN_EXTEID_RMAC_BCN_CHK_EL2_EN_SHFT    16
#define BN1_WF_RMAC_TOP_BCN_EXTEID_RMAC_BCN_CHK_EXTEL_EN_ADDR  BN1_WF_RMAC_TOP_BCN_EXTEID_ADDR
#define BN1_WF_RMAC_TOP_BCN_EXTEID_RMAC_BCN_CHK_EXTEL_EN_MASK  0x0000FFFF                // RMAC_BCN_CHK_EXTEL_EN[15..0]
#define BN1_WF_RMAC_TOP_BCN_EXTEID_RMAC_BCN_CHK_EXTEL_EN_SHFT  0

/* =====================================================================================

  ---BCN01_HASH_BURS_PA (0x820f5000 + 0x24)---

    HASH16_BSSID0[15..0]         - (RO) Backup/Restore beacon hash
                                     HASH16 result of previous received beacon of BSSID0.  For backup/restore hash16 value when power down
    HASH16_BSSID1[31..16]        - (RO) Backup/Restore beacon hash
                                     HASH16 result of previous received beacon of BSSID1. For backup/restore hash16 value when power down

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_BCN01_HASH_BURS_PA_HASH16_BSSID1_ADDR  BN1_WF_RMAC_TOP_BCN01_HASH_BURS_PA_ADDR
#define BN1_WF_RMAC_TOP_BCN01_HASH_BURS_PA_HASH16_BSSID1_MASK  0xFFFF0000                // HASH16_BSSID1[31..16]
#define BN1_WF_RMAC_TOP_BCN01_HASH_BURS_PA_HASH16_BSSID1_SHFT  16
#define BN1_WF_RMAC_TOP_BCN01_HASH_BURS_PA_HASH16_BSSID0_ADDR  BN1_WF_RMAC_TOP_BCN01_HASH_BURS_PA_ADDR
#define BN1_WF_RMAC_TOP_BCN01_HASH_BURS_PA_HASH16_BSSID0_MASK  0x0000FFFF                // HASH16_BSSID0[15..0]
#define BN1_WF_RMAC_TOP_BCN01_HASH_BURS_PA_HASH16_BSSID0_SHFT  0

/* =====================================================================================

  ---BCN23_HASH_BURS_PA (0x820f5000 + 0x28)---

    HASH16_BSSID2[15..0]         - (RO) Backup/Restore beacon hash
                                     HASH16 result of previous received beacon of BSSID2.  For backup/restore hash16 value when power down
    HASH16_BSSID3[31..16]        - (RO) Backup/Restore beacon hash
                                     HASH16 result of previous received beacon of BSSID3. For backup/restore hash16 value when power down

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_BCN23_HASH_BURS_PA_HASH16_BSSID3_ADDR  BN1_WF_RMAC_TOP_BCN23_HASH_BURS_PA_ADDR
#define BN1_WF_RMAC_TOP_BCN23_HASH_BURS_PA_HASH16_BSSID3_MASK  0xFFFF0000                // HASH16_BSSID3[31..16]
#define BN1_WF_RMAC_TOP_BCN23_HASH_BURS_PA_HASH16_BSSID3_SHFT  16
#define BN1_WF_RMAC_TOP_BCN23_HASH_BURS_PA_HASH16_BSSID2_ADDR  BN1_WF_RMAC_TOP_BCN23_HASH_BURS_PA_ADDR
#define BN1_WF_RMAC_TOP_BCN23_HASH_BURS_PA_HASH16_BSSID2_MASK  0x0000FFFF                // HASH16_BSSID2[15..0]
#define BN1_WF_RMAC_TOP_BCN23_HASH_BURS_PA_HASH16_BSSID2_SHFT  0

/* =====================================================================================

  ---BTIM_BR (0x820f5000 + 0x2c)---

    BTIM_BR_VALUE_BSS3[7..0]     - (RW) Backup/restore BTIM Hash value of BSS3
                                     read to backup BTIM check beacon value
                                     restore to restore BTIM check beacon value
    BTIM_BR_VALUE_BSS2[15..8]    - (RW) Backup/restore BTIM Hash value of BSS2
                                     read to backup BTIM check beacon value
                                     restore to restore BTIM check beacon value
    BTIM_BR_VALUE_BSS1[23..16]   - (RW) Backup/restore BTIM Hash value of BSS1
                                     read to backup BTIM check beacon value
                                     restore to restore BTIM check beacon value
    BTIM_BR_VALUE_BSS0[31..24]   - (RW) Backup/restore BTIM Hash value of BSS0
                                     read to backup BTIM check beacon value
                                     restore to restore BTIM check beacon value

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_BTIM_BR_BTIM_BR_VALUE_BSS0_ADDR        BN1_WF_RMAC_TOP_BTIM_BR_ADDR
#define BN1_WF_RMAC_TOP_BTIM_BR_BTIM_BR_VALUE_BSS0_MASK        0xFF000000                // BTIM_BR_VALUE_BSS0[31..24]
#define BN1_WF_RMAC_TOP_BTIM_BR_BTIM_BR_VALUE_BSS0_SHFT        24
#define BN1_WF_RMAC_TOP_BTIM_BR_BTIM_BR_VALUE_BSS1_ADDR        BN1_WF_RMAC_TOP_BTIM_BR_ADDR
#define BN1_WF_RMAC_TOP_BTIM_BR_BTIM_BR_VALUE_BSS1_MASK        0x00FF0000                // BTIM_BR_VALUE_BSS1[23..16]
#define BN1_WF_RMAC_TOP_BTIM_BR_BTIM_BR_VALUE_BSS1_SHFT        16
#define BN1_WF_RMAC_TOP_BTIM_BR_BTIM_BR_VALUE_BSS2_ADDR        BN1_WF_RMAC_TOP_BTIM_BR_ADDR
#define BN1_WF_RMAC_TOP_BTIM_BR_BTIM_BR_VALUE_BSS2_MASK        0x0000FF00                // BTIM_BR_VALUE_BSS2[15..8]
#define BN1_WF_RMAC_TOP_BTIM_BR_BTIM_BR_VALUE_BSS2_SHFT        8
#define BN1_WF_RMAC_TOP_BTIM_BR_BTIM_BR_VALUE_BSS3_ADDR        BN1_WF_RMAC_TOP_BTIM_BR_ADDR
#define BN1_WF_RMAC_TOP_BTIM_BR_BTIM_BR_VALUE_BSS3_MASK        0x000000FF                // BTIM_BR_VALUE_BSS3[7..0]
#define BN1_WF_RMAC_TOP_BTIM_BR_BTIM_BR_VALUE_BSS3_SHFT        0

/* =====================================================================================

  ---BIPN_DBG (0x820f5000 + 0x30)---

    BIPN_TRIG_CNT[7..0]          - (RO) BIPN TSF delay update trigger count, read clear
    BIPN_OVERLAP_CNT[15..8]      - (RO) BIPN TSF delay update overlap count, read clear
    BIPN_CHK_PASS_CNT[23..16]    - (RO) BIPN TSF delay update check PASS count, read clear
    BIPN_CHK_FAIL_CNT[31..24]    - (RW) BIPN TSF delay update check FAIL count, read clear

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_BIPN_DBG_BIPN_CHK_FAIL_CNT_ADDR        BN1_WF_RMAC_TOP_BIPN_DBG_ADDR
#define BN1_WF_RMAC_TOP_BIPN_DBG_BIPN_CHK_FAIL_CNT_MASK        0xFF000000                // BIPN_CHK_FAIL_CNT[31..24]
#define BN1_WF_RMAC_TOP_BIPN_DBG_BIPN_CHK_FAIL_CNT_SHFT        24
#define BN1_WF_RMAC_TOP_BIPN_DBG_BIPN_CHK_PASS_CNT_ADDR        BN1_WF_RMAC_TOP_BIPN_DBG_ADDR
#define BN1_WF_RMAC_TOP_BIPN_DBG_BIPN_CHK_PASS_CNT_MASK        0x00FF0000                // BIPN_CHK_PASS_CNT[23..16]
#define BN1_WF_RMAC_TOP_BIPN_DBG_BIPN_CHK_PASS_CNT_SHFT        16
#define BN1_WF_RMAC_TOP_BIPN_DBG_BIPN_OVERLAP_CNT_ADDR         BN1_WF_RMAC_TOP_BIPN_DBG_ADDR
#define BN1_WF_RMAC_TOP_BIPN_DBG_BIPN_OVERLAP_CNT_MASK         0x0000FF00                // BIPN_OVERLAP_CNT[15..8]
#define BN1_WF_RMAC_TOP_BIPN_DBG_BIPN_OVERLAP_CNT_SHFT         8
#define BN1_WF_RMAC_TOP_BIPN_DBG_BIPN_TRIG_CNT_ADDR            BN1_WF_RMAC_TOP_BIPN_DBG_ADDR
#define BN1_WF_RMAC_TOP_BIPN_DBG_BIPN_TRIG_CNT_MASK            0x000000FF                // BIPN_TRIG_CNT[7..0]
#define BN1_WF_RMAC_TOP_BIPN_DBG_BIPN_TRIG_CNT_SHFT            0

/* =====================================================================================

  ---BSCR0 (0x820f5000 + 0x38)---

    BA_MAC_ADDR_31_0[31..0]      - (RW) Reset BA scoreboard Addr2 setting
                                     MAC address bits 31~0 for BA scoreboard reset.

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_BSCR0_BA_MAC_ADDR_31_0_ADDR            BN1_WF_RMAC_TOP_BSCR0_ADDR
#define BN1_WF_RMAC_TOP_BSCR0_BA_MAC_ADDR_31_0_MASK            0xFFFFFFFF                // BA_MAC_ADDR_31_0[31..0]
#define BN1_WF_RMAC_TOP_BSCR0_BA_MAC_ADDR_31_0_SHFT            0

/* =====================================================================================

  ---BSCR1 (0x820f5000 + 0x3C)---

    BA_MAC_ADDR_47_32[15..0]     - (RW) Reset BA scoreboard Addr2 setting
                                     MAC address bits 47~32 for BA scoreboard reset.
    RST_BA_TID[19..16]           - (RW) Reset BA scoreboard TID setting
                                     TID for BA scoreboard reset
    RST_BA_SEL[21..20]           - (RW) Reset BA scoreboard setting
                                     2'b11: Reserved.
                                     2'b10: Reset BA scoreboard without match condition.
                                     2'b01: Reset BA scoreboard if MAC address match.
                                     2'b00: Reset BA scoreboard if MAC address and TID match.
    START_RST_BA_SB[22]          - (WO) Start to reset BA scoreboard
                                     Write 1 to start BA scoreboard reset. Write 0 is meaningless. BA scoreboard includes SSN and bitmap. Read always return zero.
    RESERVED23[27..23]           - (RO) Reserved bits
    RST_BA_SCRBD_ID[31..28]      - (RW) Select the BA scoreboard ID to be reset.

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_BSCR1_RST_BA_SCRBD_ID_ADDR             BN1_WF_RMAC_TOP_BSCR1_ADDR
#define BN1_WF_RMAC_TOP_BSCR1_RST_BA_SCRBD_ID_MASK             0xF0000000                // RST_BA_SCRBD_ID[31..28]
#define BN1_WF_RMAC_TOP_BSCR1_RST_BA_SCRBD_ID_SHFT             28
#define BN1_WF_RMAC_TOP_BSCR1_START_RST_BA_SB_ADDR             BN1_WF_RMAC_TOP_BSCR1_ADDR
#define BN1_WF_RMAC_TOP_BSCR1_START_RST_BA_SB_MASK             0x00400000                // START_RST_BA_SB[22]
#define BN1_WF_RMAC_TOP_BSCR1_START_RST_BA_SB_SHFT             22
#define BN1_WF_RMAC_TOP_BSCR1_RST_BA_SEL_ADDR                  BN1_WF_RMAC_TOP_BSCR1_ADDR
#define BN1_WF_RMAC_TOP_BSCR1_RST_BA_SEL_MASK                  0x00300000                // RST_BA_SEL[21..20]
#define BN1_WF_RMAC_TOP_BSCR1_RST_BA_SEL_SHFT                  20
#define BN1_WF_RMAC_TOP_BSCR1_RST_BA_TID_ADDR                  BN1_WF_RMAC_TOP_BSCR1_ADDR
#define BN1_WF_RMAC_TOP_BSCR1_RST_BA_TID_MASK                  0x000F0000                // RST_BA_TID[19..16]
#define BN1_WF_RMAC_TOP_BSCR1_RST_BA_TID_SHFT                  16
#define BN1_WF_RMAC_TOP_BSCR1_BA_MAC_ADDR_47_32_ADDR           BN1_WF_RMAC_TOP_BSCR1_ADDR
#define BN1_WF_RMAC_TOP_BSCR1_BA_MAC_ADDR_47_32_MASK           0x0000FFFF                // BA_MAC_ADDR_47_32[15..0]
#define BN1_WF_RMAC_TOP_BSCR1_BA_MAC_ADDR_47_32_SHFT           0

/* =====================================================================================

  ---NSUR (0x820f5000 + 0x40)---

    NAVUPDATEVALUE_25_0[25..0]   - (RO) NAV update value bits 25~0. 
                                     This value is counted in unit of us. The read value is current NAV value
    RESERVED26[29..26]           - (RO) Reserved bits
    EDCA_CTS_RESP[30]            - (RW) This bit controls CTS responding or not when previous EDCA TXOP NAV is not zero. Ex: For some AP,  AP sends CTS2SELF to reserve TXOP and sends RTS to DUT, DUT will response CTS depend on this setting.
                                     1: CTS frame will be responded when RTS frame with A1 match unicast table is received.
                                     0: CTS frame will not be responded
    NAVUPDATE[31]                - (RW) NAV update command and status bit.
                                     When write, 1 indicates the new NAVUpdateValue is write to the NAV field of packet. 
                                     When read, 
                                     0: NAV value update completed
                                     1: NAV value update in progress

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_NSUR_NAVUPDATE_ADDR                    BN1_WF_RMAC_TOP_NSUR_ADDR
#define BN1_WF_RMAC_TOP_NSUR_NAVUPDATE_MASK                    0x80000000                // NAVUPDATE[31]
#define BN1_WF_RMAC_TOP_NSUR_NAVUPDATE_SHFT                    31
#define BN1_WF_RMAC_TOP_NSUR_EDCA_CTS_RESP_ADDR                BN1_WF_RMAC_TOP_NSUR_ADDR
#define BN1_WF_RMAC_TOP_NSUR_EDCA_CTS_RESP_MASK                0x40000000                // EDCA_CTS_RESP[30]
#define BN1_WF_RMAC_TOP_NSUR_EDCA_CTS_RESP_SHFT                30
#define BN1_WF_RMAC_TOP_NSUR_NAVUPDATEVALUE_25_0_ADDR          BN1_WF_RMAC_TOP_NSUR_ADDR
#define BN1_WF_RMAC_TOP_NSUR_NAVUPDATEVALUE_25_0_MASK          0x03FFFFFF                // NAVUPDATEVALUE_25_0[25..0]
#define BN1_WF_RMAC_TOP_NSUR_NAVUPDATEVALUE_25_0_SHFT          0

/* =====================================================================================

  ---LUNVR (0x820f5000 + 0x44)---

    NAV_VALUE[25..0]             - (RO) Latest updated NAV value
                                     unit in us
    RESERVED26[30..26]           - (RO) Reserved bits
    RESET[31]                    - (WO) Reset NAV value for channel switching.
                                     Write 1 to reset and HW auto clear

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_LUNVR_RESET_ADDR                       BN1_WF_RMAC_TOP_LUNVR_ADDR
#define BN1_WF_RMAC_TOP_LUNVR_RESET_MASK                       0x80000000                // RESET[31]
#define BN1_WF_RMAC_TOP_LUNVR_RESET_SHFT                       31
#define BN1_WF_RMAC_TOP_LUNVR_NAV_VALUE_ADDR                   BN1_WF_RMAC_TOP_LUNVR_ADDR
#define BN1_WF_RMAC_TOP_LUNVR_NAV_VALUE_MASK                   0x03FFFFFF                // NAV_VALUE[25..0]
#define BN1_WF_RMAC_TOP_LUNVR_NAV_VALUE_SHFT                   0

/* =====================================================================================

  ---INSUR (0x820f5000 + 0x48)---

    INAVUPDATEVALUE_25_0[25..0]  - (RO) Intra NAV update value bits 25~0. 
                                     This value is counted in unit of us. The read value is current Intra NAV value
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_INSUR_INAVUPDATEVALUE_25_0_ADDR        BN1_WF_RMAC_TOP_INSUR_ADDR
#define BN1_WF_RMAC_TOP_INSUR_INAVUPDATEVALUE_25_0_MASK        0x03FFFFFF                // INAVUPDATEVALUE_25_0[25..0]
#define BN1_WF_RMAC_TOP_INSUR_INAVUPDATEVALUE_25_0_SHFT        0

/* =====================================================================================

  ---LUINVR (0x820f5000 + 0x4c)---

    INAV_VALUE[25..0]            - (RO) Latest updated Intra NAV value
                                     unit in us
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_LUINVR_INAV_VALUE_ADDR                 BN1_WF_RMAC_TOP_LUINVR_ADDR
#define BN1_WF_RMAC_TOP_LUINVR_INAV_VALUE_MASK                 0x03FFFFFF                // INAV_VALUE[25..0]
#define BN1_WF_RMAC_TOP_LUINVR_INAV_VALUE_SHFT                 0

/* =====================================================================================

  ---NAVOPT_PA (0x820f5000 + 0x50)---

    DAWN_VIOLATE_NAV_EN[0]       - (RW) Dawn violate NAV enable control
                                     0: Normal NAV mechanism.
                                     1: to ignore NAV. We can send packet without checking NAV. After we send packet successfully, we may want to clear xbox_dawn_violate_nav_en to resume original NAV mechanism.
    DAWN_IGNORE_NAV_EN[1]        - (RW) Enalbe/Disable  mechanism that HW ignore NAV value > xbox_dawn_ignore_nav_time_unit
                                     0: Disable
                                     1: Enable
    INTER_BSS_UPD_BY_BSS_COLOR_EN[2] - (RW) Update inter BSS Status when Rx HE PPDU with BSS_COLOR matches BSSID's BSS Color
                                     0 : Disable  1: Enable
    INTER_BSS_UPD_BY_PAID_EN[3]  - (RW) Update Inter BSS Status when Rx VHT PPDU with GID = 0 & Partial_AID[8:0] matches BSSID[47:39]
                                     0 : Disable  1: Enable
    INTER_BSS_UPD_BY_PBSS_COLOR_EN[4] - (RW) Update Inter BSS Status when Rx VHT PPDU with GID = 63 & Partial_AID[8:5] matches Partial BSS Color[3:0]
                                     0 : Disable  1: Enable
    INTER_BSS_UPD_BY_MU_EN[5]    - (RW) Update inter BSS Status when Rx PPDU with MU matches
                                     0 : Disable  1: Enable
    INTER_BSS_UPD_BY_HDR_BSSID_EN[6] - (RW) Update Inter BSS Status when Rx header BSSID matches configured BSSID CRs.
                                     0 : Disable  1: Enable
    INTER_NAV_CFEND_RST[7]       - (RW) Inter NAV reset by CFEND/CFEND-ACK/CF-POLL
                                     1'b0: disable
                                     1'b1: enable
    DAWN_IGNORE_NAV_TIME_UNIT[15..8] - (RW) 8bit in unit of 100us.
                                     Set the time in unit of 100us to HW. HW will ignore all packets with the NAV when dwan_ignore_nav_en = 1.
    INTRA_NAV_TIMER_EN[16]       - (RW) Enable Intra NAV Timer 0 : Disable 1 : Enable.
    INTRA_BSS_UPD_BY_BSS_COLOR_EN[17] - (RW) Update Intra BSS Status when Rx HE PPDU with BSS_COLOR matches BSSID's BSS Color
                                     0 : Disable  1: Enable
    INTRA_BSS_UPD_BY_PAID_EN[18] - (RW) Update Intra BSS Status when Rx VHT PPDU with GID = 0 & Partial_AID[8:0] matches BSSID[47:39]
                                     0 : Disable  1: Enable
    INTRA_BSS_UPD_BY_PBSS_COLOR_EN[19] - (RW) Update Intra BSS Status when Rx VHT PPDU with GID = 63 & Partial_AID[8:5] matches Partial BSS Color[3:0]
                                     0 : Disable  1: Enable
    INTRA_BSS_UPD_BY_HDR_BSSID_EN[20] - (RW) Update Intra BSS Status when Rx header BSSID matches configured BSSID CRs.
                                     0 : Disable  1: Enable
    INTRA_BSS_UPD_BY_CTL_HOLDER_EN[21] - (RW) Update Intra BSS Status when Rx control frame A1 matches TXOP holder
                                     0 : Disable  1: Enable
    INTRA_BSS_UPD_BY_MBSS_EN[22] - (RW) Update Intra BSS Status when Rx header matches configured MBSSID.
                                     0 : Disable  1: Enable
    INTRA_BSS_CTL_HOLDER_MBSS_EN[23] - (RW) Update Intra BSS Status when Rx CTRL frame BSSID match MBSSID.
                                     0 : Disable  1: Enable
    INTRA_BSS_TXOPDUR_UPT[25..24] - (RW) Intra BSS HE RXV TXOP Durration Update Contrpl
                                     2'b00: All HE mode
                                     2'b01: Only HE_MU mode
                                     2'b10: Only HE_TB mode
                                     2'b11: HE_MU or HE_TB mode
    INTER_BSS_TXOPDUR_UPT[27..26] - (RW) Inter BSS HE RXV TXOP Durration Update Contrpl
                                     2'b00: All HE mode
                                     2'b01: Only HE_MU mode
                                     2'b10: Only HE_TB mode
                                     2'b11: HE_MU or HE_TB mode
    NAV_TXOPDUR_CHK_LSIG_EN[28]  - (RW) NAV Update by HE RXV TXOP_DUR and Check LSIG valid bit
                                     1'b1: Enable
                                     1'b0: Disable
    NAV_HOLDER_SEL_BASIC[29]     - (RW) Always use  basic NAV for TXOP holder determination
                                     0 : Disable  1: Enable
    NAV_TXOPDUR_UPD_EN[30]       - (RW) Update Intra/Basic NAV with HE-SIG TXOP_DURATION field.
                                     0 : Disable  1: Enable
    INTRA_NAV_TIMER_RST[31]      - (WC) Reset Intra BSS NAV timer
                                     Write 1 to reset the Intra NAV timer, this bit will be auto cleared after write.
                                     Valid when INTRA_NAV_TIMER_EN = 1.

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_NAV_TIMER_RST_ADDR     BN1_WF_RMAC_TOP_NAVOPT_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_NAV_TIMER_RST_MASK     0x80000000                // INTRA_NAV_TIMER_RST[31]
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_NAV_TIMER_RST_SHFT     31
#define BN1_WF_RMAC_TOP_NAVOPT_PA_NAV_TXOPDUR_UPD_EN_ADDR      BN1_WF_RMAC_TOP_NAVOPT_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_PA_NAV_TXOPDUR_UPD_EN_MASK      0x40000000                // NAV_TXOPDUR_UPD_EN[30]
#define BN1_WF_RMAC_TOP_NAVOPT_PA_NAV_TXOPDUR_UPD_EN_SHFT      30
#define BN1_WF_RMAC_TOP_NAVOPT_PA_NAV_HOLDER_SEL_BASIC_ADDR    BN1_WF_RMAC_TOP_NAVOPT_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_PA_NAV_HOLDER_SEL_BASIC_MASK    0x20000000                // NAV_HOLDER_SEL_BASIC[29]
#define BN1_WF_RMAC_TOP_NAVOPT_PA_NAV_HOLDER_SEL_BASIC_SHFT    29
#define BN1_WF_RMAC_TOP_NAVOPT_PA_NAV_TXOPDUR_CHK_LSIG_EN_ADDR BN1_WF_RMAC_TOP_NAVOPT_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_PA_NAV_TXOPDUR_CHK_LSIG_EN_MASK 0x10000000                // NAV_TXOPDUR_CHK_LSIG_EN[28]
#define BN1_WF_RMAC_TOP_NAVOPT_PA_NAV_TXOPDUR_CHK_LSIG_EN_SHFT 28
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTER_BSS_TXOPDUR_UPT_ADDR   BN1_WF_RMAC_TOP_NAVOPT_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTER_BSS_TXOPDUR_UPT_MASK   0x0C000000                // INTER_BSS_TXOPDUR_UPT[27..26]
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTER_BSS_TXOPDUR_UPT_SHFT   26
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_BSS_TXOPDUR_UPT_ADDR   BN1_WF_RMAC_TOP_NAVOPT_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_BSS_TXOPDUR_UPT_MASK   0x03000000                // INTRA_BSS_TXOPDUR_UPT[25..24]
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_BSS_TXOPDUR_UPT_SHFT   24
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_BSS_CTL_HOLDER_MBSS_EN_ADDR BN1_WF_RMAC_TOP_NAVOPT_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_BSS_CTL_HOLDER_MBSS_EN_MASK 0x00800000                // INTRA_BSS_CTL_HOLDER_MBSS_EN[23]
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_BSS_CTL_HOLDER_MBSS_EN_SHFT 23
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_BSS_UPD_BY_MBSS_EN_ADDR BN1_WF_RMAC_TOP_NAVOPT_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_BSS_UPD_BY_MBSS_EN_MASK 0x00400000                // INTRA_BSS_UPD_BY_MBSS_EN[22]
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_BSS_UPD_BY_MBSS_EN_SHFT 22
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_BSS_UPD_BY_CTL_HOLDER_EN_ADDR BN1_WF_RMAC_TOP_NAVOPT_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_BSS_UPD_BY_CTL_HOLDER_EN_MASK 0x00200000                // INTRA_BSS_UPD_BY_CTL_HOLDER_EN[21]
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_BSS_UPD_BY_CTL_HOLDER_EN_SHFT 21
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_BSS_UPD_BY_HDR_BSSID_EN_ADDR BN1_WF_RMAC_TOP_NAVOPT_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_BSS_UPD_BY_HDR_BSSID_EN_MASK 0x00100000                // INTRA_BSS_UPD_BY_HDR_BSSID_EN[20]
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_BSS_UPD_BY_HDR_BSSID_EN_SHFT 20
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_BSS_UPD_BY_PBSS_COLOR_EN_ADDR BN1_WF_RMAC_TOP_NAVOPT_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_BSS_UPD_BY_PBSS_COLOR_EN_MASK 0x00080000                // INTRA_BSS_UPD_BY_PBSS_COLOR_EN[19]
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_BSS_UPD_BY_PBSS_COLOR_EN_SHFT 19
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_BSS_UPD_BY_PAID_EN_ADDR BN1_WF_RMAC_TOP_NAVOPT_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_BSS_UPD_BY_PAID_EN_MASK 0x00040000                // INTRA_BSS_UPD_BY_PAID_EN[18]
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_BSS_UPD_BY_PAID_EN_SHFT 18
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_BSS_UPD_BY_BSS_COLOR_EN_ADDR BN1_WF_RMAC_TOP_NAVOPT_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_BSS_UPD_BY_BSS_COLOR_EN_MASK 0x00020000                // INTRA_BSS_UPD_BY_BSS_COLOR_EN[17]
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_BSS_UPD_BY_BSS_COLOR_EN_SHFT 17
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_NAV_TIMER_EN_ADDR      BN1_WF_RMAC_TOP_NAVOPT_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_NAV_TIMER_EN_MASK      0x00010000                // INTRA_NAV_TIMER_EN[16]
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTRA_NAV_TIMER_EN_SHFT      16
#define BN1_WF_RMAC_TOP_NAVOPT_PA_DAWN_IGNORE_NAV_TIME_UNIT_ADDR BN1_WF_RMAC_TOP_NAVOPT_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_PA_DAWN_IGNORE_NAV_TIME_UNIT_MASK 0x0000FF00                // DAWN_IGNORE_NAV_TIME_UNIT[15..8]
#define BN1_WF_RMAC_TOP_NAVOPT_PA_DAWN_IGNORE_NAV_TIME_UNIT_SHFT 8
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTER_NAV_CFEND_RST_ADDR     BN1_WF_RMAC_TOP_NAVOPT_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTER_NAV_CFEND_RST_MASK     0x00000080                // INTER_NAV_CFEND_RST[7]
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTER_NAV_CFEND_RST_SHFT     7
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTER_BSS_UPD_BY_HDR_BSSID_EN_ADDR BN1_WF_RMAC_TOP_NAVOPT_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTER_BSS_UPD_BY_HDR_BSSID_EN_MASK 0x00000040                // INTER_BSS_UPD_BY_HDR_BSSID_EN[6]
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTER_BSS_UPD_BY_HDR_BSSID_EN_SHFT 6
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTER_BSS_UPD_BY_MU_EN_ADDR  BN1_WF_RMAC_TOP_NAVOPT_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTER_BSS_UPD_BY_MU_EN_MASK  0x00000020                // INTER_BSS_UPD_BY_MU_EN[5]
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTER_BSS_UPD_BY_MU_EN_SHFT  5
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTER_BSS_UPD_BY_PBSS_COLOR_EN_ADDR BN1_WF_RMAC_TOP_NAVOPT_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTER_BSS_UPD_BY_PBSS_COLOR_EN_MASK 0x00000010                // INTER_BSS_UPD_BY_PBSS_COLOR_EN[4]
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTER_BSS_UPD_BY_PBSS_COLOR_EN_SHFT 4
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTER_BSS_UPD_BY_PAID_EN_ADDR BN1_WF_RMAC_TOP_NAVOPT_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTER_BSS_UPD_BY_PAID_EN_MASK 0x00000008                // INTER_BSS_UPD_BY_PAID_EN[3]
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTER_BSS_UPD_BY_PAID_EN_SHFT 3
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTER_BSS_UPD_BY_BSS_COLOR_EN_ADDR BN1_WF_RMAC_TOP_NAVOPT_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTER_BSS_UPD_BY_BSS_COLOR_EN_MASK 0x00000004                // INTER_BSS_UPD_BY_BSS_COLOR_EN[2]
#define BN1_WF_RMAC_TOP_NAVOPT_PA_INTER_BSS_UPD_BY_BSS_COLOR_EN_SHFT 2
#define BN1_WF_RMAC_TOP_NAVOPT_PA_DAWN_IGNORE_NAV_EN_ADDR      BN1_WF_RMAC_TOP_NAVOPT_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_PA_DAWN_IGNORE_NAV_EN_MASK      0x00000002                // DAWN_IGNORE_NAV_EN[1]
#define BN1_WF_RMAC_TOP_NAVOPT_PA_DAWN_IGNORE_NAV_EN_SHFT      1
#define BN1_WF_RMAC_TOP_NAVOPT_PA_DAWN_VIOLATE_NAV_EN_ADDR     BN1_WF_RMAC_TOP_NAVOPT_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_PA_DAWN_VIOLATE_NAV_EN_MASK     0x00000001                // DAWN_VIOLATE_NAV_EN[0]
#define BN1_WF_RMAC_TOP_NAVOPT_PA_DAWN_VIOLATE_NAV_EN_SHFT     0

/* =====================================================================================

  ---NAVOPT_2_PA (0x820f5000 + 0x54)---

    INTER_BSSID_EXIST_EN[0]      - (RW) Inter bss BSSID field Exist check
    INTER_BSSID_WILDBSS_EN[1]    - (RW) Inter bss BSSID Wildcard BSSID check
    INTER_NO_BSSID_EN[2]         - (RW) Inter bss No BSSID field check
    INTER_A2_EXIST_EN[3]         - (RW) Inter bss A2 field Exist check
    INTER_HE_MU_BYPASS[4]        - (RW) Inter BSS bypass Not HE_MU condition
                                     1'b0: disable
                                     1'b1: enable
    RESERVED5[15..5]             - (RO) Reserved bits
    INTRA_HE_MU_BYPASS[16]       - (RW) Intra BSS bypass Not HE_MU condition
                                     1'b0: disable
                                     1'b1: enable
    RESERVED17[30..17]           - (RO) Reserved bits
    BSSID_ADDR_SEL[31]           - (RW) BSSID address decode by bssid_sel or not
                                     1'b0: OLD method, no use bssid_sel
                                     1'b1: New method, BSSID select by select control

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_NAVOPT_2_PA_BSSID_ADDR_SEL_ADDR        BN1_WF_RMAC_TOP_NAVOPT_2_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_2_PA_BSSID_ADDR_SEL_MASK        0x80000000                // BSSID_ADDR_SEL[31]
#define BN1_WF_RMAC_TOP_NAVOPT_2_PA_BSSID_ADDR_SEL_SHFT        31
#define BN1_WF_RMAC_TOP_NAVOPT_2_PA_INTRA_HE_MU_BYPASS_ADDR    BN1_WF_RMAC_TOP_NAVOPT_2_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_2_PA_INTRA_HE_MU_BYPASS_MASK    0x00010000                // INTRA_HE_MU_BYPASS[16]
#define BN1_WF_RMAC_TOP_NAVOPT_2_PA_INTRA_HE_MU_BYPASS_SHFT    16
#define BN1_WF_RMAC_TOP_NAVOPT_2_PA_INTER_HE_MU_BYPASS_ADDR    BN1_WF_RMAC_TOP_NAVOPT_2_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_2_PA_INTER_HE_MU_BYPASS_MASK    0x00000010                // INTER_HE_MU_BYPASS[4]
#define BN1_WF_RMAC_TOP_NAVOPT_2_PA_INTER_HE_MU_BYPASS_SHFT    4
#define BN1_WF_RMAC_TOP_NAVOPT_2_PA_INTER_A2_EXIST_EN_ADDR     BN1_WF_RMAC_TOP_NAVOPT_2_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_2_PA_INTER_A2_EXIST_EN_MASK     0x00000008                // INTER_A2_EXIST_EN[3]
#define BN1_WF_RMAC_TOP_NAVOPT_2_PA_INTER_A2_EXIST_EN_SHFT     3
#define BN1_WF_RMAC_TOP_NAVOPT_2_PA_INTER_NO_BSSID_EN_ADDR     BN1_WF_RMAC_TOP_NAVOPT_2_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_2_PA_INTER_NO_BSSID_EN_MASK     0x00000004                // INTER_NO_BSSID_EN[2]
#define BN1_WF_RMAC_TOP_NAVOPT_2_PA_INTER_NO_BSSID_EN_SHFT     2
#define BN1_WF_RMAC_TOP_NAVOPT_2_PA_INTER_BSSID_WILDBSS_EN_ADDR BN1_WF_RMAC_TOP_NAVOPT_2_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_2_PA_INTER_BSSID_WILDBSS_EN_MASK 0x00000002                // INTER_BSSID_WILDBSS_EN[1]
#define BN1_WF_RMAC_TOP_NAVOPT_2_PA_INTER_BSSID_WILDBSS_EN_SHFT 1
#define BN1_WF_RMAC_TOP_NAVOPT_2_PA_INTER_BSSID_EXIST_EN_ADDR  BN1_WF_RMAC_TOP_NAVOPT_2_PA_ADDR
#define BN1_WF_RMAC_TOP_NAVOPT_2_PA_INTER_BSSID_EXIST_EN_MASK  0x00000001                // INTER_BSSID_EXIST_EN[0]
#define BN1_WF_RMAC_TOP_NAVOPT_2_PA_INTER_BSSID_EXIST_EN_SHFT  0

/* =====================================================================================

  ---INTRAPS_CTRL (0x820f5000 + 0x5C)---

    INTRA_PS_EN[0]               - (RW) Intra PPDU power saving enable
                                     0 : Disable intra PPDU power saving
                                     1 :Enable intra PPDU power saving
    INTRA_PS_CHKDIS_EN[9..1]     - (RW) Intra PPDU power saving disable OBSS check condition
                                     0 : Chek OBSS
                                     1 : Disable check OBSS
                                     bit0: DL, HE_MU  BSS color
                                     bit1: UL, HE_SU/HE_ER BSS color
                                     bit2: DL, HE_SU/HE_ER and unsupported rate 
                                     bit3: HE_TB and BSS color 
                                     bit4: VHT GID=0 and Partial AID
                                     bit5: AMPDU and Not UC2ME and BSSID match
                                     bit6: DL HE_MU or VHT MU and UC2ME and RX Zero Tail delimiter
                                     bit7: At MAC header end check snngle MPDU and Not UC2ME
                                     bit8: Data frame type only
    RESERVED10[15..10]           - (RO) Reserved bits
    INTRA_PS_DUR_ADJ[23..16]     - (RW) Intra PPDU Power Saving duration adjust 
                                     Unit(16usec)
                                     bit7 = 1 for sub; =0 for add
                                     bit6-0 = value
                                     ex: 
                                     1001_0000 ==> sub 16*16 usec
                                     0001_0000 ==> add 16*16 usec
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_INTRAPS_CTRL_INTRA_PS_DUR_ADJ_ADDR     BN1_WF_RMAC_TOP_INTRAPS_CTRL_ADDR
#define BN1_WF_RMAC_TOP_INTRAPS_CTRL_INTRA_PS_DUR_ADJ_MASK     0x00FF0000                // INTRA_PS_DUR_ADJ[23..16]
#define BN1_WF_RMAC_TOP_INTRAPS_CTRL_INTRA_PS_DUR_ADJ_SHFT     16
#define BN1_WF_RMAC_TOP_INTRAPS_CTRL_INTRA_PS_CHKDIS_EN_ADDR   BN1_WF_RMAC_TOP_INTRAPS_CTRL_ADDR
#define BN1_WF_RMAC_TOP_INTRAPS_CTRL_INTRA_PS_CHKDIS_EN_MASK   0x000003FE                // INTRA_PS_CHKDIS_EN[9..1]
#define BN1_WF_RMAC_TOP_INTRAPS_CTRL_INTRA_PS_CHKDIS_EN_SHFT   1
#define BN1_WF_RMAC_TOP_INTRAPS_CTRL_INTRA_PS_EN_ADDR          BN1_WF_RMAC_TOP_INTRAPS_CTRL_ADDR
#define BN1_WF_RMAC_TOP_INTRAPS_CTRL_INTRA_PS_EN_MASK          0x00000001                // INTRA_PS_EN[0]
#define BN1_WF_RMAC_TOP_INTRAPS_CTRL_INTRA_PS_EN_SHFT          0

/* =====================================================================================

  ---TMR_PA (0x820f5000 + 0x60)---

    TMR_TYPE_SUBTYPE0[5..0]      - (RW) TMR packet 6 bit type_subtype Set 0
    TMR_TYPE_SUBTYPE1[11..6]     - (RW) TMR packet 6 bit type_subtype Set 1
    TMR_TYPE_SUBTYPE2[17..12]    - (RW) TMR packet 6 bit type_subtype Set 2
    TMR_TYPE_SUBTYPE3[23..18]    - (RW) TMR packet 6 bit type_subtype Set 3
    TMR_CATEGORY0_EN[24]         - (RW) TMR frames parsing to CATEGORY field control
                                     1 to enable TMR1_PA bit15-0 category_action_filed check; is 0 to only check TMR_PA bit5:0
    TMR_CATEGORY1_EN[25]         - (RW) TMR frames parsing to CATEGORY field control
                                     1 to enable TMR1_PA bit31-16 category_action_filed check; is 0 to only check TMR_PA bit11:6
    TMR_CATEGORY2_EN[26]         - (RW) TMR frames parsing to CATEGORY field control
                                     1 to enable TMR0_PA bit15-0 category_action_filed check; is 0 to only check TMR_PA bit17:12
    TMR_CATEGORY3_EN[27]         - (RW) TMR frames parsing to CATEGORY3 field control
                                     1 to enable TMR0_PA bit31-16 category_action_filed check; is 0 to only check TMR_PA bit23:18
    TMR_UNLOCK_CTL[28]           - (RW) TMR unlock
                                     Read is lock status
                                     Write 1 to unlock TMR lock flag
    TMR_LOCK_EN[29]              - (RW) TMR lock function enable
                                     0: disable
                                     1: enable
    TMR_ROLE[30]                 - (RW) TMR role control
                                     0: TX_TMR
                                     1: RX_TMR
    TMR_EN[31]                   - (RW) TMR function enable control
                                     0: disable TMR function
                                     1: enable TMR function

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_EN_ADDR                     BN1_WF_RMAC_TOP_TMR_PA_ADDR
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_EN_MASK                     0x80000000                // TMR_EN[31]
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_EN_SHFT                     31
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_ROLE_ADDR                   BN1_WF_RMAC_TOP_TMR_PA_ADDR
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_ROLE_MASK                   0x40000000                // TMR_ROLE[30]
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_ROLE_SHFT                   30
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_LOCK_EN_ADDR                BN1_WF_RMAC_TOP_TMR_PA_ADDR
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_LOCK_EN_MASK                0x20000000                // TMR_LOCK_EN[29]
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_LOCK_EN_SHFT                29
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_UNLOCK_CTL_ADDR             BN1_WF_RMAC_TOP_TMR_PA_ADDR
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_UNLOCK_CTL_MASK             0x10000000                // TMR_UNLOCK_CTL[28]
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_UNLOCK_CTL_SHFT             28
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_CATEGORY3_EN_ADDR           BN1_WF_RMAC_TOP_TMR_PA_ADDR
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_CATEGORY3_EN_MASK           0x08000000                // TMR_CATEGORY3_EN[27]
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_CATEGORY3_EN_SHFT           27
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_CATEGORY2_EN_ADDR           BN1_WF_RMAC_TOP_TMR_PA_ADDR
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_CATEGORY2_EN_MASK           0x04000000                // TMR_CATEGORY2_EN[26]
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_CATEGORY2_EN_SHFT           26
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_CATEGORY1_EN_ADDR           BN1_WF_RMAC_TOP_TMR_PA_ADDR
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_CATEGORY1_EN_MASK           0x02000000                // TMR_CATEGORY1_EN[25]
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_CATEGORY1_EN_SHFT           25
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_CATEGORY0_EN_ADDR           BN1_WF_RMAC_TOP_TMR_PA_ADDR
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_CATEGORY0_EN_MASK           0x01000000                // TMR_CATEGORY0_EN[24]
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_CATEGORY0_EN_SHFT           24
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_TYPE_SUBTYPE3_ADDR          BN1_WF_RMAC_TOP_TMR_PA_ADDR
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_TYPE_SUBTYPE3_MASK          0x00FC0000                // TMR_TYPE_SUBTYPE3[23..18]
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_TYPE_SUBTYPE3_SHFT          18
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_TYPE_SUBTYPE2_ADDR          BN1_WF_RMAC_TOP_TMR_PA_ADDR
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_TYPE_SUBTYPE2_MASK          0x0003F000                // TMR_TYPE_SUBTYPE2[17..12]
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_TYPE_SUBTYPE2_SHFT          12
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_TYPE_SUBTYPE1_ADDR          BN1_WF_RMAC_TOP_TMR_PA_ADDR
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_TYPE_SUBTYPE1_MASK          0x00000FC0                // TMR_TYPE_SUBTYPE1[11..6]
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_TYPE_SUBTYPE1_SHFT          6
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_TYPE_SUBTYPE0_ADDR          BN1_WF_RMAC_TOP_TMR_PA_ADDR
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_TYPE_SUBTYPE0_MASK          0x0000003F                // TMR_TYPE_SUBTYPE0[5..0]
#define BN1_WF_RMAC_TOP_TMR_PA_TMR_TYPE_SUBTYPE0_SHFT          0

/* =====================================================================================

  ---TMR0 (0x820f5000 + 0x64)---

    TMR_CATEGORY2[15..0]         - (RW) TMR frame check category
                                     Used for TMR[26]=1 to check category_action_field of action field
    TMR_CATEGORY3[31..16]        - (RW) TMR frame check category
                                     Used for TMR[27]=1 to check category_action_field of action field

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_TMR0_TMR_CATEGORY3_ADDR                BN1_WF_RMAC_TOP_TMR0_ADDR
#define BN1_WF_RMAC_TOP_TMR0_TMR_CATEGORY3_MASK                0xFFFF0000                // TMR_CATEGORY3[31..16]
#define BN1_WF_RMAC_TOP_TMR0_TMR_CATEGORY3_SHFT                16
#define BN1_WF_RMAC_TOP_TMR0_TMR_CATEGORY2_ADDR                BN1_WF_RMAC_TOP_TMR0_ADDR
#define BN1_WF_RMAC_TOP_TMR0_TMR_CATEGORY2_MASK                0x0000FFFF                // TMR_CATEGORY2[15..0]
#define BN1_WF_RMAC_TOP_TMR0_TMR_CATEGORY2_SHFT                0

/* =====================================================================================

  ---TMR1 (0x820f5000 + 0x68)---

    TMR_CATEGORY0[15..0]         - (RW) TMR frame check category
                                     Used for TMR[24]=1 to check category_action_field of action field
    TMR_CATEGORY1[31..16]        - (RW) TMR frame check category
                                     Used for TMR[25]=1 to check category_action_field of action field

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_TMR1_TMR_CATEGORY1_ADDR                BN1_WF_RMAC_TOP_TMR1_ADDR
#define BN1_WF_RMAC_TOP_TMR1_TMR_CATEGORY1_MASK                0xFFFF0000                // TMR_CATEGORY1[31..16]
#define BN1_WF_RMAC_TOP_TMR1_TMR_CATEGORY1_SHFT                16
#define BN1_WF_RMAC_TOP_TMR1_TMR_CATEGORY0_ADDR                BN1_WF_RMAC_TOP_TMR1_ADDR
#define BN1_WF_RMAC_TOP_TMR1_TMR_CATEGORY0_MASK                0x0000FFFF                // TMR_CATEGORY0[15..0]
#define BN1_WF_RMAC_TOP_TMR1_TMR_CATEGORY0_SHFT                0

/* =====================================================================================

  ---TMR2 (0x820f5000 + 0x6c)---

    TMR_RXV_SEL[4..0]            - (RW) select one of CVEC1/CVEC2 for TMR report
                                     0x00-0x08: CVEC1 cycle1-9
                                     0x10-0x1C: CVEC2 cycle 1-13
    TMR_ISR_CTRL[5]              - (RW) SKIP checking TMR lock flag when ISR assertsion
                                     0: NDP ISR only asserts when tmr_lock_flag = 0
                                     1: NDP ISR asserts regardless tmr_lock_flag
    RESERVED6[14..6]             - (RO) Reserved bits
    TMR_NDP_ISR_STS[15]          - (RO) Indicating NDP packet received and tmr lock flag = 0
    TMR_TOA_END_STS[23..16]      - (RO) TOA end / abort reason status
    TMR_TOD_END_STS[31..24]      - (RO) TOD end / abort reason status

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_TMR2_TMR_TOD_END_STS_ADDR              BN1_WF_RMAC_TOP_TMR2_ADDR
#define BN1_WF_RMAC_TOP_TMR2_TMR_TOD_END_STS_MASK              0xFF000000                // TMR_TOD_END_STS[31..24]
#define BN1_WF_RMAC_TOP_TMR2_TMR_TOD_END_STS_SHFT              24
#define BN1_WF_RMAC_TOP_TMR2_TMR_TOA_END_STS_ADDR              BN1_WF_RMAC_TOP_TMR2_ADDR
#define BN1_WF_RMAC_TOP_TMR2_TMR_TOA_END_STS_MASK              0x00FF0000                // TMR_TOA_END_STS[23..16]
#define BN1_WF_RMAC_TOP_TMR2_TMR_TOA_END_STS_SHFT              16
#define BN1_WF_RMAC_TOP_TMR2_TMR_NDP_ISR_STS_ADDR              BN1_WF_RMAC_TOP_TMR2_ADDR
#define BN1_WF_RMAC_TOP_TMR2_TMR_NDP_ISR_STS_MASK              0x00008000                // TMR_NDP_ISR_STS[15]
#define BN1_WF_RMAC_TOP_TMR2_TMR_NDP_ISR_STS_SHFT              15
#define BN1_WF_RMAC_TOP_TMR2_TMR_ISR_CTRL_ADDR                 BN1_WF_RMAC_TOP_TMR2_ADDR
#define BN1_WF_RMAC_TOP_TMR2_TMR_ISR_CTRL_MASK                 0x00000020                // TMR_ISR_CTRL[5]
#define BN1_WF_RMAC_TOP_TMR2_TMR_ISR_CTRL_SHFT                 5
#define BN1_WF_RMAC_TOP_TMR2_TMR_RXV_SEL_ADDR                  BN1_WF_RMAC_TOP_TMR2_ADDR
#define BN1_WF_RMAC_TOP_TMR2_TMR_RXV_SEL_MASK                  0x0000001F                // TMR_RXV_SEL[4..0]
#define BN1_WF_RMAC_TOP_TMR2_TMR_RXV_SEL_SHFT                  0

/* =====================================================================================

  ---TXOPPS_PA (0x820f5000 + 0x70)---

    RMAC_CR_PARTIAL_AID[8..0]    - (RW) Partial AID for TXOP PS matching used
    RMAC_CR_TXOP_PS_RX_TIMEOUT[9] - (RW) TXOP Power Saving awake control
                                     0: awake condition do not consider dot11VHTPSProbeDelay (1000us)
                                     1: awake condition do consider the dot11VHTPSProbeDelay (1000us)
    RMAC_CR_TXOP_PS_LSIG_EN[10]  - (RW) TXOP Power Saving L-sig check
                                     0: disable TXOPPS L-sig check 
                                     1: enable TXOPPS L-sig check
    RMAC_CR_TXOP_PS_RX_EN[11]    - (RW) TXOP Power Saving enable
                                     0: disable TXOPPS 
                                     1: enable TXOPPS
    RMAC_BCN_CHK_EL_EN[31..12]   - (RW) Exclude IE comparison of following IE list. MAC won't compare the Information Element with corresponding bit set to 1.
                                     [12] : Exclude IE ID "7" comparison
                                     [13] : Exclude IE ID "12" comparison
                                     [14] : Exclude IE ID "32" comparison
                                     [15] : Exclude IE ID "37" comparison
                                     [16] : Exclude IE ID "40" comparison
                                     [17] : Exclude IE ID "42" comparison
                                     [18] : Exclude IE ID "46" comparison
                                     [19] : Exclude IE ID "61" comparison
                                     [20] : Exclude IE ID "74" comparison
                                     [21] : Exclude IE ID "127 comparison
                                     [22] : Exclude IE ID "191" comparison
                                     [23] : Exclude IE ID "192" comparison
                                     [24] : Exclude IE ID "195" comparison
                                     [25] : Exclude IE ID "196" comparison
                                     [26] : Exclude IE ID "198" comparison
                                     [27] : Exclude IE ID "221" comparison
                                     [28] : Exclude IE ID "71" comparison
                                     [29] : Exclude IE ID "83" comparison
                                     [30] : Exclude IE ID "85" comparison
                                     [31] : Exclude IE ID "216" comparison

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_TXOPPS_PA_RMAC_BCN_CHK_EL_EN_ADDR      BN1_WF_RMAC_TOP_TXOPPS_PA_ADDR
#define BN1_WF_RMAC_TOP_TXOPPS_PA_RMAC_BCN_CHK_EL_EN_MASK      0xFFFFF000                // RMAC_BCN_CHK_EL_EN[31..12]
#define BN1_WF_RMAC_TOP_TXOPPS_PA_RMAC_BCN_CHK_EL_EN_SHFT      12
#define BN1_WF_RMAC_TOP_TXOPPS_PA_RMAC_CR_TXOP_PS_RX_EN_ADDR   BN1_WF_RMAC_TOP_TXOPPS_PA_ADDR
#define BN1_WF_RMAC_TOP_TXOPPS_PA_RMAC_CR_TXOP_PS_RX_EN_MASK   0x00000800                // RMAC_CR_TXOP_PS_RX_EN[11]
#define BN1_WF_RMAC_TOP_TXOPPS_PA_RMAC_CR_TXOP_PS_RX_EN_SHFT   11
#define BN1_WF_RMAC_TOP_TXOPPS_PA_RMAC_CR_TXOP_PS_LSIG_EN_ADDR BN1_WF_RMAC_TOP_TXOPPS_PA_ADDR
#define BN1_WF_RMAC_TOP_TXOPPS_PA_RMAC_CR_TXOP_PS_LSIG_EN_MASK 0x00000400                // RMAC_CR_TXOP_PS_LSIG_EN[10]
#define BN1_WF_RMAC_TOP_TXOPPS_PA_RMAC_CR_TXOP_PS_LSIG_EN_SHFT 10
#define BN1_WF_RMAC_TOP_TXOPPS_PA_RMAC_CR_TXOP_PS_RX_TIMEOUT_ADDR BN1_WF_RMAC_TOP_TXOPPS_PA_ADDR
#define BN1_WF_RMAC_TOP_TXOPPS_PA_RMAC_CR_TXOP_PS_RX_TIMEOUT_MASK 0x00000200                // RMAC_CR_TXOP_PS_RX_TIMEOUT[9]
#define BN1_WF_RMAC_TOP_TXOPPS_PA_RMAC_CR_TXOP_PS_RX_TIMEOUT_SHFT 9
#define BN1_WF_RMAC_TOP_TXOPPS_PA_RMAC_CR_PARTIAL_AID_ADDR     BN1_WF_RMAC_TOP_TXOPPS_PA_ADDR
#define BN1_WF_RMAC_TOP_TXOPPS_PA_RMAC_CR_PARTIAL_AID_MASK     0x000001FF                // RMAC_CR_PARTIAL_AID[8..0]
#define BN1_WF_RMAC_TOP_TXOPPS_PA_RMAC_CR_PARTIAL_AID_SHFT     0

/* =====================================================================================

  ---OPPOPS (0x820f5000 + 0x74)---

    OPPOPS_RCPI_TH[7..0]         - (RW) OPPO Power Saving setting
                                     Set RCPI threshold
    RESERVED8[12..8]             - (RO) Reserved bits
    OPPOPS_VHT_NSTS[15..13]      - (RW) OPPO Power Saving setting
                                     0: Sleep when RX VHT packets with this Nsts
                                     1: Active when RX VHT packets with this Nsts
                                     B2: Nsts <= 2
                                     B1: Nsts <= 1
                                     B0: Nsts  = 0
    OPPOPS_VHT_PAID_EN[16]       - (RW) OPPO Power Saving setting
                                     0: Disable SU partial AID check
                                     1: Enable SU partial AID check. 
                                     If SU_PAID matched -> active
                                     If SU_PAID mismatched -> sleep
    OPPOPS_VHT_GID_EN[17]        - (RW) OPPO Power Saving setting
                                     0: Disable GID check
                                     1: Enable Group ID check. 
                                     If GID matched -> active
                                     If GID mismatched -> sleep
    OPPOPS_HT_RATE[19..18]       - (RW) OPPO Power Saving setting
                                     0: Sleep when RX HT packets with this MCS
                                     1: Active when RX HT packets with this MCS
                                     B1: MCS 8~15 (2SS)
                                     B0: MCS 0~7 + MCS 32 (1SS)
    OPPOPS_HT_VHT_LDPC[20]       - (RW) OPPO Power Saving setting
                                     0: Sleep when RX HT/VHT LDPC packets
                                     1: Active when RX HT/VHT LDPC packets
    OPPOPS_HT_VHT_STBC[21]       - (RW) OPPO Power Saving setting
                                     0: Sleep when RX HT/VHT STBC packets
                                     1: Active when RX HT/VHT STBC packets
    OPPOPS_HT_VHT_BW[25..22]     - (RW) OPPO Power Saving setting
                                     0: Sleep when RX HT/VHT packets with this BW
                                     1: Active when RX HT/VHT packets with this BW
                                     B3: BW <= BW160/(80+80)
                                     B2: BW <= BW80
                                     B1: BW <= BW40
                                     B0: BW  = BW20
    OPPOPS_OFDM_RATE[27..26]     - (RW) OPPO Power Saving setting
                                     0: Sleep when RX OFDM packets with this Rate
                                     1: Active when RX OFDM packets with this Rate
                                     B1:   9/18/36/54 Mb/s (Optional)
                                     B0:   6/12/24/48 Mb/s (Mandatory rate + 48 Mb/s)
    OPPOPS_VHT_VLD[28]           - (RW) OPPO Power Saving setting
                                     0: Sleep when RX VHT packets
                                     1: Active when RX VHT packets
    OPPOPS_HT_VLD[29]            - (RW) OPPO Power Saving setting
                                     0: Sleep when RX HT packets
                                     1: Active when RX HT packets
    OPPOPS_CCK_VLD[30]           - (RW) OPPO Power Saving setting
                                     0: Sleep when RX CCK packets
                                     1: Active when RX CCK packets
    OPPOPS_EN[31]                - (RW) OPPO Power Saving enable
                                     0: Disable
                                     1: Enable Opportunistic Power Save

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_EN_ADDR                  BN1_WF_RMAC_TOP_OPPOPS_ADDR
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_EN_MASK                  0x80000000                // OPPOPS_EN[31]
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_EN_SHFT                  31
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_CCK_VLD_ADDR             BN1_WF_RMAC_TOP_OPPOPS_ADDR
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_CCK_VLD_MASK             0x40000000                // OPPOPS_CCK_VLD[30]
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_CCK_VLD_SHFT             30
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_HT_VLD_ADDR              BN1_WF_RMAC_TOP_OPPOPS_ADDR
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_HT_VLD_MASK              0x20000000                // OPPOPS_HT_VLD[29]
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_HT_VLD_SHFT              29
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_VHT_VLD_ADDR             BN1_WF_RMAC_TOP_OPPOPS_ADDR
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_VHT_VLD_MASK             0x10000000                // OPPOPS_VHT_VLD[28]
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_VHT_VLD_SHFT             28
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_OFDM_RATE_ADDR           BN1_WF_RMAC_TOP_OPPOPS_ADDR
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_OFDM_RATE_MASK           0x0C000000                // OPPOPS_OFDM_RATE[27..26]
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_OFDM_RATE_SHFT           26
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_HT_VHT_BW_ADDR           BN1_WF_RMAC_TOP_OPPOPS_ADDR
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_HT_VHT_BW_MASK           0x03C00000                // OPPOPS_HT_VHT_BW[25..22]
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_HT_VHT_BW_SHFT           22
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_HT_VHT_STBC_ADDR         BN1_WF_RMAC_TOP_OPPOPS_ADDR
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_HT_VHT_STBC_MASK         0x00200000                // OPPOPS_HT_VHT_STBC[21]
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_HT_VHT_STBC_SHFT         21
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_HT_VHT_LDPC_ADDR         BN1_WF_RMAC_TOP_OPPOPS_ADDR
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_HT_VHT_LDPC_MASK         0x00100000                // OPPOPS_HT_VHT_LDPC[20]
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_HT_VHT_LDPC_SHFT         20
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_HT_RATE_ADDR             BN1_WF_RMAC_TOP_OPPOPS_ADDR
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_HT_RATE_MASK             0x000C0000                // OPPOPS_HT_RATE[19..18]
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_HT_RATE_SHFT             18
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_VHT_GID_EN_ADDR          BN1_WF_RMAC_TOP_OPPOPS_ADDR
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_VHT_GID_EN_MASK          0x00020000                // OPPOPS_VHT_GID_EN[17]
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_VHT_GID_EN_SHFT          17
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_VHT_PAID_EN_ADDR         BN1_WF_RMAC_TOP_OPPOPS_ADDR
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_VHT_PAID_EN_MASK         0x00010000                // OPPOPS_VHT_PAID_EN[16]
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_VHT_PAID_EN_SHFT         16
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_VHT_NSTS_ADDR            BN1_WF_RMAC_TOP_OPPOPS_ADDR
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_VHT_NSTS_MASK            0x0000E000                // OPPOPS_VHT_NSTS[15..13]
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_VHT_NSTS_SHFT            13
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_RCPI_TH_ADDR             BN1_WF_RMAC_TOP_OPPOPS_ADDR
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_RCPI_TH_MASK             0x000000FF                // OPPOPS_RCPI_TH[7..0]
#define BN1_WF_RMAC_TOP_OPPOPS_OPPOPS_RCPI_TH_SHFT             0

/* =====================================================================================

  ---SMESH (0x820f5000 + 0x78)---

    SMESH_ADDR_EN[7..0]          - (RW) Smart MESH address entry enable control
                                     bit0 to disable entry-32 and entry-63 of MUAR table to SMESH function
                                     bit1 to enable entry-32 and entry-63 of MUAR table to SMESH function
                                     and etc
    RESERVED8[15..8]             - (RO) Reserved bits
    SMESH_RX_A2[16]              - (RW) Smart MESH RX check A2 control
                                     0: Bypass this check
                                     1: Check A2 equals 32~63 even entries of MUAR table. If equal, than receive it if SMESH_RX_CTRL/SMESH_RX_MGT/SMESH_RX_DATA match
    SMESH_RX_A1[17]              - (RW) Smart MESH RX check A1 control
                                     0: Bypass this check
                                     1: Check A1 equals 32~63 even entries of MUAR table. If equal, than receive it if SMESH_RX_CTRL/SMESH_RX_MGT/SMESH_RX_DATA match
    SMESH_RX_DATA[18]            - (RW) Smart MESH RX data frame control
                                     0: not receive data frame
                                     1: receive data frame when SMESH_RX_A1 or SMESH_RX_A2 match
    SMESH_RX_MGT[19]             - (RW) Smart MESH RX management frame control
                                     0: not receive management frame
                                     1: receive management frame when SMESH_RX_A1 or SMESH_RX_A2 match
    SMESH_RX_CTL[20]             - (RW) Smart MESH RX control
                                     0: not receive ctrl frame
                                     1: receive ctrl frame when SMESH_RX_A1 or SMESH_RX_A2 match
    RESERVED21[31..21]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_SMESH_SMESH_RX_CTL_ADDR                BN1_WF_RMAC_TOP_SMESH_ADDR
#define BN1_WF_RMAC_TOP_SMESH_SMESH_RX_CTL_MASK                0x00100000                // SMESH_RX_CTL[20]
#define BN1_WF_RMAC_TOP_SMESH_SMESH_RX_CTL_SHFT                20
#define BN1_WF_RMAC_TOP_SMESH_SMESH_RX_MGT_ADDR                BN1_WF_RMAC_TOP_SMESH_ADDR
#define BN1_WF_RMAC_TOP_SMESH_SMESH_RX_MGT_MASK                0x00080000                // SMESH_RX_MGT[19]
#define BN1_WF_RMAC_TOP_SMESH_SMESH_RX_MGT_SHFT                19
#define BN1_WF_RMAC_TOP_SMESH_SMESH_RX_DATA_ADDR               BN1_WF_RMAC_TOP_SMESH_ADDR
#define BN1_WF_RMAC_TOP_SMESH_SMESH_RX_DATA_MASK               0x00040000                // SMESH_RX_DATA[18]
#define BN1_WF_RMAC_TOP_SMESH_SMESH_RX_DATA_SHFT               18
#define BN1_WF_RMAC_TOP_SMESH_SMESH_RX_A1_ADDR                 BN1_WF_RMAC_TOP_SMESH_ADDR
#define BN1_WF_RMAC_TOP_SMESH_SMESH_RX_A1_MASK                 0x00020000                // SMESH_RX_A1[17]
#define BN1_WF_RMAC_TOP_SMESH_SMESH_RX_A1_SHFT                 17
#define BN1_WF_RMAC_TOP_SMESH_SMESH_RX_A2_ADDR                 BN1_WF_RMAC_TOP_SMESH_ADDR
#define BN1_WF_RMAC_TOP_SMESH_SMESH_RX_A2_MASK                 0x00010000                // SMESH_RX_A2[16]
#define BN1_WF_RMAC_TOP_SMESH_SMESH_RX_A2_SHFT                 16
#define BN1_WF_RMAC_TOP_SMESH_SMESH_ADDR_EN_ADDR               BN1_WF_RMAC_TOP_SMESH_ADDR
#define BN1_WF_RMAC_TOP_SMESH_SMESH_ADDR_EN_MASK               0x000000FF                // SMESH_ADDR_EN[7..0]
#define BN1_WF_RMAC_TOP_SMESH_SMESH_ADDR_EN_SHFT               0

/* =====================================================================================

  ---INTRAPS_CNT (0x820f5000 + 0x7C)---

    INTRAPS_TRI_CNT[15..0]       - (RC) Intra PPDU Power Saving Trigger counter
                                     Read clear
    INTRAPS_CNT_DWN[27..16]      - (RW) Intra PPDU Power Saving counter down value
    INTRAPS_ENTRY_POINT[30..28]  - (RW) Intra PPDU Power Saving entry point
    RESERVED31[31]               - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_INTRAPS_CNT_INTRAPS_ENTRY_POINT_ADDR   BN1_WF_RMAC_TOP_INTRAPS_CNT_ADDR
#define BN1_WF_RMAC_TOP_INTRAPS_CNT_INTRAPS_ENTRY_POINT_MASK   0x70000000                // INTRAPS_ENTRY_POINT[30..28]
#define BN1_WF_RMAC_TOP_INTRAPS_CNT_INTRAPS_ENTRY_POINT_SHFT   28
#define BN1_WF_RMAC_TOP_INTRAPS_CNT_INTRAPS_CNT_DWN_ADDR       BN1_WF_RMAC_TOP_INTRAPS_CNT_ADDR
#define BN1_WF_RMAC_TOP_INTRAPS_CNT_INTRAPS_CNT_DWN_MASK       0x0FFF0000                // INTRAPS_CNT_DWN[27..16]
#define BN1_WF_RMAC_TOP_INTRAPS_CNT_INTRAPS_CNT_DWN_SHFT       16
#define BN1_WF_RMAC_TOP_INTRAPS_CNT_INTRAPS_TRI_CNT_ADDR       BN1_WF_RMAC_TOP_INTRAPS_CNT_ADDR
#define BN1_WF_RMAC_TOP_INTRAPS_CNT_INTRAPS_TRI_CNT_MASK       0x0000FFFF                // INTRAPS_TRI_CNT[15..0]
#define BN1_WF_RMAC_TOP_INTRAPS_CNT_INTRAPS_TRI_CNT_SHFT       0

/* =====================================================================================

  ---PMSRC0 (0x820f5000 + 0x80)---

    LEN_COMPARE[11..0]           - (RW) LIG field matching control. For CSD debug used.
                                     PPDU Length compare for LARGER and EQUAL trigger condition
    RX_HE_TRIG_TYPE[15..12]      - (RW) LIG field matching control. For CSD debug used.
                                     RX_HE_TRIG_TYPE
    RX_MODE[19..16]              - (RW) LIG field matching control. For CSD debug used.
                                     RX_MODE match
    RX_RXRATE[26..20]            - (RW) LIG field matching control. For CSD debug used.
                                     RX_RXRATE match
    RX_FRMODE[28..27]            - (RW) LIG field matching control. For CSD debug used.
                                     RX_FRMODE match
    PMSRC0_RSVD[29]              - (RW) LIG field matching control. For CSD debug used.
                                     Reserved register
    STBC[31..30]                 - (RW) LIG field matching control. For CSD debug used.
                                     STBC match

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_PMSRC0_STBC_ADDR                       BN1_WF_RMAC_TOP_PMSRC0_ADDR
#define BN1_WF_RMAC_TOP_PMSRC0_STBC_MASK                       0xC0000000                // STBC[31..30]
#define BN1_WF_RMAC_TOP_PMSRC0_STBC_SHFT                       30
#define BN1_WF_RMAC_TOP_PMSRC0_PMSRC0_RSVD_ADDR                BN1_WF_RMAC_TOP_PMSRC0_ADDR
#define BN1_WF_RMAC_TOP_PMSRC0_PMSRC0_RSVD_MASK                0x20000000                // PMSRC0_RSVD[29]
#define BN1_WF_RMAC_TOP_PMSRC0_PMSRC0_RSVD_SHFT                29
#define BN1_WF_RMAC_TOP_PMSRC0_RX_FRMODE_ADDR                  BN1_WF_RMAC_TOP_PMSRC0_ADDR
#define BN1_WF_RMAC_TOP_PMSRC0_RX_FRMODE_MASK                  0x18000000                // RX_FRMODE[28..27]
#define BN1_WF_RMAC_TOP_PMSRC0_RX_FRMODE_SHFT                  27
#define BN1_WF_RMAC_TOP_PMSRC0_RX_RXRATE_ADDR                  BN1_WF_RMAC_TOP_PMSRC0_ADDR
#define BN1_WF_RMAC_TOP_PMSRC0_RX_RXRATE_MASK                  0x07F00000                // RX_RXRATE[26..20]
#define BN1_WF_RMAC_TOP_PMSRC0_RX_RXRATE_SHFT                  20
#define BN1_WF_RMAC_TOP_PMSRC0_RX_MODE_ADDR                    BN1_WF_RMAC_TOP_PMSRC0_ADDR
#define BN1_WF_RMAC_TOP_PMSRC0_RX_MODE_MASK                    0x000F0000                // RX_MODE[19..16]
#define BN1_WF_RMAC_TOP_PMSRC0_RX_MODE_SHFT                    16
#define BN1_WF_RMAC_TOP_PMSRC0_RX_HE_TRIG_TYPE_ADDR            BN1_WF_RMAC_TOP_PMSRC0_ADDR
#define BN1_WF_RMAC_TOP_PMSRC0_RX_HE_TRIG_TYPE_MASK            0x0000F000                // RX_HE_TRIG_TYPE[15..12]
#define BN1_WF_RMAC_TOP_PMSRC0_RX_HE_TRIG_TYPE_SHFT            12
#define BN1_WF_RMAC_TOP_PMSRC0_LEN_COMPARE_ADDR                BN1_WF_RMAC_TOP_PMSRC0_ADDR
#define BN1_WF_RMAC_TOP_PMSRC0_LEN_COMPARE_MASK                0x00000FFF                // LEN_COMPARE[11..0]
#define BN1_WF_RMAC_TOP_PMSRC0_LEN_COMPARE_SHFT                0

/* =====================================================================================

  ---PMCTL0 (0x820f5000 + 0x84)---

    PPDU_LEN_EQ_HIT[1..0]        - (RW) To control PPDU LEN hit event
                                     2'b00: Fixed at 0 (LEN_EQ always not Match)
                                     2'b01: Fixed at 1 (LEN_EQ always Match)
                                     2'b10: A
                                     2'b11: ~A
    PMCTL0_RSV[3..2]             - (RW) To control HE Trig Type hit event
                                     2'b00: Fixed at 0 (HE Trig Type always not Match)
                                     2'b01: Fixed at 1 (HE Trig Type always Match)
                                     2'b10: A
                                     2'b11: ~A
    Mode_HIT[5..4]               - (RW) To control MODE hit event
                                     2'b00: Fixed at 0 (MODE always not Match)
                                     2'b01: Fixed at 1 (MODE C always Match)
                                     2'b10: A
                                     2'b11: ~A
    AGG_HIT[7..6]                - (RW) To control AGG hit event
                                     2'b00: Fixed at 0 (AGG always not Match)
                                     2'b01: Fixed at 1 (AGG always Match)
                                     2'b10: A
                                     2'b11: ~A
    RXRATE_HIT[9..8]             - (RW) To control RXRATE hit event
                                     2'b00: Fixed at 0 (RXRATE always not Match)
                                     2'b01: Fixed at 1 (RXRATE always Match)
                                     2'b10: A
                                     2'b11: ~A
    FRMODE_HIT[11..10]           - (RW) To control FRMODE hit event
                                     2'b00: Fixed at 0 (FRMODE always not Match)
                                     2'b01: Fixed at 1 (FRMODE always Match)
                                     2'b10: A
                                     2'b11: ~A
    STBC_HIT[13..12]             - (RW) To control STBC hit event
                                     2'b00: Fixed at 0 (STBC always not Match)
                                     2'b01: Fixed at 1 (STBC always Match)
                                     2'b10: A
                                     2'b11: ~A
    FCSOK_HIT[15..14]            - (RW) To control FCSOK hit event
                                     2'b00: Fixed at 0 (FCSOK always not Match)
                                     2'b01: Fixed at 1 (FCSOK always Match)
                                     2'b10: FCS OK
                                     2'b11: FCS ERROR
    UC2MAC_HIT[17..16]           - (RW) To control UC2MAC || BCMC and BSSID hit || Trig to ME hit event
                                     2'b00: Fixed at 0 (UC2MAC always not Match)
                                     2'b01: Fixed at 1 (UC2MAC always Match)
                                     2'b10: A
                                     2'b11: ~A
    PPDU_LEN_LAR_HIT[19..18]     - (RW) To control PPDU LEN larger hit event
                                     2'b00: Fixed at 0 (LEN_LAR always not Match)
                                     2'b01: Fixed at 1 (LEN_LAR always Match)
                                     2'b10: A>CR
                                     2'b11: A<CR
    MPDU_LEN_EQ_HIT[21..20]      - (RW) To control MPDU LEN larger hit event
                                     2'b00: Fixed at 0 (LEN_LAR always not Match)
                                     2'b01: Fixed at 1 (LEN_LAR always Match)
                                     2'b10: A>CR
                                     2'b11: A<CR
    MPDU_LEN_LAR_HIT[23..22]     - (RW) To control MPDU LEN larger hit event
                                     2'b00: Fixed at 0 (LEN_LAR always not Match)
                                     2'b01: Fixed at 1 (LEN_LAR always Match)
                                     2'b10: A>CR
                                     2'b11: A<CR
    AND_OR[24]                   - (RW) For CSD debug used.  And bit31=0
                                     0: OR all hit event
                                     1: AND all hit event
    PPDU_MPDU[25]                - (RW) Trigger by PPDU or MPDU base
                                     0: MPDU and FCS32 PASS
                                     1: PPDU and no check FCS32
    BCN_BTIM_DROP[27..26]        - (RW) LP BCN DROP or BCN HASH DROP or BTIM DROP event
                                     2'b00: Fixed at 0 (always not Match)
                                     2'b01: Fixed at 1 (always Match)
                                     2'b10: A
                                     2'b11: ~A
    PMCTL0_RSVD[30..28]          - (RW) LIG field matching control. For CSD debug used.
                                     Reserved register
    OVF_MSBA[31]                 - (RW) Trigger by PPDU overflow drop or RX MSBA 
                                     when OVF_MSBA=1
                                     PMCTRL0[24]=1: PPDU overflow
                                     PMCTRL0[24]=0: RX MSBA

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_PMCTL0_OVF_MSBA_ADDR                   BN1_WF_RMAC_TOP_PMCTL0_ADDR
#define BN1_WF_RMAC_TOP_PMCTL0_OVF_MSBA_MASK                   0x80000000                // OVF_MSBA[31]
#define BN1_WF_RMAC_TOP_PMCTL0_OVF_MSBA_SHFT                   31
#define BN1_WF_RMAC_TOP_PMCTL0_PMCTL0_RSVD_ADDR                BN1_WF_RMAC_TOP_PMCTL0_ADDR
#define BN1_WF_RMAC_TOP_PMCTL0_PMCTL0_RSVD_MASK                0x70000000                // PMCTL0_RSVD[30..28]
#define BN1_WF_RMAC_TOP_PMCTL0_PMCTL0_RSVD_SHFT                28
#define BN1_WF_RMAC_TOP_PMCTL0_BCN_BTIM_DROP_ADDR              BN1_WF_RMAC_TOP_PMCTL0_ADDR
#define BN1_WF_RMAC_TOP_PMCTL0_BCN_BTIM_DROP_MASK              0x0C000000                // BCN_BTIM_DROP[27..26]
#define BN1_WF_RMAC_TOP_PMCTL0_BCN_BTIM_DROP_SHFT              26
#define BN1_WF_RMAC_TOP_PMCTL0_PPDU_MPDU_ADDR                  BN1_WF_RMAC_TOP_PMCTL0_ADDR
#define BN1_WF_RMAC_TOP_PMCTL0_PPDU_MPDU_MASK                  0x02000000                // PPDU_MPDU[25]
#define BN1_WF_RMAC_TOP_PMCTL0_PPDU_MPDU_SHFT                  25
#define BN1_WF_RMAC_TOP_PMCTL0_AND_OR_ADDR                     BN1_WF_RMAC_TOP_PMCTL0_ADDR
#define BN1_WF_RMAC_TOP_PMCTL0_AND_OR_MASK                     0x01000000                // AND_OR[24]
#define BN1_WF_RMAC_TOP_PMCTL0_AND_OR_SHFT                     24
#define BN1_WF_RMAC_TOP_PMCTL0_MPDU_LEN_LAR_HIT_ADDR           BN1_WF_RMAC_TOP_PMCTL0_ADDR
#define BN1_WF_RMAC_TOP_PMCTL0_MPDU_LEN_LAR_HIT_MASK           0x00C00000                // MPDU_LEN_LAR_HIT[23..22]
#define BN1_WF_RMAC_TOP_PMCTL0_MPDU_LEN_LAR_HIT_SHFT           22
#define BN1_WF_RMAC_TOP_PMCTL0_MPDU_LEN_EQ_HIT_ADDR            BN1_WF_RMAC_TOP_PMCTL0_ADDR
#define BN1_WF_RMAC_TOP_PMCTL0_MPDU_LEN_EQ_HIT_MASK            0x00300000                // MPDU_LEN_EQ_HIT[21..20]
#define BN1_WF_RMAC_TOP_PMCTL0_MPDU_LEN_EQ_HIT_SHFT            20
#define BN1_WF_RMAC_TOP_PMCTL0_PPDU_LEN_LAR_HIT_ADDR           BN1_WF_RMAC_TOP_PMCTL0_ADDR
#define BN1_WF_RMAC_TOP_PMCTL0_PPDU_LEN_LAR_HIT_MASK           0x000C0000                // PPDU_LEN_LAR_HIT[19..18]
#define BN1_WF_RMAC_TOP_PMCTL0_PPDU_LEN_LAR_HIT_SHFT           18
#define BN1_WF_RMAC_TOP_PMCTL0_UC2MAC_HIT_ADDR                 BN1_WF_RMAC_TOP_PMCTL0_ADDR
#define BN1_WF_RMAC_TOP_PMCTL0_UC2MAC_HIT_MASK                 0x00030000                // UC2MAC_HIT[17..16]
#define BN1_WF_RMAC_TOP_PMCTL0_UC2MAC_HIT_SHFT                 16
#define BN1_WF_RMAC_TOP_PMCTL0_FCSOK_HIT_ADDR                  BN1_WF_RMAC_TOP_PMCTL0_ADDR
#define BN1_WF_RMAC_TOP_PMCTL0_FCSOK_HIT_MASK                  0x0000C000                // FCSOK_HIT[15..14]
#define BN1_WF_RMAC_TOP_PMCTL0_FCSOK_HIT_SHFT                  14
#define BN1_WF_RMAC_TOP_PMCTL0_STBC_HIT_ADDR                   BN1_WF_RMAC_TOP_PMCTL0_ADDR
#define BN1_WF_RMAC_TOP_PMCTL0_STBC_HIT_MASK                   0x00003000                // STBC_HIT[13..12]
#define BN1_WF_RMAC_TOP_PMCTL0_STBC_HIT_SHFT                   12
#define BN1_WF_RMAC_TOP_PMCTL0_FRMODE_HIT_ADDR                 BN1_WF_RMAC_TOP_PMCTL0_ADDR
#define BN1_WF_RMAC_TOP_PMCTL0_FRMODE_HIT_MASK                 0x00000C00                // FRMODE_HIT[11..10]
#define BN1_WF_RMAC_TOP_PMCTL0_FRMODE_HIT_SHFT                 10
#define BN1_WF_RMAC_TOP_PMCTL0_RXRATE_HIT_ADDR                 BN1_WF_RMAC_TOP_PMCTL0_ADDR
#define BN1_WF_RMAC_TOP_PMCTL0_RXRATE_HIT_MASK                 0x00000300                // RXRATE_HIT[9..8]
#define BN1_WF_RMAC_TOP_PMCTL0_RXRATE_HIT_SHFT                 8
#define BN1_WF_RMAC_TOP_PMCTL0_AGG_HIT_ADDR                    BN1_WF_RMAC_TOP_PMCTL0_ADDR
#define BN1_WF_RMAC_TOP_PMCTL0_AGG_HIT_MASK                    0x000000C0                // AGG_HIT[7..6]
#define BN1_WF_RMAC_TOP_PMCTL0_AGG_HIT_SHFT                    6
#define BN1_WF_RMAC_TOP_PMCTL0_Mode_HIT_ADDR                   BN1_WF_RMAC_TOP_PMCTL0_ADDR
#define BN1_WF_RMAC_TOP_PMCTL0_Mode_HIT_MASK                   0x00000030                // Mode_HIT[5..4]
#define BN1_WF_RMAC_TOP_PMCTL0_Mode_HIT_SHFT                   4
#define BN1_WF_RMAC_TOP_PMCTL0_PMCTL0_RSV_ADDR                 BN1_WF_RMAC_TOP_PMCTL0_ADDR
#define BN1_WF_RMAC_TOP_PMCTL0_PMCTL0_RSV_MASK                 0x0000000C                // PMCTL0_RSV[3..2]
#define BN1_WF_RMAC_TOP_PMCTL0_PMCTL0_RSV_SHFT                 2
#define BN1_WF_RMAC_TOP_PMCTL0_PPDU_LEN_EQ_HIT_ADDR            BN1_WF_RMAC_TOP_PMCTL0_ADDR
#define BN1_WF_RMAC_TOP_PMCTL0_PPDU_LEN_EQ_HIT_MASK            0x00000003                // PPDU_LEN_EQ_HIT[1..0]
#define BN1_WF_RMAC_TOP_PMCTL0_PPDU_LEN_EQ_HIT_SHFT            0

/* =====================================================================================

  ---BTENCR (0x820f5000 + 0x88)---

    BT_COL_OBS_TIME[6..0]        - (RW) Observation times for BT_col from BB. BT_COL_OBS_TIME should be larger than BT_ENV_THRESHOLD.
                                     Note: write this register will reset this function
    RESERVED7[7]                 - (RO) Reserved bits
    BT_ENV_THRESHOLD[14..8]      - (RW) A threshold that is used to decide BT environment exist or not.
    RESERVED15[15]               - (RO) Reserved bits
    BT_env[16]                   - (RC) BT environment exist. While BT_col_cnt is equal or larger than BT_ENV_THRESHOLD, set BT_env to 1. Otherwise BT_env is 0.
                                     Note, BT_col is only valid when packet is OFDM but regardless of UC2MAC/FCS32_OK.
                                     Once BT_ENV is 1, it only could be clear by SW
    RESERVED17[23..17]           - (RO) Reserved bits
    PTYPE_HIT[25..24]            - (RW) To control Stype_type larger hit event
                                     2'b00: Fixed at 0 (STYPE_TYPE always not Match)
                                     2'b01: Fixed at 1 (STYPE_TYPE always Match)
                                     2'b10: A
                                     2'b11: ~A
    PTYPE_COMP[31..26]           - (RW) Frame control field matching control. For debugging
                                     FrameControl. Subtype_Type match

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_BTENCR_PTYPE_COMP_ADDR                 BN1_WF_RMAC_TOP_BTENCR_ADDR
#define BN1_WF_RMAC_TOP_BTENCR_PTYPE_COMP_MASK                 0xFC000000                // PTYPE_COMP[31..26]
#define BN1_WF_RMAC_TOP_BTENCR_PTYPE_COMP_SHFT                 26
#define BN1_WF_RMAC_TOP_BTENCR_PTYPE_HIT_ADDR                  BN1_WF_RMAC_TOP_BTENCR_ADDR
#define BN1_WF_RMAC_TOP_BTENCR_PTYPE_HIT_MASK                  0x03000000                // PTYPE_HIT[25..24]
#define BN1_WF_RMAC_TOP_BTENCR_PTYPE_HIT_SHFT                  24
#define BN1_WF_RMAC_TOP_BTENCR_BT_env_ADDR                     BN1_WF_RMAC_TOP_BTENCR_ADDR
#define BN1_WF_RMAC_TOP_BTENCR_BT_env_MASK                     0x00010000                // BT_env[16]
#define BN1_WF_RMAC_TOP_BTENCR_BT_env_SHFT                     16
#define BN1_WF_RMAC_TOP_BTENCR_BT_ENV_THRESHOLD_ADDR           BN1_WF_RMAC_TOP_BTENCR_ADDR
#define BN1_WF_RMAC_TOP_BTENCR_BT_ENV_THRESHOLD_MASK           0x00007F00                // BT_ENV_THRESHOLD[14..8]
#define BN1_WF_RMAC_TOP_BTENCR_BT_ENV_THRESHOLD_SHFT           8
#define BN1_WF_RMAC_TOP_BTENCR_BT_COL_OBS_TIME_ADDR            BN1_WF_RMAC_TOP_BTENCR_ADDR
#define BN1_WF_RMAC_TOP_BTENCR_BT_COL_OBS_TIME_MASK            0x0000007F                // BT_COL_OBS_TIME[6..0]
#define BN1_WF_RMAC_TOP_BTENCR_BT_COL_OBS_TIME_SHFT            0

/* =====================================================================================

  ---SCON (0x820f5000 + 0x8c)---

    SCONN_DA_COMP_PAT[23..0]     - (RW) Smart Connection New Mode Destincation Address Compare Pattern.
                                     Use together with RFCR1.SCONN_NEW_MODE_EN. The Rx packet with destination addr (which is Addr3 when fc.tods = 1, and is Addr1 when fc.frds = 1) matches SCONN_DA_COMP_PAT will be received by MAC Rx and always pass Rx filter.
                                     This field is shared with DAWN trigger frame parsing funciton, when MISC3.A3_PAT_TRI_EN = 1. The Rx Data Frame packet with Addr3[23:0] matches SCONN_DA_COMP_PAT will trigger interrupt
    RCPI_DROP_THRESHOLD[31..24]  - (RW) Minimum Rx packet RCPI threshold.
                                     Use together with RFCR1.DROP_RCPI_LOW_THR. The Rx packet with RCPI less than the RCPI_DROP_THRESHOLD will be dropped.

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_SCON_RCPI_DROP_THRESHOLD_ADDR          BN1_WF_RMAC_TOP_SCON_ADDR
#define BN1_WF_RMAC_TOP_SCON_RCPI_DROP_THRESHOLD_MASK          0xFF000000                // RCPI_DROP_THRESHOLD[31..24]
#define BN1_WF_RMAC_TOP_SCON_RCPI_DROP_THRESHOLD_SHFT          24
#define BN1_WF_RMAC_TOP_SCON_SCONN_DA_COMP_PAT_ADDR            BN1_WF_RMAC_TOP_SCON_ADDR
#define BN1_WF_RMAC_TOP_SCON_SCONN_DA_COMP_PAT_MASK            0x00FFFFFF                // SCONN_DA_COMP_PAT[23..0]
#define BN1_WF_RMAC_TOP_SCON_SCONN_DA_COMP_PAT_SHFT            0

/* =====================================================================================

  ---CHFREQ (0x820f5000 + 0x90)---

    ChFREQ[7..0]                 - (RW) Channel Frequence
                                     RMAC will latch Channel frequency register value at the begin of per MPDU and send this information to descripters.
                                     Used for sync RF setting.
    A3_COMP_PAT_B47_24[31..8]    - (RW) DAWN Rx Data Frame Address 3 Compare Pattern bit[47:24] field. Only valid when both MISC3.A3_PAT_TRI_EN and MISC3.A3_PAT_CMP_B47_24_EN = 1.
                                     Use together with SCON.SCONN_DA_COMP_PAT. The Rx Data Frame packet with Addr3[47:0] matches{ A3_COMP_PAT_b47_24, SCONN_DA_COMP_PAT} will trigger interrupt.

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_CHFREQ_A3_COMP_PAT_B47_24_ADDR         BN1_WF_RMAC_TOP_CHFREQ_ADDR
#define BN1_WF_RMAC_TOP_CHFREQ_A3_COMP_PAT_B47_24_MASK         0xFFFFFF00                // A3_COMP_PAT_B47_24[31..8]
#define BN1_WF_RMAC_TOP_CHFREQ_A3_COMP_PAT_B47_24_SHFT         8
#define BN1_WF_RMAC_TOP_CHFREQ_ChFREQ_ADDR                     BN1_WF_RMAC_TOP_CHFREQ_ADDR
#define BN1_WF_RMAC_TOP_CHFREQ_ChFREQ_MASK                     0x000000FF                // ChFREQ[7..0]
#define BN1_WF_RMAC_TOP_CHFREQ_ChFREQ_SHFT                     0

/* =====================================================================================

  ---PHY_DELAY (0x820f5000 + 0x94)---

    RMAC_CR_FAGC_NS[15..0]       - (RW) This CR is used to fine tune OFDM PHY delay
                                     Refer to BB MAC interface document.
    RMAC_CR_96US[23..16]         - (RW) This CR is used to fine tune CCK short preamble PHY delay
                                     Refer to BB_MAC_interface.doc
    RMAC_CR_192US[31..24]        - (RW) This CR is used to fine tune CCK long preamble PHY delay
                                     Refer to BB_MAC_interface.doc

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_PHY_DELAY_RMAC_CR_192US_ADDR           BN1_WF_RMAC_TOP_PHY_DELAY_ADDR
#define BN1_WF_RMAC_TOP_PHY_DELAY_RMAC_CR_192US_MASK           0xFF000000                // RMAC_CR_192US[31..24]
#define BN1_WF_RMAC_TOP_PHY_DELAY_RMAC_CR_192US_SHFT           24
#define BN1_WF_RMAC_TOP_PHY_DELAY_RMAC_CR_96US_ADDR            BN1_WF_RMAC_TOP_PHY_DELAY_ADDR
#define BN1_WF_RMAC_TOP_PHY_DELAY_RMAC_CR_96US_MASK            0x00FF0000                // RMAC_CR_96US[23..16]
#define BN1_WF_RMAC_TOP_PHY_DELAY_RMAC_CR_96US_SHFT            16
#define BN1_WF_RMAC_TOP_PHY_DELAY_RMAC_CR_FAGC_NS_ADDR         BN1_WF_RMAC_TOP_PHY_DELAY_ADDR
#define BN1_WF_RMAC_TOP_PHY_DELAY_RMAC_CR_FAGC_NS_MASK         0x0000FFFF                // RMAC_CR_FAGC_NS[15..0]
#define BN1_WF_RMAC_TOP_PHY_DELAY_RMAC_CR_FAGC_NS_SHFT         0

/* =====================================================================================

  ---RCPI_OFST (0x820f5000 + 0x9C)---

    RCPI0_OFST[7..0]             - (RW) RX RCPI ANT0 offset, HW always add this value for RCPI compensation
                                     bit7 for operation bit
                                     8'h0 for Disable
                                     8'b0000_0001 for Add 1
                                     8' b1000_0001 for Sub 1
    RCPI1_OFST[15..8]            - (RW) RX RCPI ANT0 offset, HW always add this value for RCPI compensation
                                     bit7 for operation bit
                                     8'h0 for Disable
                                     8'b0000_0001 for Add 1
                                     8' b1000_0001 for Sub 1
    RCPI2_OFST[23..16]           - (RW) RX RCPI ANT0 offset, HW always add this value for RCPI compensation
                                     bit7 for operation bit
                                     8'h0 for Disable
                                     8'b0000_0001 for Add 1
                                     8' b1000_0001 for Sub 1
    RCPI3_OFST[31..24]           - (RW) RX RCPI ANT0 offset, HW always add this value for RCPI compensation
                                     bit7 for operation bit
                                     8'h0 for Disable
                                     8'b0000_0001 for Add 1
                                     8' b1000_0001 for Sub 1

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RCPI_OFST_RCPI3_OFST_ADDR              BN1_WF_RMAC_TOP_RCPI_OFST_ADDR
#define BN1_WF_RMAC_TOP_RCPI_OFST_RCPI3_OFST_MASK              0xFF000000                // RCPI3_OFST[31..24]
#define BN1_WF_RMAC_TOP_RCPI_OFST_RCPI3_OFST_SHFT              24
#define BN1_WF_RMAC_TOP_RCPI_OFST_RCPI2_OFST_ADDR              BN1_WF_RMAC_TOP_RCPI_OFST_ADDR
#define BN1_WF_RMAC_TOP_RCPI_OFST_RCPI2_OFST_MASK              0x00FF0000                // RCPI2_OFST[23..16]
#define BN1_WF_RMAC_TOP_RCPI_OFST_RCPI2_OFST_SHFT              16
#define BN1_WF_RMAC_TOP_RCPI_OFST_RCPI1_OFST_ADDR              BN1_WF_RMAC_TOP_RCPI_OFST_ADDR
#define BN1_WF_RMAC_TOP_RCPI_OFST_RCPI1_OFST_MASK              0x0000FF00                // RCPI1_OFST[15..8]
#define BN1_WF_RMAC_TOP_RCPI_OFST_RCPI1_OFST_SHFT              8
#define BN1_WF_RMAC_TOP_RCPI_OFST_RCPI0_OFST_ADDR              BN1_WF_RMAC_TOP_RCPI_OFST_ADDR
#define BN1_WF_RMAC_TOP_RCPI_OFST_RCPI0_OFST_MASK              0x000000FF                // RCPI0_OFST[7..0]
#define BN1_WF_RMAC_TOP_RCPI_OFST_RCPI0_OFST_SHFT              0

/* =====================================================================================

  ---RXICSRPT (0x820f5000 + 0xD0)---

    RX_ICSRPT_EN[0]              - (RW) Enable RX ICS report
                                     0 : Discard report
                                     1 : Enable report
    RX_ICSRPT_FRM_DATA_DIS[1]    - (RW) Disable  RX ICS Data Frame report
                                     0 : Not disable Data Frame
                                     1 : Disable Data Frame
    RX_ICSRPT_FRM_MGMT_DIS[2]    - (RW) Disable  RX ICS Mamagment Frame report
                                     0 : Not disable Mamagment Frame
                                     1 : Disable Mamagment Frame
    RX_ICSRPT_FRM_CTRL_DIS[3]    - (RW) Disable  RX ICS CTRL Frame report
                                     0 : Not disable CTRL Frame
                                     1 : Disable CTRL Frame
    RX_ICSRPT_FRM_CTRL_ACK_DIS[4] - (RW) Disable  RX ICS CTRL_ACK Frame report
                                     0 : Not disable CTRL_ACK Frame
                                     1 : Disable CTRL_ACK Frame
    RX_ICSRPT_FRM_CTRL_RTSCTS_DIS[5] - (RW) Disable  RX ICS CTRL_RTS or CTRL_CTS Frame report
                                     0 : Not disable CTRL_RTS or CTRL_CTS Frame
                                     1 : Disable CTRL_RTS or CTRL_CTS Frame
    RX_ICSRPT_FRM_NO2ME_DIS[6]   - (RW) Disable  RX ICS Not UC to Me Frame report
                                     0 : Not disable Not UC to Me Frame
                                     1 : Disable  Not UC to Me Frame
    RX_ICSRPT_FRM_FCSERR_DIS[7]  - (RW) Disable  RX ICS FCS ERROR Frame report
                                     0 : Not disable  FCS ERROR Frame
                                     1 : Disable  FCS ERROR Frame
    RX_ICSRPT_HDR_BYPASS[8]      - (RW) Bypass User0 Frame HDR limite
    RESERVED9[31..9]             - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RXICSRPT_RX_ICSRPT_HDR_BYPASS_ADDR     BN1_WF_RMAC_TOP_RXICSRPT_ADDR
#define BN1_WF_RMAC_TOP_RXICSRPT_RX_ICSRPT_HDR_BYPASS_MASK     0x00000100                // RX_ICSRPT_HDR_BYPASS[8]
#define BN1_WF_RMAC_TOP_RXICSRPT_RX_ICSRPT_HDR_BYPASS_SHFT     8
#define BN1_WF_RMAC_TOP_RXICSRPT_RX_ICSRPT_FRM_FCSERR_DIS_ADDR BN1_WF_RMAC_TOP_RXICSRPT_ADDR
#define BN1_WF_RMAC_TOP_RXICSRPT_RX_ICSRPT_FRM_FCSERR_DIS_MASK 0x00000080                // RX_ICSRPT_FRM_FCSERR_DIS[7]
#define BN1_WF_RMAC_TOP_RXICSRPT_RX_ICSRPT_FRM_FCSERR_DIS_SHFT 7
#define BN1_WF_RMAC_TOP_RXICSRPT_RX_ICSRPT_FRM_NO2ME_DIS_ADDR  BN1_WF_RMAC_TOP_RXICSRPT_ADDR
#define BN1_WF_RMAC_TOP_RXICSRPT_RX_ICSRPT_FRM_NO2ME_DIS_MASK  0x00000040                // RX_ICSRPT_FRM_NO2ME_DIS[6]
#define BN1_WF_RMAC_TOP_RXICSRPT_RX_ICSRPT_FRM_NO2ME_DIS_SHFT  6
#define BN1_WF_RMAC_TOP_RXICSRPT_RX_ICSRPT_FRM_CTRL_RTSCTS_DIS_ADDR BN1_WF_RMAC_TOP_RXICSRPT_ADDR
#define BN1_WF_RMAC_TOP_RXICSRPT_RX_ICSRPT_FRM_CTRL_RTSCTS_DIS_MASK 0x00000020                // RX_ICSRPT_FRM_CTRL_RTSCTS_DIS[5]
#define BN1_WF_RMAC_TOP_RXICSRPT_RX_ICSRPT_FRM_CTRL_RTSCTS_DIS_SHFT 5
#define BN1_WF_RMAC_TOP_RXICSRPT_RX_ICSRPT_FRM_CTRL_ACK_DIS_ADDR BN1_WF_RMAC_TOP_RXICSRPT_ADDR
#define BN1_WF_RMAC_TOP_RXICSRPT_RX_ICSRPT_FRM_CTRL_ACK_DIS_MASK 0x00000010                // RX_ICSRPT_FRM_CTRL_ACK_DIS[4]
#define BN1_WF_RMAC_TOP_RXICSRPT_RX_ICSRPT_FRM_CTRL_ACK_DIS_SHFT 4
#define BN1_WF_RMAC_TOP_RXICSRPT_RX_ICSRPT_FRM_CTRL_DIS_ADDR   BN1_WF_RMAC_TOP_RXICSRPT_ADDR
#define BN1_WF_RMAC_TOP_RXICSRPT_RX_ICSRPT_FRM_CTRL_DIS_MASK   0x00000008                // RX_ICSRPT_FRM_CTRL_DIS[3]
#define BN1_WF_RMAC_TOP_RXICSRPT_RX_ICSRPT_FRM_CTRL_DIS_SHFT   3
#define BN1_WF_RMAC_TOP_RXICSRPT_RX_ICSRPT_FRM_MGMT_DIS_ADDR   BN1_WF_RMAC_TOP_RXICSRPT_ADDR
#define BN1_WF_RMAC_TOP_RXICSRPT_RX_ICSRPT_FRM_MGMT_DIS_MASK   0x00000004                // RX_ICSRPT_FRM_MGMT_DIS[2]
#define BN1_WF_RMAC_TOP_RXICSRPT_RX_ICSRPT_FRM_MGMT_DIS_SHFT   2
#define BN1_WF_RMAC_TOP_RXICSRPT_RX_ICSRPT_FRM_DATA_DIS_ADDR   BN1_WF_RMAC_TOP_RXICSRPT_ADDR
#define BN1_WF_RMAC_TOP_RXICSRPT_RX_ICSRPT_FRM_DATA_DIS_MASK   0x00000002                // RX_ICSRPT_FRM_DATA_DIS[1]
#define BN1_WF_RMAC_TOP_RXICSRPT_RX_ICSRPT_FRM_DATA_DIS_SHFT   1
#define BN1_WF_RMAC_TOP_RXICSRPT_RX_ICSRPT_EN_ADDR             BN1_WF_RMAC_TOP_RXICSRPT_ADDR
#define BN1_WF_RMAC_TOP_RXICSRPT_RX_ICSRPT_EN_MASK             0x00000001                // RX_ICSRPT_EN[0]
#define BN1_WF_RMAC_TOP_RXICSRPT_RX_ICSRPT_EN_SHFT             0

/* =====================================================================================

  ---RXICSRPT_CNT (0x820f5000 + 0xD4)---

    RX_ICSRPT_TRIG_CNT[15..0]    - (RO) RX ICS report Trigger count
                                     And HW auto read clear
    RX_ICSRPT_PPDU_DROP_CNT[31..16] - (RO) RX ICS report drop count
                                     And auto clear by ICSRPT packet

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RXICSRPT_CNT_RX_ICSRPT_PPDU_DROP_CNT_ADDR BN1_WF_RMAC_TOP_RXICSRPT_CNT_ADDR
#define BN1_WF_RMAC_TOP_RXICSRPT_CNT_RX_ICSRPT_PPDU_DROP_CNT_MASK 0xFFFF0000                // RX_ICSRPT_PPDU_DROP_CNT[31..16]
#define BN1_WF_RMAC_TOP_RXICSRPT_CNT_RX_ICSRPT_PPDU_DROP_CNT_SHFT 16
#define BN1_WF_RMAC_TOP_RXICSRPT_CNT_RX_ICSRPT_TRIG_CNT_ADDR   BN1_WF_RMAC_TOP_RXICSRPT_CNT_ADDR
#define BN1_WF_RMAC_TOP_RXICSRPT_CNT_RX_ICSRPT_TRIG_CNT_MASK   0x0000FFFF                // RX_ICSRPT_TRIG_CNT[15..0]
#define BN1_WF_RMAC_TOP_RXICSRPT_CNT_RX_ICSRPT_TRIG_CNT_SHFT   0

/* =====================================================================================

  ---RXICSRPT_CNT2 (0x820f5000 + 0xD8)---

    RX_ICSRPT_ABORT_CNT[15..0]   - (RO) RX ICS report Abort count by TRB/DMA
                                     And HW auto read clear
    RX_ICSRPT_FILTER_CNT[31..16] - (RO) RX ICS report Filter count by Disable frame type
                                     And HW auto read clear

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RXICSRPT_CNT2_RX_ICSRPT_FILTER_CNT_ADDR BN1_WF_RMAC_TOP_RXICSRPT_CNT2_ADDR
#define BN1_WF_RMAC_TOP_RXICSRPT_CNT2_RX_ICSRPT_FILTER_CNT_MASK 0xFFFF0000                // RX_ICSRPT_FILTER_CNT[31..16]
#define BN1_WF_RMAC_TOP_RXICSRPT_CNT2_RX_ICSRPT_FILTER_CNT_SHFT 16
#define BN1_WF_RMAC_TOP_RXICSRPT_CNT2_RX_ICSRPT_ABORT_CNT_ADDR BN1_WF_RMAC_TOP_RXICSRPT_CNT2_ADDR
#define BN1_WF_RMAC_TOP_RXICSRPT_CNT2_RX_ICSRPT_ABORT_CNT_MASK 0x0000FFFF                // RX_ICSRPT_ABORT_CNT[15..0]
#define BN1_WF_RMAC_TOP_RXICSRPT_CNT2_RX_ICSRPT_ABORT_CNT_SHFT 0

/* =====================================================================================

  ---BSR_CTRL (0x820f5000 + 0xE0)---

    BSR_TF_SF0[1..0]             - (RW) BSR Truncate control for SF=0 (unit=16)
    BSR_TF_SF1[3..2]             - (RW) BSR Truncate control for SF=0 (unit=256)
    BSR_TF_SF2[5..4]             - (RW) BSR Truncate control for SF=0 (unit=2048)
    BSR_TF_SF3[7..6]             - (RW) BSR Truncate control for SF=0 (unit=32768)
    RESERVED8[31..8]             - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_BSR_CTRL_BSR_TF_SF3_ADDR               BN1_WF_RMAC_TOP_BSR_CTRL_ADDR
#define BN1_WF_RMAC_TOP_BSR_CTRL_BSR_TF_SF3_MASK               0x000000C0                // BSR_TF_SF3[7..6]
#define BN1_WF_RMAC_TOP_BSR_CTRL_BSR_TF_SF3_SHFT               6
#define BN1_WF_RMAC_TOP_BSR_CTRL_BSR_TF_SF2_ADDR               BN1_WF_RMAC_TOP_BSR_CTRL_ADDR
#define BN1_WF_RMAC_TOP_BSR_CTRL_BSR_TF_SF2_MASK               0x00000030                // BSR_TF_SF2[5..4]
#define BN1_WF_RMAC_TOP_BSR_CTRL_BSR_TF_SF2_SHFT               4
#define BN1_WF_RMAC_TOP_BSR_CTRL_BSR_TF_SF1_ADDR               BN1_WF_RMAC_TOP_BSR_CTRL_ADDR
#define BN1_WF_RMAC_TOP_BSR_CTRL_BSR_TF_SF1_MASK               0x0000000C                // BSR_TF_SF1[3..2]
#define BN1_WF_RMAC_TOP_BSR_CTRL_BSR_TF_SF1_SHFT               2
#define BN1_WF_RMAC_TOP_BSR_CTRL_BSR_TF_SF0_ADDR               BN1_WF_RMAC_TOP_BSR_CTRL_ADDR
#define BN1_WF_RMAC_TOP_BSR_CTRL_BSR_TF_SF0_MASK               0x00000003                // BSR_TF_SF0[1..0]
#define BN1_WF_RMAC_TOP_BSR_CTRL_BSR_TF_SF0_SHFT               0

/* =====================================================================================

  ---RXRSPCR (0x820f5000 + 0xE4)---

    RESP_ACKALL_EN[0]            - (RW) Enable all ack context indication while receiving PPDU
                                     0 : Don't indicate all ack context while receiving PPDU
                                     1: indicate all ack context while receiving PPDU
    RX_HETB_SMPDU_RSP_MSBA_EN[1] - (RW) Enable response MSBA frame indication while receive SMPDU, Pspoll or action, carried in HE TB PPDU
                                     0 : Don't indicate MSBA response while receiving SMPDU carried in HE TB PPDU
                                     1: indicate MSBA response while receiving SMPDU carried in HE TB PPDU
    RESERVED2[7..2]              - (RO) Reserved bits
    RXRPT_FRM_DATA_EN[8]         - (RW) Enable Rx Report Data Frame type
                                     1'b0: Disable Data Frame Rx Report
                                     1'b1: Enable Data Frame Report
    RXRPT_FRM_QOSD_EN[9]         - (RW) Enable Rx Report QOS Data Frame type
                                     1'b0: Disable QOS Data Frame Rx Report
                                     1'b1: Enable QOS Data Frame Report
    RXRPT_FRM_QOSNULL_EN[10]     - (RW) Enable Rx Report QOS NULL Data Frame type
                                     1'b0: Disable QOS NULL Data Frame Rx Report
                                     1'b1: Enable QOS NULL Data Frame Report
    RXRPT_FRM_CTRL_EN[11]        - (RW) Enable Rx Report CTRL Frame type
                                     1'b0: Disable CTRL Frame Rx Report
                                     1'b1: Enable CTRL Frame Report
    RXRPT_FRM_MGMT_EN[12]        - (RW) Enable Rx Report Management Frame type
                                     1'b0: Disable Management Frame Rx Report
                                     1'b1: Enable Management Frame Report
    RXRPT_CTNRPT_EN[13]          - (RW) Enable Rx Contention Report
                                     1'b0: Disable Contention Rx Report
                                     1'b1: Enable Contention Report
    RESERVED14[31..14]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RXRSPCR_RXRPT_CTNRPT_EN_ADDR           BN1_WF_RMAC_TOP_RXRSPCR_ADDR
#define BN1_WF_RMAC_TOP_RXRSPCR_RXRPT_CTNRPT_EN_MASK           0x00002000                // RXRPT_CTNRPT_EN[13]
#define BN1_WF_RMAC_TOP_RXRSPCR_RXRPT_CTNRPT_EN_SHFT           13
#define BN1_WF_RMAC_TOP_RXRSPCR_RXRPT_FRM_MGMT_EN_ADDR         BN1_WF_RMAC_TOP_RXRSPCR_ADDR
#define BN1_WF_RMAC_TOP_RXRSPCR_RXRPT_FRM_MGMT_EN_MASK         0x00001000                // RXRPT_FRM_MGMT_EN[12]
#define BN1_WF_RMAC_TOP_RXRSPCR_RXRPT_FRM_MGMT_EN_SHFT         12
#define BN1_WF_RMAC_TOP_RXRSPCR_RXRPT_FRM_CTRL_EN_ADDR         BN1_WF_RMAC_TOP_RXRSPCR_ADDR
#define BN1_WF_RMAC_TOP_RXRSPCR_RXRPT_FRM_CTRL_EN_MASK         0x00000800                // RXRPT_FRM_CTRL_EN[11]
#define BN1_WF_RMAC_TOP_RXRSPCR_RXRPT_FRM_CTRL_EN_SHFT         11
#define BN1_WF_RMAC_TOP_RXRSPCR_RXRPT_FRM_QOSNULL_EN_ADDR      BN1_WF_RMAC_TOP_RXRSPCR_ADDR
#define BN1_WF_RMAC_TOP_RXRSPCR_RXRPT_FRM_QOSNULL_EN_MASK      0x00000400                // RXRPT_FRM_QOSNULL_EN[10]
#define BN1_WF_RMAC_TOP_RXRSPCR_RXRPT_FRM_QOSNULL_EN_SHFT      10
#define BN1_WF_RMAC_TOP_RXRSPCR_RXRPT_FRM_QOSD_EN_ADDR         BN1_WF_RMAC_TOP_RXRSPCR_ADDR
#define BN1_WF_RMAC_TOP_RXRSPCR_RXRPT_FRM_QOSD_EN_MASK         0x00000200                // RXRPT_FRM_QOSD_EN[9]
#define BN1_WF_RMAC_TOP_RXRSPCR_RXRPT_FRM_QOSD_EN_SHFT         9
#define BN1_WF_RMAC_TOP_RXRSPCR_RXRPT_FRM_DATA_EN_ADDR         BN1_WF_RMAC_TOP_RXRSPCR_ADDR
#define BN1_WF_RMAC_TOP_RXRSPCR_RXRPT_FRM_DATA_EN_MASK         0x00000100                // RXRPT_FRM_DATA_EN[8]
#define BN1_WF_RMAC_TOP_RXRSPCR_RXRPT_FRM_DATA_EN_SHFT         8
#define BN1_WF_RMAC_TOP_RXRSPCR_RX_HETB_SMPDU_RSP_MSBA_EN_ADDR BN1_WF_RMAC_TOP_RXRSPCR_ADDR
#define BN1_WF_RMAC_TOP_RXRSPCR_RX_HETB_SMPDU_RSP_MSBA_EN_MASK 0x00000002                // RX_HETB_SMPDU_RSP_MSBA_EN[1]
#define BN1_WF_RMAC_TOP_RXRSPCR_RX_HETB_SMPDU_RSP_MSBA_EN_SHFT 1
#define BN1_WF_RMAC_TOP_RXRSPCR_RESP_ACKALL_EN_ADDR            BN1_WF_RMAC_TOP_RXRSPCR_ADDR
#define BN1_WF_RMAC_TOP_RXRSPCR_RESP_ACKALL_EN_MASK            0x00000001                // RESP_ACKALL_EN[0]
#define BN1_WF_RMAC_TOP_RXRSPCR_RESP_ACKALL_EN_SHFT            0

/* =====================================================================================

  ---RXMBACR (0x820f5000 + 0xE8)---

    MSBA_UC_AID_CHK_EN[0]        - (RW) Enable checking AID info while receiving unicasted to ownmac Multi-STA BA
                                     0 : Discard AID checking if Multi-STA BA is unicast to ownmac.
                                     1 : Enable AID checking even if Multi-STA BA is unicast to ownmac.
    RESERVED1[15..1]             - (RO) Reserved bits
    SMPS_NDPA_EN[16]             - (RW) Enable SMPS dynaminc mode with NDPA AID to me condition
    SMPS_DIS_NOT_UC2ME_CLR[17]   - (RW) Disable SMPS dynaminc mode Reset antenna state by RX not uc2me packet condition
    SMPS_ALL_TF_EN[18]           - (RW) Enable SMPS dynaminc mode with All TF type and AID to me condition
    RESERVED19[31..19]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RXMBACR_SMPS_ALL_TF_EN_ADDR            BN1_WF_RMAC_TOP_RXMBACR_ADDR
#define BN1_WF_RMAC_TOP_RXMBACR_SMPS_ALL_TF_EN_MASK            0x00040000                // SMPS_ALL_TF_EN[18]
#define BN1_WF_RMAC_TOP_RXMBACR_SMPS_ALL_TF_EN_SHFT            18
#define BN1_WF_RMAC_TOP_RXMBACR_SMPS_DIS_NOT_UC2ME_CLR_ADDR    BN1_WF_RMAC_TOP_RXMBACR_ADDR
#define BN1_WF_RMAC_TOP_RXMBACR_SMPS_DIS_NOT_UC2ME_CLR_MASK    0x00020000                // SMPS_DIS_NOT_UC2ME_CLR[17]
#define BN1_WF_RMAC_TOP_RXMBACR_SMPS_DIS_NOT_UC2ME_CLR_SHFT    17
#define BN1_WF_RMAC_TOP_RXMBACR_SMPS_NDPA_EN_ADDR              BN1_WF_RMAC_TOP_RXMBACR_ADDR
#define BN1_WF_RMAC_TOP_RXMBACR_SMPS_NDPA_EN_MASK              0x00010000                // SMPS_NDPA_EN[16]
#define BN1_WF_RMAC_TOP_RXMBACR_SMPS_NDPA_EN_SHFT              16
#define BN1_WF_RMAC_TOP_RXMBACR_MSBA_UC_AID_CHK_EN_ADDR        BN1_WF_RMAC_TOP_RXMBACR_ADDR
#define BN1_WF_RMAC_TOP_RXMBACR_MSBA_UC_AID_CHK_EN_MASK        0x00000001                // MSBA_UC_AID_CHK_EN[0]
#define BN1_WF_RMAC_TOP_RXMBACR_MSBA_UC_AID_CHK_EN_SHFT        0

/* =====================================================================================

  ---TFPARCR0 (0x820f5000 + 0x100)---

    RX_TF_UC2ME_AID_CHK_EN[0]    - (RW) Enable AID check when Rx unicast to ownmac trigger frame.
                                     0 : Don't check the AID for unicast to ownmac trigger frame
                                     1 : Check AID for unicast to ownmac trigger frame
    RX_TF_PAD_AID_CHK_EN[1]      - (RW) Stop search AID once hit AID=FFF
                                     0 : Don't check the AID=FFF and continue to search to packet end
                                     1 : Check AID=FFF and stop search next AID
    RESERVED2[7..2]              - (RO) Reserved bits
    TX_TF_PSR_EN[8]              - (RW) Enable Tx trigger frame parser (for AP mode)
    TX_TF_PSR_ERR_CNT_EN[9]      - (RW) Enable Tx trigger frame parser error counter
    RX_TF_PSR_ALL_INFO_EN[10]    - (RW) Enable Rx trigger frame parsing all info. (For sniffer mode usage)
    GEN_RX_RPT_EN[11]            - (RW) Generate RXRPT and CMDRPT-TRIG-Data
    TF_TRIG_SNIFFER_EN[12]       - (RW) RX Trigger Frame TRIG_INFO Select from CR or TXCMD
    NDP_RPT_EN[13]               - (RW) RX NDP RXRPT Enable
    TAR_RSSI_RPT_EN[14]          - (RW) Change CMDRPT RSSI offset entry to Target RSSI value
                                     1'b0: RSSI offset
                                     1'b1: Target RSSI value
    NOCHK_RX_MTF[15]             - (RW) No Check RX multiple TF Control
                                     1'b1: No check
                                     1'b0: check
    CTEN_RXV_EN[19..16]          - (RW) Contention RXRPT RXV block enable bit
                                     bit0: CRXV1
                                     bit1: PRXV1
                                     bit2: PRXV2
                                     bit3:CRXV2
    HETB_RXV_EN[23..20]          - (RW) HETB TRIG-DATA RXRPT RXV block enable bit
                                     bit0: CRXV1
                                     bit1: PRXV1
                                     bit2: PRXV2
                                     bit3:CRXV2
    DLON_RXV_EN[27..24]          - (RW) DL only TRIG-TX RXRPT RXV block enable bit
                                     bit0: CRXV1
                                     bit1: PRXV1
                                     bit2: PRXV2
                                     bit3:CRXV2
    No_RESP_TRIG_EN_BSSID0[28]   - (RW) Do not response trigger frame enable
                                     0: Response trigger frame
                                     1: No response trigger frame
    No_RESP_TRIG_EN_BSSID1[29]   - (RW) Do not response trigger frame enable
                                     0: Response trigger frame
                                     1: No response trigger frame
    No_RESP_TRIG_EN_BSSID2[30]   - (RW) Do not response trigger frame enable
                                     0: Response trigger frame
                                     1: No response trigger frame
    No_RESP_TRIG_EN_BSSID3[31]   - (RW) Do not response trigger frame enable
                                     0: Response trigger frame
                                     1: No response trigger frame

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_TFPARCR0_No_RESP_TRIG_EN_BSSID3_ADDR   BN1_WF_RMAC_TOP_TFPARCR0_ADDR
#define BN1_WF_RMAC_TOP_TFPARCR0_No_RESP_TRIG_EN_BSSID3_MASK   0x80000000                // No_RESP_TRIG_EN_BSSID3[31]
#define BN1_WF_RMAC_TOP_TFPARCR0_No_RESP_TRIG_EN_BSSID3_SHFT   31
#define BN1_WF_RMAC_TOP_TFPARCR0_No_RESP_TRIG_EN_BSSID2_ADDR   BN1_WF_RMAC_TOP_TFPARCR0_ADDR
#define BN1_WF_RMAC_TOP_TFPARCR0_No_RESP_TRIG_EN_BSSID2_MASK   0x40000000                // No_RESP_TRIG_EN_BSSID2[30]
#define BN1_WF_RMAC_TOP_TFPARCR0_No_RESP_TRIG_EN_BSSID2_SHFT   30
#define BN1_WF_RMAC_TOP_TFPARCR0_No_RESP_TRIG_EN_BSSID1_ADDR   BN1_WF_RMAC_TOP_TFPARCR0_ADDR
#define BN1_WF_RMAC_TOP_TFPARCR0_No_RESP_TRIG_EN_BSSID1_MASK   0x20000000                // No_RESP_TRIG_EN_BSSID1[29]
#define BN1_WF_RMAC_TOP_TFPARCR0_No_RESP_TRIG_EN_BSSID1_SHFT   29
#define BN1_WF_RMAC_TOP_TFPARCR0_No_RESP_TRIG_EN_BSSID0_ADDR   BN1_WF_RMAC_TOP_TFPARCR0_ADDR
#define BN1_WF_RMAC_TOP_TFPARCR0_No_RESP_TRIG_EN_BSSID0_MASK   0x10000000                // No_RESP_TRIG_EN_BSSID0[28]
#define BN1_WF_RMAC_TOP_TFPARCR0_No_RESP_TRIG_EN_BSSID0_SHFT   28
#define BN1_WF_RMAC_TOP_TFPARCR0_DLON_RXV_EN_ADDR              BN1_WF_RMAC_TOP_TFPARCR0_ADDR
#define BN1_WF_RMAC_TOP_TFPARCR0_DLON_RXV_EN_MASK              0x0F000000                // DLON_RXV_EN[27..24]
#define BN1_WF_RMAC_TOP_TFPARCR0_DLON_RXV_EN_SHFT              24
#define BN1_WF_RMAC_TOP_TFPARCR0_HETB_RXV_EN_ADDR              BN1_WF_RMAC_TOP_TFPARCR0_ADDR
#define BN1_WF_RMAC_TOP_TFPARCR0_HETB_RXV_EN_MASK              0x00F00000                // HETB_RXV_EN[23..20]
#define BN1_WF_RMAC_TOP_TFPARCR0_HETB_RXV_EN_SHFT              20
#define BN1_WF_RMAC_TOP_TFPARCR0_CTEN_RXV_EN_ADDR              BN1_WF_RMAC_TOP_TFPARCR0_ADDR
#define BN1_WF_RMAC_TOP_TFPARCR0_CTEN_RXV_EN_MASK              0x000F0000                // CTEN_RXV_EN[19..16]
#define BN1_WF_RMAC_TOP_TFPARCR0_CTEN_RXV_EN_SHFT              16
#define BN1_WF_RMAC_TOP_TFPARCR0_NOCHK_RX_MTF_ADDR             BN1_WF_RMAC_TOP_TFPARCR0_ADDR
#define BN1_WF_RMAC_TOP_TFPARCR0_NOCHK_RX_MTF_MASK             0x00008000                // NOCHK_RX_MTF[15]
#define BN1_WF_RMAC_TOP_TFPARCR0_NOCHK_RX_MTF_SHFT             15
#define BN1_WF_RMAC_TOP_TFPARCR0_TAR_RSSI_RPT_EN_ADDR          BN1_WF_RMAC_TOP_TFPARCR0_ADDR
#define BN1_WF_RMAC_TOP_TFPARCR0_TAR_RSSI_RPT_EN_MASK          0x00004000                // TAR_RSSI_RPT_EN[14]
#define BN1_WF_RMAC_TOP_TFPARCR0_TAR_RSSI_RPT_EN_SHFT          14
#define BN1_WF_RMAC_TOP_TFPARCR0_NDP_RPT_EN_ADDR               BN1_WF_RMAC_TOP_TFPARCR0_ADDR
#define BN1_WF_RMAC_TOP_TFPARCR0_NDP_RPT_EN_MASK               0x00002000                // NDP_RPT_EN[13]
#define BN1_WF_RMAC_TOP_TFPARCR0_NDP_RPT_EN_SHFT               13
#define BN1_WF_RMAC_TOP_TFPARCR0_TF_TRIG_SNIFFER_EN_ADDR       BN1_WF_RMAC_TOP_TFPARCR0_ADDR
#define BN1_WF_RMAC_TOP_TFPARCR0_TF_TRIG_SNIFFER_EN_MASK       0x00001000                // TF_TRIG_SNIFFER_EN[12]
#define BN1_WF_RMAC_TOP_TFPARCR0_TF_TRIG_SNIFFER_EN_SHFT       12
#define BN1_WF_RMAC_TOP_TFPARCR0_GEN_RX_RPT_EN_ADDR            BN1_WF_RMAC_TOP_TFPARCR0_ADDR
#define BN1_WF_RMAC_TOP_TFPARCR0_GEN_RX_RPT_EN_MASK            0x00000800                // GEN_RX_RPT_EN[11]
#define BN1_WF_RMAC_TOP_TFPARCR0_GEN_RX_RPT_EN_SHFT            11
#define BN1_WF_RMAC_TOP_TFPARCR0_RX_TF_PSR_ALL_INFO_EN_ADDR    BN1_WF_RMAC_TOP_TFPARCR0_ADDR
#define BN1_WF_RMAC_TOP_TFPARCR0_RX_TF_PSR_ALL_INFO_EN_MASK    0x00000400                // RX_TF_PSR_ALL_INFO_EN[10]
#define BN1_WF_RMAC_TOP_TFPARCR0_RX_TF_PSR_ALL_INFO_EN_SHFT    10
#define BN1_WF_RMAC_TOP_TFPARCR0_TX_TF_PSR_ERR_CNT_EN_ADDR     BN1_WF_RMAC_TOP_TFPARCR0_ADDR
#define BN1_WF_RMAC_TOP_TFPARCR0_TX_TF_PSR_ERR_CNT_EN_MASK     0x00000200                // TX_TF_PSR_ERR_CNT_EN[9]
#define BN1_WF_RMAC_TOP_TFPARCR0_TX_TF_PSR_ERR_CNT_EN_SHFT     9
#define BN1_WF_RMAC_TOP_TFPARCR0_TX_TF_PSR_EN_ADDR             BN1_WF_RMAC_TOP_TFPARCR0_ADDR
#define BN1_WF_RMAC_TOP_TFPARCR0_TX_TF_PSR_EN_MASK             0x00000100                // TX_TF_PSR_EN[8]
#define BN1_WF_RMAC_TOP_TFPARCR0_TX_TF_PSR_EN_SHFT             8
#define BN1_WF_RMAC_TOP_TFPARCR0_RX_TF_PAD_AID_CHK_EN_ADDR     BN1_WF_RMAC_TOP_TFPARCR0_ADDR
#define BN1_WF_RMAC_TOP_TFPARCR0_RX_TF_PAD_AID_CHK_EN_MASK     0x00000002                // RX_TF_PAD_AID_CHK_EN[1]
#define BN1_WF_RMAC_TOP_TFPARCR0_RX_TF_PAD_AID_CHK_EN_SHFT     1
#define BN1_WF_RMAC_TOP_TFPARCR0_RX_TF_UC2ME_AID_CHK_EN_ADDR   BN1_WF_RMAC_TOP_TFPARCR0_ADDR
#define BN1_WF_RMAC_TOP_TFPARCR0_RX_TF_UC2ME_AID_CHK_EN_MASK   0x00000001                // RX_TF_UC2ME_AID_CHK_EN[0]
#define BN1_WF_RMAC_TOP_TFPARCR0_RX_TF_UC2ME_AID_CHK_EN_SHFT   0

/* =====================================================================================

  ---TFCSD_INFO0 (0x820f5000 + 0x104)---

    RX_TFCSD_INFO0[31..0]        - (RW) Trigger RX Trigger info CSD assignment, detail reference PHY2MAC spec

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_TFCSD_INFO0_RX_TFCSD_INFO0_ADDR        BN1_WF_RMAC_TOP_TFCSD_INFO0_ADDR
#define BN1_WF_RMAC_TOP_TFCSD_INFO0_RX_TFCSD_INFO0_MASK        0xFFFFFFFF                // RX_TFCSD_INFO0[31..0]
#define BN1_WF_RMAC_TOP_TFCSD_INFO0_RX_TFCSD_INFO0_SHFT        0

/* =====================================================================================

  ---TFCSD_INFO1 (0x820f5000 + 0x108)---

    RX_TFCSD_INFO1[31..0]        - (RW) Trigger RX Trigger info CSD assignment, detail reference PHY2MAC spec

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_TFCSD_INFO1_RX_TFCSD_INFO1_ADDR        BN1_WF_RMAC_TOP_TFCSD_INFO1_ADDR
#define BN1_WF_RMAC_TOP_TFCSD_INFO1_RX_TFCSD_INFO1_MASK        0xFFFFFFFF                // RX_TFCSD_INFO1[31..0]
#define BN1_WF_RMAC_TOP_TFCSD_INFO1_RX_TFCSD_INFO1_SHFT        0

/* =====================================================================================

  ---TFPUSR_INFO (0x820f5000 + 0x10c)---

    PUSR_SF_ENB[15..0]           - (RW) Trigger RX Trigger info Pre-USER assignment, detail reference PHY2MAC spec
    SNIFFER_RX_USER_CNT[20..16]  - (RW) RX Sniffer mode TF Max User count
    RESERVED21[31..21]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_TFPUSR_INFO_SNIFFER_RX_USER_CNT_ADDR   BN1_WF_RMAC_TOP_TFPUSR_INFO_ADDR
#define BN1_WF_RMAC_TOP_TFPUSR_INFO_SNIFFER_RX_USER_CNT_MASK   0x001F0000                // SNIFFER_RX_USER_CNT[20..16]
#define BN1_WF_RMAC_TOP_TFPUSR_INFO_SNIFFER_RX_USER_CNT_SHFT   16
#define BN1_WF_RMAC_TOP_TFPUSR_INFO_PUSR_SF_ENB_ADDR           BN1_WF_RMAC_TOP_TFPUSR_INFO_ADDR
#define BN1_WF_RMAC_TOP_TFPUSR_INFO_PUSR_SF_ENB_MASK           0x0000FFFF                // PUSR_SF_ENB[15..0]
#define BN1_WF_RMAC_TOP_TFPUSR_INFO_PUSR_SF_ENB_SHFT           0

/* =====================================================================================

  ---TFFILTER (0x820f5000 + 0x110)---

    TF_SPRT_SSS[7..0]            - (RW) Trigger RX supported SSS value
    TF_SPRT_NSS[15..8]           - (RW) Trigger RX supported NSS value
    TF_TOTAL_NSS[19..16]         - (RW) Trigger RX supported Total NSS value
    TF_AID_CHK_EN[20]            - (RW) Trigger RX check BSSID AID match or not
                                     1'b0: No enable
                                     1'b1: enable
    TF_NO_TRIG_RX_DONE[21]       - (RW) No TX Trig Done to BBP for debug mode
                                     1'b0: No enable
                                     1'b1: enable
    TF_RXTF_RST_RX[22]           - (RW) RX Trigger frame reset mac2phy_rx
    RESERVED23[23]               - (RO) Reserved bits
    TF_RX_WAIT_RESP_TO[31..24]   - (RW) RX wait response timeout for sniffer mode timeout control
                                     8'd255 for disable timeout

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_TFFILTER_TF_RX_WAIT_RESP_TO_ADDR       BN1_WF_RMAC_TOP_TFFILTER_ADDR
#define BN1_WF_RMAC_TOP_TFFILTER_TF_RX_WAIT_RESP_TO_MASK       0xFF000000                // TF_RX_WAIT_RESP_TO[31..24]
#define BN1_WF_RMAC_TOP_TFFILTER_TF_RX_WAIT_RESP_TO_SHFT       24
#define BN1_WF_RMAC_TOP_TFFILTER_TF_RXTF_RST_RX_ADDR           BN1_WF_RMAC_TOP_TFFILTER_ADDR
#define BN1_WF_RMAC_TOP_TFFILTER_TF_RXTF_RST_RX_MASK           0x00400000                // TF_RXTF_RST_RX[22]
#define BN1_WF_RMAC_TOP_TFFILTER_TF_RXTF_RST_RX_SHFT           22
#define BN1_WF_RMAC_TOP_TFFILTER_TF_NO_TRIG_RX_DONE_ADDR       BN1_WF_RMAC_TOP_TFFILTER_ADDR
#define BN1_WF_RMAC_TOP_TFFILTER_TF_NO_TRIG_RX_DONE_MASK       0x00200000                // TF_NO_TRIG_RX_DONE[21]
#define BN1_WF_RMAC_TOP_TFFILTER_TF_NO_TRIG_RX_DONE_SHFT       21
#define BN1_WF_RMAC_TOP_TFFILTER_TF_AID_CHK_EN_ADDR            BN1_WF_RMAC_TOP_TFFILTER_ADDR
#define BN1_WF_RMAC_TOP_TFFILTER_TF_AID_CHK_EN_MASK            0x00100000                // TF_AID_CHK_EN[20]
#define BN1_WF_RMAC_TOP_TFFILTER_TF_AID_CHK_EN_SHFT            20
#define BN1_WF_RMAC_TOP_TFFILTER_TF_TOTAL_NSS_ADDR             BN1_WF_RMAC_TOP_TFFILTER_ADDR
#define BN1_WF_RMAC_TOP_TFFILTER_TF_TOTAL_NSS_MASK             0x000F0000                // TF_TOTAL_NSS[19..16]
#define BN1_WF_RMAC_TOP_TFFILTER_TF_TOTAL_NSS_SHFT             16
#define BN1_WF_RMAC_TOP_TFFILTER_TF_SPRT_NSS_ADDR              BN1_WF_RMAC_TOP_TFFILTER_ADDR
#define BN1_WF_RMAC_TOP_TFFILTER_TF_SPRT_NSS_MASK              0x0000FF00                // TF_SPRT_NSS[15..8]
#define BN1_WF_RMAC_TOP_TFFILTER_TF_SPRT_NSS_SHFT              8
#define BN1_WF_RMAC_TOP_TFFILTER_TF_SPRT_SSS_ADDR              BN1_WF_RMAC_TOP_TFFILTER_ADDR
#define BN1_WF_RMAC_TOP_TFFILTER_TF_SPRT_SSS_MASK              0x000000FF                // TF_SPRT_SSS[7..0]
#define BN1_WF_RMAC_TOP_TFFILTER_TF_SPRT_SSS_SHFT              0

/* =====================================================================================

  ---TFRXV (0x820f5000 + 0x114)---

    RXV_BSS_COLOR[5..0]          - (RW) Force RXV BSS_COLOR value
    RESERVED6[7..6]              - (RO) Reserved bits
    RXV_TXOP_DUR[14..8]          - (RW) Force RXV TXOP_DUR value
    RESERVED15[30..15]           - (RO) Reserved bits
    RXV_BYPASS_EN[31]            - (RW) Trigger RX supported NSS value

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_TFRXV_RXV_BYPASS_EN_ADDR               BN1_WF_RMAC_TOP_TFRXV_ADDR
#define BN1_WF_RMAC_TOP_TFRXV_RXV_BYPASS_EN_MASK               0x80000000                // RXV_BYPASS_EN[31]
#define BN1_WF_RMAC_TOP_TFRXV_RXV_BYPASS_EN_SHFT               31
#define BN1_WF_RMAC_TOP_TFRXV_RXV_TXOP_DUR_ADDR                BN1_WF_RMAC_TOP_TFRXV_ADDR
#define BN1_WF_RMAC_TOP_TFRXV_RXV_TXOP_DUR_MASK                0x00007F00                // RXV_TXOP_DUR[14..8]
#define BN1_WF_RMAC_TOP_TFRXV_RXV_TXOP_DUR_SHFT                8
#define BN1_WF_RMAC_TOP_TFRXV_RXV_BSS_COLOR_ADDR               BN1_WF_RMAC_TOP_TFRXV_ADDR
#define BN1_WF_RMAC_TOP_TFRXV_RXV_BSS_COLOR_MASK               0x0000003F                // RXV_BSS_COLOR[5..0]
#define BN1_WF_RMAC_TOP_TFRXV_RXV_BSS_COLOR_SHFT               0

/* =====================================================================================

  ---TF_USERTONE0 (0x820f5000 + 0x118)---

    USR_TONE_31_0[31..0]         - (RW) Trigger RX User Tone vlaue

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_TF_USERTONE0_USR_TONE_31_0_ADDR        BN1_WF_RMAC_TOP_TF_USERTONE0_ADDR
#define BN1_WF_RMAC_TOP_TF_USERTONE0_USR_TONE_31_0_MASK        0xFFFFFFFF                // USR_TONE_31_0[31..0]
#define BN1_WF_RMAC_TOP_TF_USERTONE0_USR_TONE_31_0_SHFT        0

/* =====================================================================================

  ---TF_USERTONE1 (0x820f5000 + 0x11c)---

    USR_TONE_47_32[15..0]        - (RW) Trigger RX User Tone vlaue
    RESERVED16[30..16]           - (RO) Reserved bits
    USR_TONE_EN[31]              - (RW) Trigger RX User Tone Enable

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_TF_USERTONE1_USR_TONE_EN_ADDR          BN1_WF_RMAC_TOP_TF_USERTONE1_ADDR
#define BN1_WF_RMAC_TOP_TF_USERTONE1_USR_TONE_EN_MASK          0x80000000                // USR_TONE_EN[31]
#define BN1_WF_RMAC_TOP_TF_USERTONE1_USR_TONE_EN_SHFT          31
#define BN1_WF_RMAC_TOP_TF_USERTONE1_USR_TONE_47_32_ADDR       BN1_WF_RMAC_TOP_TF_USERTONE1_ADDR
#define BN1_WF_RMAC_TOP_TF_USERTONE1_USR_TONE_47_32_MASK       0x0000FFFF                // USR_TONE_47_32[15..0]
#define BN1_WF_RMAC_TOP_TF_USERTONE1_USR_TONE_47_32_SHFT       0

/* =====================================================================================

  ---NAN0 (0x820f5000 + 0x130)---

    NAN_ADDR2_47_32[15..0]       - (RW) NAN addr2 address
                                     NAN Addr2 47-32
    RESERVED16[19..16]           - (RO) Reserved bits
    NAN_TSF_CHECK_A2[20]         - (RW) NAN beacon TSF check Addr2 or not
                                     0: TSF update will not check Addr2 match or not
                                     1: TSF update will check Addr2 match
    NAN_TSF_COMP_SW[21]          - (RW) Optional for SW mode sync TSF timer.
                                     0: Latch TSF compensation value to SW to read after check NAN beacon FCS ok and no more count.
                                     1: Latch TSF compensation value to SW to read after check NAN beacon FCS ok and continue to count until SW clear this bit. (13-bit max ~8ms delay)
    NAN_BCN_RX_ALL[22]           - (RW) To receive all NAN beacon (Addr3 31-0 equals to NAN addr)
                                     0: Bypass this setting
                                     1: Enable to receive all NAN beacon (NAN_ADDR3 match)
    NAN_TSF_DROP_BCN_SEL[23]     - (RW) Optional for drop NAN beacon or not when violate AMBTT/HOT_CNT.
                                     0: Receive this NAN Beacon if NAN beacon violate AMBTT/HOT_CNT rule
                                     1: Drop this NAN beacon if NAN beacon violate AMBTT/HOT_CNT rule
    NAN_BSSID_SEL[27..24]        - (RW) Should set one-hot to select which BSSID use as NAN network
                                     4'b0001: for BSSID0
                                     4'b0010: for BSSID1
                                     4'b0100: for BSSID2
                                     4'b1000: for BSSID3
    NAN_AMBTT_ORDER_SEL[28]      - (RW) optional to re-order nan_ambtt_content.
                                     0: nan_ambtt_content[31:0]
                                     1: (nan_ambtt_content[7:0], nan_ambtt_content[15:8], nan_ambtt_content[23:16], nan_ambtt_content[31:24])
    NAN_AMBTT_33BIT_SEL[29]      - (RW) NAN beacon AMBTT 33-bit selection
                                     0: use formula violate AMBTT if [local_TSF[31:0] > (NAN_AMBTT_THR+NAN_AMBTT_CONTENT)]
                                     1: use formula violate AMBTT if [local_TSF[32:0] > (NAN_AMBTT_THR+NAN_AMBTT_CONTENT)]
    NAN_FILTER_EN[30]            - (RW) Enable to do NAN beacon filter
                                     0: Disable to drop this NAN beacon if NAN beacon 17-byte content is the same as previous one
                                     1: Enable to drop this NAN beacon if NAN beacon 17-byte content is the same as previous one when NAN_ADDR3 match and NAN_BSSID_SEL match
    NAN_TSF_EN[31]               - (RW) Enable to update TSF of NAN Beacon. 
                                     If NAN beacon with  NAN_BSSID_SEL match and NAN_ADDR2 match and not violate AMBTT/HOP_CNT rule.
                                     0: Disable
                                     1: Enable

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_NAN0_NAN_TSF_EN_ADDR                   BN1_WF_RMAC_TOP_NAN0_ADDR
#define BN1_WF_RMAC_TOP_NAN0_NAN_TSF_EN_MASK                   0x80000000                // NAN_TSF_EN[31]
#define BN1_WF_RMAC_TOP_NAN0_NAN_TSF_EN_SHFT                   31
#define BN1_WF_RMAC_TOP_NAN0_NAN_FILTER_EN_ADDR                BN1_WF_RMAC_TOP_NAN0_ADDR
#define BN1_WF_RMAC_TOP_NAN0_NAN_FILTER_EN_MASK                0x40000000                // NAN_FILTER_EN[30]
#define BN1_WF_RMAC_TOP_NAN0_NAN_FILTER_EN_SHFT                30
#define BN1_WF_RMAC_TOP_NAN0_NAN_AMBTT_33BIT_SEL_ADDR          BN1_WF_RMAC_TOP_NAN0_ADDR
#define BN1_WF_RMAC_TOP_NAN0_NAN_AMBTT_33BIT_SEL_MASK          0x20000000                // NAN_AMBTT_33BIT_SEL[29]
#define BN1_WF_RMAC_TOP_NAN0_NAN_AMBTT_33BIT_SEL_SHFT          29
#define BN1_WF_RMAC_TOP_NAN0_NAN_AMBTT_ORDER_SEL_ADDR          BN1_WF_RMAC_TOP_NAN0_ADDR
#define BN1_WF_RMAC_TOP_NAN0_NAN_AMBTT_ORDER_SEL_MASK          0x10000000                // NAN_AMBTT_ORDER_SEL[28]
#define BN1_WF_RMAC_TOP_NAN0_NAN_AMBTT_ORDER_SEL_SHFT          28
#define BN1_WF_RMAC_TOP_NAN0_NAN_BSSID_SEL_ADDR                BN1_WF_RMAC_TOP_NAN0_ADDR
#define BN1_WF_RMAC_TOP_NAN0_NAN_BSSID_SEL_MASK                0x0F000000                // NAN_BSSID_SEL[27..24]
#define BN1_WF_RMAC_TOP_NAN0_NAN_BSSID_SEL_SHFT                24
#define BN1_WF_RMAC_TOP_NAN0_NAN_TSF_DROP_BCN_SEL_ADDR         BN1_WF_RMAC_TOP_NAN0_ADDR
#define BN1_WF_RMAC_TOP_NAN0_NAN_TSF_DROP_BCN_SEL_MASK         0x00800000                // NAN_TSF_DROP_BCN_SEL[23]
#define BN1_WF_RMAC_TOP_NAN0_NAN_TSF_DROP_BCN_SEL_SHFT         23
#define BN1_WF_RMAC_TOP_NAN0_NAN_BCN_RX_ALL_ADDR               BN1_WF_RMAC_TOP_NAN0_ADDR
#define BN1_WF_RMAC_TOP_NAN0_NAN_BCN_RX_ALL_MASK               0x00400000                // NAN_BCN_RX_ALL[22]
#define BN1_WF_RMAC_TOP_NAN0_NAN_BCN_RX_ALL_SHFT               22
#define BN1_WF_RMAC_TOP_NAN0_NAN_TSF_COMP_SW_ADDR              BN1_WF_RMAC_TOP_NAN0_ADDR
#define BN1_WF_RMAC_TOP_NAN0_NAN_TSF_COMP_SW_MASK              0x00200000                // NAN_TSF_COMP_SW[21]
#define BN1_WF_RMAC_TOP_NAN0_NAN_TSF_COMP_SW_SHFT              21
#define BN1_WF_RMAC_TOP_NAN0_NAN_TSF_CHECK_A2_ADDR             BN1_WF_RMAC_TOP_NAN0_ADDR
#define BN1_WF_RMAC_TOP_NAN0_NAN_TSF_CHECK_A2_MASK             0x00100000                // NAN_TSF_CHECK_A2[20]
#define BN1_WF_RMAC_TOP_NAN0_NAN_TSF_CHECK_A2_SHFT             20
#define BN1_WF_RMAC_TOP_NAN0_NAN_ADDR2_47_32_ADDR              BN1_WF_RMAC_TOP_NAN0_ADDR
#define BN1_WF_RMAC_TOP_NAN0_NAN_ADDR2_47_32_MASK              0x0000FFFF                // NAN_ADDR2_47_32[15..0]
#define BN1_WF_RMAC_TOP_NAN0_NAN_ADDR2_47_32_SHFT              0

/* =====================================================================================

  ---NAN1 (0x820f5000 + 0x134)---

    NAN_ADDR2_31_0[31..0]        - (RW) NAN addr2 address
                                     NAN Addr2 31-0

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_NAN1_NAN_ADDR2_31_0_ADDR               BN1_WF_RMAC_TOP_NAN1_ADDR
#define BN1_WF_RMAC_TOP_NAN1_NAN_ADDR2_31_0_MASK               0xFFFFFFFF                // NAN_ADDR2_31_0[31..0]
#define BN1_WF_RMAC_TOP_NAN1_NAN_ADDR2_31_0_SHFT               0

/* =====================================================================================

  ---NAN2 (0x820f5000 + 0x138)---

    NAN_AMBTT_THR[23..0]         - (RW) NAN AMBTT thteshold
                                     Setting NAN AMBTT threshold
    NAN_HOP_CNT_THR[31..24]      - (RW) NAN HOP count thershold
                                     Setting for NAN HOP count threshold

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_NAN2_NAN_HOP_CNT_THR_ADDR              BN1_WF_RMAC_TOP_NAN2_ADDR
#define BN1_WF_RMAC_TOP_NAN2_NAN_HOP_CNT_THR_MASK              0xFF000000                // NAN_HOP_CNT_THR[31..24]
#define BN1_WF_RMAC_TOP_NAN2_NAN_HOP_CNT_THR_SHFT              24
#define BN1_WF_RMAC_TOP_NAN2_NAN_AMBTT_THR_ADDR                BN1_WF_RMAC_TOP_NAN2_ADDR
#define BN1_WF_RMAC_TOP_NAN2_NAN_AMBTT_THR_MASK                0x00FFFFFF                // NAN_AMBTT_THR[23..0]
#define BN1_WF_RMAC_TOP_NAN2_NAN_AMBTT_THR_SHFT                0

/* =====================================================================================

  ---NAN3 (0x820f5000 + 0x13c)---

    NAN_TSF_COMPENSATION[13..0]  - (RO) NAN TSF for SW
                                     NAN TSF compensation for SW to read
    RESERVED14[31..14]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_NAN3_NAN_TSF_COMPENSATION_ADDR         BN1_WF_RMAC_TOP_NAN3_ADDR
#define BN1_WF_RMAC_TOP_NAN3_NAN_TSF_COMPENSATION_MASK         0x00003FFF                // NAN_TSF_COMPENSATION[13..0]
#define BN1_WF_RMAC_TOP_NAN3_NAN_TSF_COMPENSATION_SHFT         0

/* =====================================================================================

  ---NAN4 (0x820f5000 + 0x140)---

    NAN_OUI[31..0]               - (RW) NAN_OUI for SW to configurable
                                     NAN_OUI for SW to configurable
                                     This setting is used to compare to Beacon IE - OUI value only.

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_NAN4_NAN_OUI_ADDR                      BN1_WF_RMAC_TOP_NAN4_ADDR
#define BN1_WF_RMAC_TOP_NAN4_NAN_OUI_MASK                      0xFFFFFFFF                // NAN_OUI[31..0]
#define BN1_WF_RMAC_TOP_NAN4_NAN_OUI_SHFT                      0

/* =====================================================================================

  ---NAN5 (0x820f5000 + 0x144)---

    NAN_ADDR3_31_0[31..0]        - (RW) NAN addr3 address
                                     NAN Addr3 for SW to configurable

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_NAN5_NAN_ADDR3_31_0_ADDR               BN1_WF_RMAC_TOP_NAN5_ADDR
#define BN1_WF_RMAC_TOP_NAN5_NAN_ADDR3_31_0_MASK               0xFFFFFFFF                // NAN_ADDR3_31_0[31..0]
#define BN1_WF_RMAC_TOP_NAN5_NAN_ADDR3_31_0_SHFT               0

/* =====================================================================================

  ---NANBR0 (0x820f5000 + 0x148)---

    NAN_HASH_CONT_31_0[31..0]    - (RW) For Backup/Restore purpose.
                                     Read is NAN beacon 17-byte content 31-0 bit
                                     Write to restore CR

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_NANBR0_NAN_HASH_CONT_31_0_ADDR         BN1_WF_RMAC_TOP_NANBR0_ADDR
#define BN1_WF_RMAC_TOP_NANBR0_NAN_HASH_CONT_31_0_MASK         0xFFFFFFFF                // NAN_HASH_CONT_31_0[31..0]
#define BN1_WF_RMAC_TOP_NANBR0_NAN_HASH_CONT_31_0_SHFT         0

/* =====================================================================================

  ---NANBR1 (0x820f5000 + 0x14c)---

    NAN_HASH_CONT_63_32[31..0]   - (RW) For Backup/Restore purpose.
                                     Read is NAN beacon 17-byte content 63-32 bit
                                     Write to restore CR

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_NANBR1_NAN_HASH_CONT_63_32_ADDR        BN1_WF_RMAC_TOP_NANBR1_ADDR
#define BN1_WF_RMAC_TOP_NANBR1_NAN_HASH_CONT_63_32_MASK        0xFFFFFFFF                // NAN_HASH_CONT_63_32[31..0]
#define BN1_WF_RMAC_TOP_NANBR1_NAN_HASH_CONT_63_32_SHFT        0

/* =====================================================================================

  ---NANBR2 (0x820f5000 + 0x150)---

    NAN_HASH_CONT_95_64[31..0]   - (RW) For Backup/Restore purpose.
                                     Read is NAN beacon 17-byte content 95-64 bit
                                     Write to restore CR

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_NANBR2_NAN_HASH_CONT_95_64_ADDR        BN1_WF_RMAC_TOP_NANBR2_ADDR
#define BN1_WF_RMAC_TOP_NANBR2_NAN_HASH_CONT_95_64_MASK        0xFFFFFFFF                // NAN_HASH_CONT_95_64[31..0]
#define BN1_WF_RMAC_TOP_NANBR2_NAN_HASH_CONT_95_64_SHFT        0

/* =====================================================================================

  ---NANBR3 (0x820f5000 + 0x154)---

    NAN_HASH_CONT_127_96[31..0]  - (RW) For Backup/Restore purpose.
                                     Read is NAN beacon 17-byte content 127-96 bit
                                     Write to restore CR

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_NANBR3_NAN_HASH_CONT_127_96_ADDR       BN1_WF_RMAC_TOP_NANBR3_ADDR
#define BN1_WF_RMAC_TOP_NANBR3_NAN_HASH_CONT_127_96_MASK       0xFFFFFFFF                // NAN_HASH_CONT_127_96[31..0]
#define BN1_WF_RMAC_TOP_NANBR3_NAN_HASH_CONT_127_96_SHFT       0

/* =====================================================================================

  ---NANBR4 (0x820f5000 + 0x158)---

    NAN_HASH_CONT_135_128[7..0]  - (RW) For Backup/Restore purpose.
                                     Read is NAN beacon 17-byte content 135-128 bit
                                     Write to restore CR. This should be last write for NANBRx
    RESERVED8[31..8]             - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_NANBR4_NAN_HASH_CONT_135_128_ADDR      BN1_WF_RMAC_TOP_NANBR4_ADDR
#define BN1_WF_RMAC_TOP_NANBR4_NAN_HASH_CONT_135_128_MASK      0x000000FF                // NAN_HASH_CONT_135_128[7..0]
#define BN1_WF_RMAC_TOP_NANBR4_NAN_HASH_CONT_135_128_SHFT      0

/* =====================================================================================

  ---RXSR0 (0x820f5000 + 0x160)---

    SR_NONSRG_PD_THR[7..0]       - (RW) Spatial Reuse non-SRG PD threshold
                                     (RCPI-220)/2
    SR_SRG_PD_THR[15..8]         - (RW) Spatial Reuse SRG PD threshold
                                     (RCPI-220)/2
    SR_SRP_DATA_ONLY_EN[16]      - (RW) SR SRP only data frame valid enable
                                     1'b1: enable
                                     1'b0: disable
    SR_SRP_NEW_RXV_EN[17]        - (RW) SR SRP New RXV entry point enable
                                     1'b1: enable
                                     1'b0: disable
    SR_SRP_OLD_RXV_EN[18]        - (RW) SR SRP Old RXV entry point enable
                                     1'b1: enable
                                     1'b0: disable
    SR_CTS_AFTER_RTS[19]         - (RW) SR enable when RX CTS after RTS
                                     1'b1: enable
                                     1'b0: disable
    SR_SRG_BSSID_ORDER[20]       - (RW) SR SRG BSSID order select
                                     1'b1: {BSSID[4:0], BSSID[15]}
                                     1'b0: BSSID[44:39]
    SR_SMPDU_NO_TRIG_EN[21]      - (RW) SR single MPDU and OLD MAC entry not trigger mac2phy_rx
                                     1'b1: enable
                                     1'b0: disable
    SR_RCPI_SOURCE_SEL[23..22]   - (RW) RCPI source select
                                     0: from MAX RCPI ANT
                                     1: from RCPI ANT0
                                     2: from RCPI ANT1
                                     3: from RCPI ANT2
    SR_NONSRG_EN[24]             - (RW) Spatial Reuse non-SRGroup enable
    SR_SRG_EN[25]                - (RW) Spatial Reuse SRGroup enable
    SR_EN[26]                    - (RW) Spatial Reuse function enable
    SR_SINGLE_MDPU_RTSCTS_EN[27] - (RW) Spatial Reuse single MPDU RTS/CTS enable
    SR_HDR_DUR_EN[28]            - (RW) Spatial Reuse Check Header Durtion Enable
    SR_TXOP_DUR_EN[29]           - (RW) Spatial Reuse Check TXOP Durtion Enable
    SR_SRG_INTERPPDU_PRESV[30]   - (RW) Spatial Reuse SRG interPPDU info preserve
                                     1'b1: Preserve HW update
                                     1'b0: Enable HW upadte
    SR_NONSRG_INTERPPDU_PRESV[31] - (RW) Spatial Reuse NONSRG interPPDU info preserve
                                     1'b1: Preserve HW update
                                     1'b0: Enable HW upadte

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RXSR0_SR_NONSRG_INTERPPDU_PRESV_ADDR   BN1_WF_RMAC_TOP_RXSR0_ADDR
#define BN1_WF_RMAC_TOP_RXSR0_SR_NONSRG_INTERPPDU_PRESV_MASK   0x80000000                // SR_NONSRG_INTERPPDU_PRESV[31]
#define BN1_WF_RMAC_TOP_RXSR0_SR_NONSRG_INTERPPDU_PRESV_SHFT   31
#define BN1_WF_RMAC_TOP_RXSR0_SR_SRG_INTERPPDU_PRESV_ADDR      BN1_WF_RMAC_TOP_RXSR0_ADDR
#define BN1_WF_RMAC_TOP_RXSR0_SR_SRG_INTERPPDU_PRESV_MASK      0x40000000                // SR_SRG_INTERPPDU_PRESV[30]
#define BN1_WF_RMAC_TOP_RXSR0_SR_SRG_INTERPPDU_PRESV_SHFT      30
#define BN1_WF_RMAC_TOP_RXSR0_SR_TXOP_DUR_EN_ADDR              BN1_WF_RMAC_TOP_RXSR0_ADDR
#define BN1_WF_RMAC_TOP_RXSR0_SR_TXOP_DUR_EN_MASK              0x20000000                // SR_TXOP_DUR_EN[29]
#define BN1_WF_RMAC_TOP_RXSR0_SR_TXOP_DUR_EN_SHFT              29
#define BN1_WF_RMAC_TOP_RXSR0_SR_HDR_DUR_EN_ADDR               BN1_WF_RMAC_TOP_RXSR0_ADDR
#define BN1_WF_RMAC_TOP_RXSR0_SR_HDR_DUR_EN_MASK               0x10000000                // SR_HDR_DUR_EN[28]
#define BN1_WF_RMAC_TOP_RXSR0_SR_HDR_DUR_EN_SHFT               28
#define BN1_WF_RMAC_TOP_RXSR0_SR_SINGLE_MDPU_RTSCTS_EN_ADDR    BN1_WF_RMAC_TOP_RXSR0_ADDR
#define BN1_WF_RMAC_TOP_RXSR0_SR_SINGLE_MDPU_RTSCTS_EN_MASK    0x08000000                // SR_SINGLE_MDPU_RTSCTS_EN[27]
#define BN1_WF_RMAC_TOP_RXSR0_SR_SINGLE_MDPU_RTSCTS_EN_SHFT    27
#define BN1_WF_RMAC_TOP_RXSR0_SR_EN_ADDR                       BN1_WF_RMAC_TOP_RXSR0_ADDR
#define BN1_WF_RMAC_TOP_RXSR0_SR_EN_MASK                       0x04000000                // SR_EN[26]
#define BN1_WF_RMAC_TOP_RXSR0_SR_EN_SHFT                       26
#define BN1_WF_RMAC_TOP_RXSR0_SR_SRG_EN_ADDR                   BN1_WF_RMAC_TOP_RXSR0_ADDR
#define BN1_WF_RMAC_TOP_RXSR0_SR_SRG_EN_MASK                   0x02000000                // SR_SRG_EN[25]
#define BN1_WF_RMAC_TOP_RXSR0_SR_SRG_EN_SHFT                   25
#define BN1_WF_RMAC_TOP_RXSR0_SR_NONSRG_EN_ADDR                BN1_WF_RMAC_TOP_RXSR0_ADDR
#define BN1_WF_RMAC_TOP_RXSR0_SR_NONSRG_EN_MASK                0x01000000                // SR_NONSRG_EN[24]
#define BN1_WF_RMAC_TOP_RXSR0_SR_NONSRG_EN_SHFT                24
#define BN1_WF_RMAC_TOP_RXSR0_SR_RCPI_SOURCE_SEL_ADDR          BN1_WF_RMAC_TOP_RXSR0_ADDR
#define BN1_WF_RMAC_TOP_RXSR0_SR_RCPI_SOURCE_SEL_MASK          0x00C00000                // SR_RCPI_SOURCE_SEL[23..22]
#define BN1_WF_RMAC_TOP_RXSR0_SR_RCPI_SOURCE_SEL_SHFT          22
#define BN1_WF_RMAC_TOP_RXSR0_SR_SMPDU_NO_TRIG_EN_ADDR         BN1_WF_RMAC_TOP_RXSR0_ADDR
#define BN1_WF_RMAC_TOP_RXSR0_SR_SMPDU_NO_TRIG_EN_MASK         0x00200000                // SR_SMPDU_NO_TRIG_EN[21]
#define BN1_WF_RMAC_TOP_RXSR0_SR_SMPDU_NO_TRIG_EN_SHFT         21
#define BN1_WF_RMAC_TOP_RXSR0_SR_SRG_BSSID_ORDER_ADDR          BN1_WF_RMAC_TOP_RXSR0_ADDR
#define BN1_WF_RMAC_TOP_RXSR0_SR_SRG_BSSID_ORDER_MASK          0x00100000                // SR_SRG_BSSID_ORDER[20]
#define BN1_WF_RMAC_TOP_RXSR0_SR_SRG_BSSID_ORDER_SHFT          20
#define BN1_WF_RMAC_TOP_RXSR0_SR_CTS_AFTER_RTS_ADDR            BN1_WF_RMAC_TOP_RXSR0_ADDR
#define BN1_WF_RMAC_TOP_RXSR0_SR_CTS_AFTER_RTS_MASK            0x00080000                // SR_CTS_AFTER_RTS[19]
#define BN1_WF_RMAC_TOP_RXSR0_SR_CTS_AFTER_RTS_SHFT            19
#define BN1_WF_RMAC_TOP_RXSR0_SR_SRP_OLD_RXV_EN_ADDR           BN1_WF_RMAC_TOP_RXSR0_ADDR
#define BN1_WF_RMAC_TOP_RXSR0_SR_SRP_OLD_RXV_EN_MASK           0x00040000                // SR_SRP_OLD_RXV_EN[18]
#define BN1_WF_RMAC_TOP_RXSR0_SR_SRP_OLD_RXV_EN_SHFT           18
#define BN1_WF_RMAC_TOP_RXSR0_SR_SRP_NEW_RXV_EN_ADDR           BN1_WF_RMAC_TOP_RXSR0_ADDR
#define BN1_WF_RMAC_TOP_RXSR0_SR_SRP_NEW_RXV_EN_MASK           0x00020000                // SR_SRP_NEW_RXV_EN[17]
#define BN1_WF_RMAC_TOP_RXSR0_SR_SRP_NEW_RXV_EN_SHFT           17
#define BN1_WF_RMAC_TOP_RXSR0_SR_SRP_DATA_ONLY_EN_ADDR         BN1_WF_RMAC_TOP_RXSR0_ADDR
#define BN1_WF_RMAC_TOP_RXSR0_SR_SRP_DATA_ONLY_EN_MASK         0x00010000                // SR_SRP_DATA_ONLY_EN[16]
#define BN1_WF_RMAC_TOP_RXSR0_SR_SRP_DATA_ONLY_EN_SHFT         16
#define BN1_WF_RMAC_TOP_RXSR0_SR_SRG_PD_THR_ADDR               BN1_WF_RMAC_TOP_RXSR0_ADDR
#define BN1_WF_RMAC_TOP_RXSR0_SR_SRG_PD_THR_MASK               0x0000FF00                // SR_SRG_PD_THR[15..8]
#define BN1_WF_RMAC_TOP_RXSR0_SR_SRG_PD_THR_SHFT               8
#define BN1_WF_RMAC_TOP_RXSR0_SR_NONSRG_PD_THR_ADDR            BN1_WF_RMAC_TOP_RXSR0_ADDR
#define BN1_WF_RMAC_TOP_RXSR0_SR_NONSRG_PD_THR_MASK            0x000000FF                // SR_NONSRG_PD_THR[7..0]
#define BN1_WF_RMAC_TOP_RXSR0_SR_NONSRG_PD_THR_SHFT            0

/* =====================================================================================

  ---RXSR1 (0x820f5000 + 0x164)---

    PBSSID_BITMAP_31_0[31..0]    - (RW) Partial BSSID bitmap

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RXSR1_PBSSID_BITMAP_31_0_ADDR          BN1_WF_RMAC_TOP_RXSR1_ADDR
#define BN1_WF_RMAC_TOP_RXSR1_PBSSID_BITMAP_31_0_MASK          0xFFFFFFFF                // PBSSID_BITMAP_31_0[31..0]
#define BN1_WF_RMAC_TOP_RXSR1_PBSSID_BITMAP_31_0_SHFT          0

/* =====================================================================================

  ---RXSR2 (0x820f5000 + 0x168)---

    PBSSID_BITMAP_63_32[31..0]   - (RW) Partial BSSID bitmap

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RXSR2_PBSSID_BITMAP_63_32_ADDR         BN1_WF_RMAC_TOP_RXSR2_ADDR
#define BN1_WF_RMAC_TOP_RXSR2_PBSSID_BITMAP_63_32_MASK         0xFFFFFFFF                // PBSSID_BITMAP_63_32[31..0]
#define BN1_WF_RMAC_TOP_RXSR2_PBSSID_BITMAP_63_32_SHFT         0

/* =====================================================================================

  ---RXSR3 (0x820f5000 + 0x16C)---

    PCOLOR_BITMAP_31_0[31..0]    - (RW) Partial BSS Color bitmap

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RXSR3_PCOLOR_BITMAP_31_0_ADDR          BN1_WF_RMAC_TOP_RXSR3_ADDR
#define BN1_WF_RMAC_TOP_RXSR3_PCOLOR_BITMAP_31_0_MASK          0xFFFFFFFF                // PCOLOR_BITMAP_31_0[31..0]
#define BN1_WF_RMAC_TOP_RXSR3_PCOLOR_BITMAP_31_0_SHFT          0

/* =====================================================================================

  ---RXSR4 (0x820f5000 + 0x170)---

    PCOLOR_BITMAP_63_32[31..0]   - (RW) Partial BSS Color bitmap

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RXSR4_PCOLOR_BITMAP_63_32_ADDR         BN1_WF_RMAC_TOP_RXSR4_ADDR
#define BN1_WF_RMAC_TOP_RXSR4_PCOLOR_BITMAP_63_32_MASK         0xFFFFFFFF                // PCOLOR_BITMAP_63_32[31..0]
#define BN1_WF_RMAC_TOP_RXSR4_PCOLOR_BITMAP_63_32_SHFT         0

/* =====================================================================================

  ---RXSR5 (0x820f5000 + 0x174)---

    SR_PERIOD_OFST[7..0]         - (RW) Spatial Reuse period offset
                                     bit 7: represent 0 for add / 1 for sub
                                     bit 0~6: represent 0~127us
    SR_PERIOD_LIMIT[15..8]       - (RW) SR_PERIOD_LIMIT 8bits which represent 0~255us
    SR_PERIOD_LIMIT_EN[16]       - (RW) SR_PERIOD_LIMIT_EN 1bit to control whether we use this criteria to limit SR oppurtunity  If SR_PERIOD_LIMIT_EN == 1 and SR_PERIOD_LIMIT > SR_Period, RMAC will not execute SR to this PPDU
    SR_RXV_ENTRY[17]             - (RW) If SR_RXV_ENTRY == 0, never enter OBSS-PD SR flow in RXV determination point                RXV entry point.      
                                     If SR_RXV_ENTRY == 1, follow original SR rule.
    SR_RXRPT_EN[18]              - (RW) SR_RXRPT_EN 1bit (not reference Rxreport common setting)   
                                     If SR_RXRPT_EN == 0, not send RXRPT with SRbit == 1 when executing OBSS-PD SR.      
                                     If SR_RXRPT_EN == 1, send RXRPT with SRbit == 1 when executing OBSS-PD SR.
    RESERVED19[19]               - (RO) Reserved bits
    SR_RCPI_LG_RATE_EN[20]       - (RW) SR Check with RPCI LG Rate
                                     1'b0: Disable
                                     1'b1: Enable
    SR_RCPI_HT_RATE_EN[21]       - (RW) SR Check with RPCI HT Rate
                                     1'b0: Disable
                                     1'b1: Enable
    SR_RCPI_VHT_RATE_EN[22]      - (RW) SR_Check with RPCI VHT Rate
                                     1'b0: Disable
                                     1'b1: Enable
    SR_RCPI_HE_RATE_EN[23]       - (RW) SR Check with RPCI HE Rate
                                     1'b0: Disable
                                     1'b1: Enable
    SR_RXV_RCPI_RATE_EN[24]      - (RW) SR Check RPCI HE Rate at RXV stage
                                     1'b0: Disable
                                     1'b1: Enable
    SR_MAC_RCPI_RATE_EN[25]      - (RW) SR Check RPCI HE Rate at MAC stage
                                     1'b0: Disable
                                     1'b1: Enable
    SR_RCPI_CCK_RATE_EN[26]      - (RW) SR Check with RPCI CCK Rate
                                     1'b0: Disable
                                     1'b1: Enable
    SR_RCPI_SEL[27]              - (RW) SR RCPI rate source select
                                     1'b0: for ANT RCPI
                                     1'b1: for Noise var
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RXSR5_SR_RCPI_SEL_ADDR                 BN1_WF_RMAC_TOP_RXSR5_ADDR
#define BN1_WF_RMAC_TOP_RXSR5_SR_RCPI_SEL_MASK                 0x08000000                // SR_RCPI_SEL[27]
#define BN1_WF_RMAC_TOP_RXSR5_SR_RCPI_SEL_SHFT                 27
#define BN1_WF_RMAC_TOP_RXSR5_SR_RCPI_CCK_RATE_EN_ADDR         BN1_WF_RMAC_TOP_RXSR5_ADDR
#define BN1_WF_RMAC_TOP_RXSR5_SR_RCPI_CCK_RATE_EN_MASK         0x04000000                // SR_RCPI_CCK_RATE_EN[26]
#define BN1_WF_RMAC_TOP_RXSR5_SR_RCPI_CCK_RATE_EN_SHFT         26
#define BN1_WF_RMAC_TOP_RXSR5_SR_MAC_RCPI_RATE_EN_ADDR         BN1_WF_RMAC_TOP_RXSR5_ADDR
#define BN1_WF_RMAC_TOP_RXSR5_SR_MAC_RCPI_RATE_EN_MASK         0x02000000                // SR_MAC_RCPI_RATE_EN[25]
#define BN1_WF_RMAC_TOP_RXSR5_SR_MAC_RCPI_RATE_EN_SHFT         25
#define BN1_WF_RMAC_TOP_RXSR5_SR_RXV_RCPI_RATE_EN_ADDR         BN1_WF_RMAC_TOP_RXSR5_ADDR
#define BN1_WF_RMAC_TOP_RXSR5_SR_RXV_RCPI_RATE_EN_MASK         0x01000000                // SR_RXV_RCPI_RATE_EN[24]
#define BN1_WF_RMAC_TOP_RXSR5_SR_RXV_RCPI_RATE_EN_SHFT         24
#define BN1_WF_RMAC_TOP_RXSR5_SR_RCPI_HE_RATE_EN_ADDR          BN1_WF_RMAC_TOP_RXSR5_ADDR
#define BN1_WF_RMAC_TOP_RXSR5_SR_RCPI_HE_RATE_EN_MASK          0x00800000                // SR_RCPI_HE_RATE_EN[23]
#define BN1_WF_RMAC_TOP_RXSR5_SR_RCPI_HE_RATE_EN_SHFT          23
#define BN1_WF_RMAC_TOP_RXSR5_SR_RCPI_VHT_RATE_EN_ADDR         BN1_WF_RMAC_TOP_RXSR5_ADDR
#define BN1_WF_RMAC_TOP_RXSR5_SR_RCPI_VHT_RATE_EN_MASK         0x00400000                // SR_RCPI_VHT_RATE_EN[22]
#define BN1_WF_RMAC_TOP_RXSR5_SR_RCPI_VHT_RATE_EN_SHFT         22
#define BN1_WF_RMAC_TOP_RXSR5_SR_RCPI_HT_RATE_EN_ADDR          BN1_WF_RMAC_TOP_RXSR5_ADDR
#define BN1_WF_RMAC_TOP_RXSR5_SR_RCPI_HT_RATE_EN_MASK          0x00200000                // SR_RCPI_HT_RATE_EN[21]
#define BN1_WF_RMAC_TOP_RXSR5_SR_RCPI_HT_RATE_EN_SHFT          21
#define BN1_WF_RMAC_TOP_RXSR5_SR_RCPI_LG_RATE_EN_ADDR          BN1_WF_RMAC_TOP_RXSR5_ADDR
#define BN1_WF_RMAC_TOP_RXSR5_SR_RCPI_LG_RATE_EN_MASK          0x00100000                // SR_RCPI_LG_RATE_EN[20]
#define BN1_WF_RMAC_TOP_RXSR5_SR_RCPI_LG_RATE_EN_SHFT          20
#define BN1_WF_RMAC_TOP_RXSR5_SR_RXRPT_EN_ADDR                 BN1_WF_RMAC_TOP_RXSR5_ADDR
#define BN1_WF_RMAC_TOP_RXSR5_SR_RXRPT_EN_MASK                 0x00040000                // SR_RXRPT_EN[18]
#define BN1_WF_RMAC_TOP_RXSR5_SR_RXRPT_EN_SHFT                 18
#define BN1_WF_RMAC_TOP_RXSR5_SR_RXV_ENTRY_ADDR                BN1_WF_RMAC_TOP_RXSR5_ADDR
#define BN1_WF_RMAC_TOP_RXSR5_SR_RXV_ENTRY_MASK                0x00020000                // SR_RXV_ENTRY[17]
#define BN1_WF_RMAC_TOP_RXSR5_SR_RXV_ENTRY_SHFT                17
#define BN1_WF_RMAC_TOP_RXSR5_SR_PERIOD_LIMIT_EN_ADDR          BN1_WF_RMAC_TOP_RXSR5_ADDR
#define BN1_WF_RMAC_TOP_RXSR5_SR_PERIOD_LIMIT_EN_MASK          0x00010000                // SR_PERIOD_LIMIT_EN[16]
#define BN1_WF_RMAC_TOP_RXSR5_SR_PERIOD_LIMIT_EN_SHFT          16
#define BN1_WF_RMAC_TOP_RXSR5_SR_PERIOD_LIMIT_ADDR             BN1_WF_RMAC_TOP_RXSR5_ADDR
#define BN1_WF_RMAC_TOP_RXSR5_SR_PERIOD_LIMIT_MASK             0x0000FF00                // SR_PERIOD_LIMIT[15..8]
#define BN1_WF_RMAC_TOP_RXSR5_SR_PERIOD_LIMIT_SHFT             8
#define BN1_WF_RMAC_TOP_RXSR5_SR_PERIOD_OFST_ADDR              BN1_WF_RMAC_TOP_RXSR5_ADDR
#define BN1_WF_RMAC_TOP_RXSR5_SR_PERIOD_OFST_MASK              0x000000FF                // SR_PERIOD_OFST[7..0]
#define BN1_WF_RMAC_TOP_RXSR5_SR_PERIOD_OFST_SHFT              0

/* =====================================================================================

  ---SRG_VLDCNT (0x820f5000 + 0x198)---

    NONSRG_VLD_CNT[15..0]        - (RC) NONSRG condition check valid counter
    SRG_VLD_CNT[31..16]          - (RC) SRG condition check valid counter

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_SRG_VLDCNT_SRG_VLD_CNT_ADDR            BN1_WF_RMAC_TOP_SRG_VLDCNT_ADDR
#define BN1_WF_RMAC_TOP_SRG_VLDCNT_SRG_VLD_CNT_MASK            0xFFFF0000                // SRG_VLD_CNT[31..16]
#define BN1_WF_RMAC_TOP_SRG_VLDCNT_SRG_VLD_CNT_SHFT            16
#define BN1_WF_RMAC_TOP_SRG_VLDCNT_NONSRG_VLD_CNT_ADDR         BN1_WF_RMAC_TOP_SRG_VLDCNT_ADDR
#define BN1_WF_RMAC_TOP_SRG_VLDCNT_NONSRG_VLD_CNT_MASK         0x0000FFFF                // NONSRG_VLD_CNT[15..0]
#define BN1_WF_RMAC_TOP_SRG_VLDCNT_NONSRG_VLD_CNT_SHFT         0

/* =====================================================================================

  ---SR_PPDUCNT (0x820f5000 + 0x19C)---

    INTERBSS_PPDUCNT[15..0]      - (RC) Inter PPDU  counter
    INTRABSS_PPDUCNT[31..16]     - (RC) Intra PPDU  counter

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_SR_PPDUCNT_INTRABSS_PPDUCNT_ADDR       BN1_WF_RMAC_TOP_SR_PPDUCNT_ADDR
#define BN1_WF_RMAC_TOP_SR_PPDUCNT_INTRABSS_PPDUCNT_MASK       0xFFFF0000                // INTRABSS_PPDUCNT[31..16]
#define BN1_WF_RMAC_TOP_SR_PPDUCNT_INTRABSS_PPDUCNT_SHFT       16
#define BN1_WF_RMAC_TOP_SR_PPDUCNT_INTERBSS_PPDUCNT_ADDR       BN1_WF_RMAC_TOP_SR_PPDUCNT_ADDR
#define BN1_WF_RMAC_TOP_SR_PPDUCNT_INTERBSS_PPDUCNT_MASK       0x0000FFFF                // INTERBSS_PPDUCNT[15..0]
#define BN1_WF_RMAC_TOP_SR_PPDUCNT_INTERBSS_PPDUCNT_SHFT       0

/* =====================================================================================

  ---SR_PPDUVLDCNT (0x820f5000 + 0x1A0)---

    NONSRG_PPDUVLDCNT[15..0]     - (RC) NONSRG PPDU valid but PD invlid counter
    SRG_PPDUVLDCNT[31..16]       - (RC) SRG PPDU valid but PD invlid counter

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_SR_PPDUVLDCNT_SRG_PPDUVLDCNT_ADDR      BN1_WF_RMAC_TOP_SR_PPDUVLDCNT_ADDR
#define BN1_WF_RMAC_TOP_SR_PPDUVLDCNT_SRG_PPDUVLDCNT_MASK      0xFFFF0000                // SRG_PPDUVLDCNT[31..16]
#define BN1_WF_RMAC_TOP_SR_PPDUVLDCNT_SRG_PPDUVLDCNT_SHFT      16
#define BN1_WF_RMAC_TOP_SR_PPDUVLDCNT_NONSRG_PPDUVLDCNT_ADDR   BN1_WF_RMAC_TOP_SR_PPDUVLDCNT_ADDR
#define BN1_WF_RMAC_TOP_SR_PPDUVLDCNT_NONSRG_PPDUVLDCNT_MASK   0x0000FFFF                // NONSRG_PPDUVLDCNT[15..0]
#define BN1_WF_RMAC_TOP_SR_PPDUVLDCNT_NONSRG_PPDUVLDCNT_SHFT   0

/* =====================================================================================

  ---SRT_CTRL0 (0x820f5000 + 0x1A4)---

    SRT_IN_RCPI_TH[7..0]         - (RW) SR Table Input RCPI TH vlaue
    SRT_OUT_RCPI_TH[15..8]       - (RW) SR Table Output RCPI TH vlaue
    SRT_USED_CNT_TH[30..16]      - (RW) SR Table Peer Used Count TH
    RESERVED31[31]               - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_SRT_CTRL0_SRT_USED_CNT_TH_ADDR         BN1_WF_RMAC_TOP_SRT_CTRL0_ADDR
#define BN1_WF_RMAC_TOP_SRT_CTRL0_SRT_USED_CNT_TH_MASK         0x7FFF0000                // SRT_USED_CNT_TH[30..16]
#define BN1_WF_RMAC_TOP_SRT_CTRL0_SRT_USED_CNT_TH_SHFT         16
#define BN1_WF_RMAC_TOP_SRT_CTRL0_SRT_OUT_RCPI_TH_ADDR         BN1_WF_RMAC_TOP_SRT_CTRL0_ADDR
#define BN1_WF_RMAC_TOP_SRT_CTRL0_SRT_OUT_RCPI_TH_MASK         0x0000FF00                // SRT_OUT_RCPI_TH[15..8]
#define BN1_WF_RMAC_TOP_SRT_CTRL0_SRT_OUT_RCPI_TH_SHFT         8
#define BN1_WF_RMAC_TOP_SRT_CTRL0_SRT_IN_RCPI_TH_ADDR          BN1_WF_RMAC_TOP_SRT_CTRL0_ADDR
#define BN1_WF_RMAC_TOP_SRT_CTRL0_SRT_IN_RCPI_TH_MASK          0x000000FF                // SRT_IN_RCPI_TH[7..0]
#define BN1_WF_RMAC_TOP_SRT_CTRL0_SRT_IN_RCPI_TH_SHFT          0

/* =====================================================================================

  ---SRT_CTRL1 (0x820f5000 + 0x1A8)---

    SRT_PEER_IDX[3..0]           - (RW) SR Table Peer Entry Read/Write Index
    RESERVED4[6..4]              - (RO) Reserved bits
    SRT_PEER_WR[7]               - (WO) SR Table Peer Entry Write trigger, Write 1 HW auto clear
    SRT_ENABLE[8]                - (RW) SR Table Enable
    SRT_SRP_ENABLE[9]            - (RW) SR Table to SR Period mask enable
    SRT_RESET[10]                - (WO) SR Table Reset trigger, Write 1 HW auto clear
    SRT_ADDR_ORDER[11]           - (RW) SR Table Address order 
                                     1'b1: MSB to LSB
                                     1'b0: LSB to MSB
    SRT_BYPASS_CTS_ACK[12]       - (RW) SR table search bypass CTS and ACK frame
    RESERVED13[15..13]           - (RO) Reserved bits
    SRT_SW_PROTECT[31..16]       - (RW) SR table entry SW protect bit
                                     1'b0: no protect, HW will update entry
                                     1'b1: SW protect, HW will not change entry content

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_SRT_CTRL1_SRT_SW_PROTECT_ADDR          BN1_WF_RMAC_TOP_SRT_CTRL1_ADDR
#define BN1_WF_RMAC_TOP_SRT_CTRL1_SRT_SW_PROTECT_MASK          0xFFFF0000                // SRT_SW_PROTECT[31..16]
#define BN1_WF_RMAC_TOP_SRT_CTRL1_SRT_SW_PROTECT_SHFT          16
#define BN1_WF_RMAC_TOP_SRT_CTRL1_SRT_BYPASS_CTS_ACK_ADDR      BN1_WF_RMAC_TOP_SRT_CTRL1_ADDR
#define BN1_WF_RMAC_TOP_SRT_CTRL1_SRT_BYPASS_CTS_ACK_MASK      0x00001000                // SRT_BYPASS_CTS_ACK[12]
#define BN1_WF_RMAC_TOP_SRT_CTRL1_SRT_BYPASS_CTS_ACK_SHFT      12
#define BN1_WF_RMAC_TOP_SRT_CTRL1_SRT_ADDR_ORDER_ADDR          BN1_WF_RMAC_TOP_SRT_CTRL1_ADDR
#define BN1_WF_RMAC_TOP_SRT_CTRL1_SRT_ADDR_ORDER_MASK          0x00000800                // SRT_ADDR_ORDER[11]
#define BN1_WF_RMAC_TOP_SRT_CTRL1_SRT_ADDR_ORDER_SHFT          11
#define BN1_WF_RMAC_TOP_SRT_CTRL1_SRT_RESET_ADDR               BN1_WF_RMAC_TOP_SRT_CTRL1_ADDR
#define BN1_WF_RMAC_TOP_SRT_CTRL1_SRT_RESET_MASK               0x00000400                // SRT_RESET[10]
#define BN1_WF_RMAC_TOP_SRT_CTRL1_SRT_RESET_SHFT               10
#define BN1_WF_RMAC_TOP_SRT_CTRL1_SRT_SRP_ENABLE_ADDR          BN1_WF_RMAC_TOP_SRT_CTRL1_ADDR
#define BN1_WF_RMAC_TOP_SRT_CTRL1_SRT_SRP_ENABLE_MASK          0x00000200                // SRT_SRP_ENABLE[9]
#define BN1_WF_RMAC_TOP_SRT_CTRL1_SRT_SRP_ENABLE_SHFT          9
#define BN1_WF_RMAC_TOP_SRT_CTRL1_SRT_ENABLE_ADDR              BN1_WF_RMAC_TOP_SRT_CTRL1_ADDR
#define BN1_WF_RMAC_TOP_SRT_CTRL1_SRT_ENABLE_MASK              0x00000100                // SRT_ENABLE[8]
#define BN1_WF_RMAC_TOP_SRT_CTRL1_SRT_ENABLE_SHFT              8
#define BN1_WF_RMAC_TOP_SRT_CTRL1_SRT_PEER_WR_ADDR             BN1_WF_RMAC_TOP_SRT_CTRL1_ADDR
#define BN1_WF_RMAC_TOP_SRT_CTRL1_SRT_PEER_WR_MASK             0x00000080                // SRT_PEER_WR[7]
#define BN1_WF_RMAC_TOP_SRT_CTRL1_SRT_PEER_WR_SHFT             7
#define BN1_WF_RMAC_TOP_SRT_CTRL1_SRT_PEER_IDX_ADDR            BN1_WF_RMAC_TOP_SRT_CTRL1_ADDR
#define BN1_WF_RMAC_TOP_SRT_CTRL1_SRT_PEER_IDX_MASK            0x0000000F                // SRT_PEER_IDX[3..0]
#define BN1_WF_RMAC_TOP_SRT_CTRL1_SRT_PEER_IDX_SHFT            0

/* =====================================================================================

  ---SRT_RCNT (0x820f5000 + 0x1AC)---

    SRT_RCNT[15..0]              - (RO) SR Table Peer Replace counter, and read HW auto clear
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_SRT_RCNT_SRT_RCNT_ADDR                 BN1_WF_RMAC_TOP_SRT_RCNT_ADDR
#define BN1_WF_RMAC_TOP_SRT_RCNT_SRT_RCNT_MASK                 0x0000FFFF                // SRT_RCNT[15..0]
#define BN1_WF_RMAC_TOP_SRT_RCNT_SRT_RCNT_SHFT                 0

/* =====================================================================================

  ---SRT_PEER_DATA (0x820f5000 + 0x1B0)---

    SRT_PEER_DATA[31..0]         - (RW) SR Table Peer Read/Write Data by SRT_PEER_IDX select which peer entry

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_SRT_PEER_DATA_SRT_PEER_DATA_ADDR       BN1_WF_RMAC_TOP_SRT_PEER_DATA_ADDR
#define BN1_WF_RMAC_TOP_SRT_PEER_DATA_SRT_PEER_DATA_MASK       0xFFFFFFFF                // SRT_PEER_DATA[31..0]
#define BN1_WF_RMAC_TOP_SRT_PEER_DATA_SRT_PEER_DATA_SHFT       0

/* =====================================================================================

  ---SR_RCPI_RATE0 (0x820f5000 + 0x1B4)---

    SR_RCPI_MCS0[7..0]           - (RW) SR RCPI Mapping MCS rate value
    SR_RCPI_MCS1[15..8]          - (RW) SR RCPI Mapping MCS rate value
    SR_RCPI_MCS2[23..16]         - (RW) SR RCPI Mapping MCS rate value
    SR_RCPI_MCS3[31..24]         - (RW) SR RCPI Mapping MCS rate value

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE0_SR_RCPI_MCS3_ADDR        BN1_WF_RMAC_TOP_SR_RCPI_RATE0_ADDR
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE0_SR_RCPI_MCS3_MASK        0xFF000000                // SR_RCPI_MCS3[31..24]
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE0_SR_RCPI_MCS3_SHFT        24
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE0_SR_RCPI_MCS2_ADDR        BN1_WF_RMAC_TOP_SR_RCPI_RATE0_ADDR
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE0_SR_RCPI_MCS2_MASK        0x00FF0000                // SR_RCPI_MCS2[23..16]
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE0_SR_RCPI_MCS2_SHFT        16
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE0_SR_RCPI_MCS1_ADDR        BN1_WF_RMAC_TOP_SR_RCPI_RATE0_ADDR
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE0_SR_RCPI_MCS1_MASK        0x0000FF00                // SR_RCPI_MCS1[15..8]
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE0_SR_RCPI_MCS1_SHFT        8
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE0_SR_RCPI_MCS0_ADDR        BN1_WF_RMAC_TOP_SR_RCPI_RATE0_ADDR
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE0_SR_RCPI_MCS0_MASK        0x000000FF                // SR_RCPI_MCS0[7..0]
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE0_SR_RCPI_MCS0_SHFT        0

/* =====================================================================================

  ---SR_RCPI_RATE1 (0x820f5000 + 0x1B8)---

    SR_RCPI_MCS4[7..0]           - (RW) SR RCPI Mapping MCS rate value
    SR_RCPI_MCS5[15..8]          - (RW) SR RCPI Mapping MCS rate value
    SR_RCPI_MCS6[23..16]         - (RW) SR RCPI Mapping MCS rate value
    SR_RCPI_MCS7[31..24]         - (RW) SR RCPI Mapping MCS rate value

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE1_SR_RCPI_MCS7_ADDR        BN1_WF_RMAC_TOP_SR_RCPI_RATE1_ADDR
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE1_SR_RCPI_MCS7_MASK        0xFF000000                // SR_RCPI_MCS7[31..24]
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE1_SR_RCPI_MCS7_SHFT        24
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE1_SR_RCPI_MCS6_ADDR        BN1_WF_RMAC_TOP_SR_RCPI_RATE1_ADDR
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE1_SR_RCPI_MCS6_MASK        0x00FF0000                // SR_RCPI_MCS6[23..16]
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE1_SR_RCPI_MCS6_SHFT        16
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE1_SR_RCPI_MCS5_ADDR        BN1_WF_RMAC_TOP_SR_RCPI_RATE1_ADDR
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE1_SR_RCPI_MCS5_MASK        0x0000FF00                // SR_RCPI_MCS5[15..8]
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE1_SR_RCPI_MCS5_SHFT        8
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE1_SR_RCPI_MCS4_ADDR        BN1_WF_RMAC_TOP_SR_RCPI_RATE1_ADDR
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE1_SR_RCPI_MCS4_MASK        0x000000FF                // SR_RCPI_MCS4[7..0]
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE1_SR_RCPI_MCS4_SHFT        0

/* =====================================================================================

  ---SR_RCPI_RATE2 (0x820f5000 + 0x1BC)---

    SR_RCPI_MCS8[7..0]           - (RW) SR RCPI Mapping MCS rate value
    SR_RCPI_MCS9[15..8]          - (RW) SR RCPI Mapping MCS rate value
    SR_RCPI_MCS10[23..16]        - (RW) SR RCPI Mapping MCS rate value
    SR_RCPI_MCS11[31..24]        - (RW) SR RCPI Mapping MCS rate value

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE2_SR_RCPI_MCS11_ADDR       BN1_WF_RMAC_TOP_SR_RCPI_RATE2_ADDR
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE2_SR_RCPI_MCS11_MASK       0xFF000000                // SR_RCPI_MCS11[31..24]
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE2_SR_RCPI_MCS11_SHFT       24
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE2_SR_RCPI_MCS10_ADDR       BN1_WF_RMAC_TOP_SR_RCPI_RATE2_ADDR
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE2_SR_RCPI_MCS10_MASK       0x00FF0000                // SR_RCPI_MCS10[23..16]
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE2_SR_RCPI_MCS10_SHFT       16
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE2_SR_RCPI_MCS9_ADDR        BN1_WF_RMAC_TOP_SR_RCPI_RATE2_ADDR
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE2_SR_RCPI_MCS9_MASK        0x0000FF00                // SR_RCPI_MCS9[15..8]
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE2_SR_RCPI_MCS9_SHFT        8
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE2_SR_RCPI_MCS8_ADDR        BN1_WF_RMAC_TOP_SR_RCPI_RATE2_ADDR
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE2_SR_RCPI_MCS8_MASK        0x000000FF                // SR_RCPI_MCS8[7..0]
#define BN1_WF_RMAC_TOP_SR_RCPI_RATE2_SR_RCPI_MCS8_SHFT        0

/* =====================================================================================

  ---SR_RCPI_OFST0 (0x820f5000 + 0x1C0)---

    RXBW_OFST[11..0]             - (RW) SR RCPI offset of RXBW
    STBC_OFST[15..12]            - (RW) SR RCPI offset of STBC
    ANTNUM_OFST[27..16]          - (RW) SR RCPI offset of Antenna number
    LDPC_OFST[31..28]            - (RW) SR RCPI offset of LDPC

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_SR_RCPI_OFST0_LDPC_OFST_ADDR           BN1_WF_RMAC_TOP_SR_RCPI_OFST0_ADDR
#define BN1_WF_RMAC_TOP_SR_RCPI_OFST0_LDPC_OFST_MASK           0xF0000000                // LDPC_OFST[31..28]
#define BN1_WF_RMAC_TOP_SR_RCPI_OFST0_LDPC_OFST_SHFT           28
#define BN1_WF_RMAC_TOP_SR_RCPI_OFST0_ANTNUM_OFST_ADDR         BN1_WF_RMAC_TOP_SR_RCPI_OFST0_ADDR
#define BN1_WF_RMAC_TOP_SR_RCPI_OFST0_ANTNUM_OFST_MASK         0x0FFF0000                // ANTNUM_OFST[27..16]
#define BN1_WF_RMAC_TOP_SR_RCPI_OFST0_ANTNUM_OFST_SHFT         16
#define BN1_WF_RMAC_TOP_SR_RCPI_OFST0_STBC_OFST_ADDR           BN1_WF_RMAC_TOP_SR_RCPI_OFST0_ADDR
#define BN1_WF_RMAC_TOP_SR_RCPI_OFST0_STBC_OFST_MASK           0x0000F000                // STBC_OFST[15..12]
#define BN1_WF_RMAC_TOP_SR_RCPI_OFST0_STBC_OFST_SHFT           12
#define BN1_WF_RMAC_TOP_SR_RCPI_OFST0_RXBW_OFST_ADDR           BN1_WF_RMAC_TOP_SR_RCPI_OFST0_ADDR
#define BN1_WF_RMAC_TOP_SR_RCPI_OFST0_RXBW_OFST_MASK           0x00000FFF                // RXBW_OFST[11..0]
#define BN1_WF_RMAC_TOP_SR_RCPI_OFST0_RXBW_OFST_SHFT           0

/* =====================================================================================

  ---SR_RCPI_OFST1 (0x820f5000 + 0x1C4)---

    DCM_OFST[7..0]               - (RW) SR RCPI offset of DCM
    MAC_OFST[15..8]              - (RW) SR RCPI offset of MAC
    SIG_OFST[23..16]             - (RW) SR RCPI offset of SIG
    BF_OFST[27..24]              - (RW) SR RCPI offset of BF
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_SR_RCPI_OFST1_BF_OFST_ADDR             BN1_WF_RMAC_TOP_SR_RCPI_OFST1_ADDR
#define BN1_WF_RMAC_TOP_SR_RCPI_OFST1_BF_OFST_MASK             0x0F000000                // BF_OFST[27..24]
#define BN1_WF_RMAC_TOP_SR_RCPI_OFST1_BF_OFST_SHFT             24
#define BN1_WF_RMAC_TOP_SR_RCPI_OFST1_SIG_OFST_ADDR            BN1_WF_RMAC_TOP_SR_RCPI_OFST1_ADDR
#define BN1_WF_RMAC_TOP_SR_RCPI_OFST1_SIG_OFST_MASK            0x00FF0000                // SIG_OFST[23..16]
#define BN1_WF_RMAC_TOP_SR_RCPI_OFST1_SIG_OFST_SHFT            16
#define BN1_WF_RMAC_TOP_SR_RCPI_OFST1_MAC_OFST_ADDR            BN1_WF_RMAC_TOP_SR_RCPI_OFST1_ADDR
#define BN1_WF_RMAC_TOP_SR_RCPI_OFST1_MAC_OFST_MASK            0x0000FF00                // MAC_OFST[15..8]
#define BN1_WF_RMAC_TOP_SR_RCPI_OFST1_MAC_OFST_SHFT            8
#define BN1_WF_RMAC_TOP_SR_RCPI_OFST1_DCM_OFST_ADDR            BN1_WF_RMAC_TOP_SR_RCPI_OFST1_ADDR
#define BN1_WF_RMAC_TOP_SR_RCPI_OFST1_DCM_OFST_MASK            0x000000FF                // DCM_OFST[7..0]
#define BN1_WF_RMAC_TOP_SR_RCPI_OFST1_DCM_OFST_SHFT            0

/* =====================================================================================

  ---SR_FNQ (0x820f5000 + 0x1C8)---

    SR_FNQ_PERIOD_OFST[7..0]     - (RW) Spatial Reuse FNQ period offset
                                     bit 7: represent 0 for add / 1 for sub
                                     bit 0~6: represent 0~127us
    SR_FNQ_HDR_DUR_EN[8]         - (RW) Spatial Reuse FNQ Check Header Durtion Enable
    SR_FNQ_TXOP_DUR_EN[9]        - (RW) Spatial Reuse FNQ Check TXOP Durtion Enable
    SR_FNQ_SRP_CFEND_RST[10]     - (RW) SRP and FNQ SR preiod reset by RX CFEND/CFEND-ACK/CF-POLL
    SR_FNQ_SRP_NAV_TOUT_RST[11]  - (RW) SRP and FNQ SR preiod reset by inter NAV holder RTS timeout
    RESERVED12[15..12]           - (RO) Reserved bits
    SR_FNQ_SRP_COND_DIS[31..16]  - (RW) Spatial Reuse Condition Disable Control
                                     bit0: not HE_TB
                                     bit1: not NDP
                                     bit2: RXV  HE/VHT
                                     bit3: RXV AMDPU
                                     bit4: PLD HE
                                     bit5: not UC2ME
                                     bit6: not BCMC public action
                                     bit7: not NDPA
                                     bit8: not FTM
                                     bit9: not single MPDU at NONSRG PLD
                                     bit10: not ACK/CTS/BA at NONSRG PLD
                                     bit11: CTS after SR RTS at NONSRG PLD
                                     bit12: not single MPDU at SRG PLD
                                     bit13:  not ACK/CTS/BA at SRG PLD
                                     bit14: CTS after SR RTS at SRG PLD
                                     bit15: Disable NonSRG SRFC check

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_SR_FNQ_SR_FNQ_SRP_COND_DIS_ADDR        BN1_WF_RMAC_TOP_SR_FNQ_ADDR
#define BN1_WF_RMAC_TOP_SR_FNQ_SR_FNQ_SRP_COND_DIS_MASK        0xFFFF0000                // SR_FNQ_SRP_COND_DIS[31..16]
#define BN1_WF_RMAC_TOP_SR_FNQ_SR_FNQ_SRP_COND_DIS_SHFT        16
#define BN1_WF_RMAC_TOP_SR_FNQ_SR_FNQ_SRP_NAV_TOUT_RST_ADDR    BN1_WF_RMAC_TOP_SR_FNQ_ADDR
#define BN1_WF_RMAC_TOP_SR_FNQ_SR_FNQ_SRP_NAV_TOUT_RST_MASK    0x00000800                // SR_FNQ_SRP_NAV_TOUT_RST[11]
#define BN1_WF_RMAC_TOP_SR_FNQ_SR_FNQ_SRP_NAV_TOUT_RST_SHFT    11
#define BN1_WF_RMAC_TOP_SR_FNQ_SR_FNQ_SRP_CFEND_RST_ADDR       BN1_WF_RMAC_TOP_SR_FNQ_ADDR
#define BN1_WF_RMAC_TOP_SR_FNQ_SR_FNQ_SRP_CFEND_RST_MASK       0x00000400                // SR_FNQ_SRP_CFEND_RST[10]
#define BN1_WF_RMAC_TOP_SR_FNQ_SR_FNQ_SRP_CFEND_RST_SHFT       10
#define BN1_WF_RMAC_TOP_SR_FNQ_SR_FNQ_TXOP_DUR_EN_ADDR         BN1_WF_RMAC_TOP_SR_FNQ_ADDR
#define BN1_WF_RMAC_TOP_SR_FNQ_SR_FNQ_TXOP_DUR_EN_MASK         0x00000200                // SR_FNQ_TXOP_DUR_EN[9]
#define BN1_WF_RMAC_TOP_SR_FNQ_SR_FNQ_TXOP_DUR_EN_SHFT         9
#define BN1_WF_RMAC_TOP_SR_FNQ_SR_FNQ_HDR_DUR_EN_ADDR          BN1_WF_RMAC_TOP_SR_FNQ_ADDR
#define BN1_WF_RMAC_TOP_SR_FNQ_SR_FNQ_HDR_DUR_EN_MASK          0x00000100                // SR_FNQ_HDR_DUR_EN[8]
#define BN1_WF_RMAC_TOP_SR_FNQ_SR_FNQ_HDR_DUR_EN_SHFT          8
#define BN1_WF_RMAC_TOP_SR_FNQ_SR_FNQ_PERIOD_OFST_ADDR         BN1_WF_RMAC_TOP_SR_FNQ_ADDR
#define BN1_WF_RMAC_TOP_SR_FNQ_SR_FNQ_PERIOD_OFST_MASK         0x000000FF                // SR_FNQ_PERIOD_OFST[7..0]
#define BN1_WF_RMAC_TOP_SR_FNQ_SR_FNQ_PERIOD_OFST_SHFT         0

/* =====================================================================================

  ---SR_FRM_FILT (0x820f5000 + 0x1CC)---

    SR_FRM_FILT[31..0]           - (RW) SR frame type filter
                                     [5:0] MAC header frame type
                                     [7:6] Filter target select
                                     2'b00: disable 
                                     2'b01: for FNQ
                                     2'b10: for SRP
                                     2'b11: for SR inter PS

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_SR_FRM_FILT_SR_FRM_FILT_ADDR           BN1_WF_RMAC_TOP_SR_FRM_FILT_ADDR
#define BN1_WF_RMAC_TOP_SR_FRM_FILT_SR_FRM_FILT_MASK           0xFFFFFFFF                // SR_FRM_FILT[31..0]
#define BN1_WF_RMAC_TOP_SR_FRM_FILT_SR_FRM_FILT_SHFT           0

/* =====================================================================================

  ---SRT_CTRL2 (0x820f5000 + 0x1D0)---

    SRT_SRCH_RA_SEL[31..0]       - (RW) SR table entry serach target TA enable
                                     2'b00: Search target RA(address1)
                                     2'b01: Search target TA(Address2)
                                     2'b10: Search RA or TA
                                     2'b11: RSVD
                                     entry0: bit[1:0]
                                     entry1: bit[3:2]
                                     entry15: bit[31:30]

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_SRT_CTRL2_SRT_SRCH_RA_SEL_ADDR         BN1_WF_RMAC_TOP_SRT_CTRL2_ADDR
#define BN1_WF_RMAC_TOP_SRT_CTRL2_SRT_SRCH_RA_SEL_MASK         0xFFFFFFFF                // SRT_SRCH_RA_SEL[31..0]
#define BN1_WF_RMAC_TOP_SRT_CTRL2_SRT_SRCH_RA_SEL_SHFT         0

/* =====================================================================================

  ---SR_INTERPS_CTRL (0x820f5000 + 0x1D4)---

    SR_INTERPS_COND_DIS[7..0]    - (RW) SR inter PS condition disable 
                                     1'b0: enable condition
                                     1'b1: disable condition
                                     bit0: Disable RXV SR invalid
                                     bit1: Disable New MAC SR invalid
                                     bit2: Disable Old MAC SR invalid
                                     bit3: Disable New MAC data frame
                                     bit4: Disable New MAC SMPDU
                                     bit5: Disable Old MAC data frame
                                     bit6: Disable Old MAC AMPDU
                                     bit7: RSVD
    SR_INTERPS_DUR_ADJ[15..8]    - (RW) SR inter PS duration adjust (unit: 16 us)
                                     [6:0]: adjust value
                                     [7]: add or sub
                                     1'b0: add
                                     1'b1: sub
                                     EX: 
                                     8'd2 = 2*16 us = add 32us
    SR_INTERPS_DUR_LMT[23..16]   - (RW) SR inter PS duration Limit (unit: 16 us),
                                     EX: 
                                     8'd2 = 2*16 us = 32us, inter ps duration need big than 32usec
    SR_INTERPS_ENTRY_EN[27..24]  - (RW) SR inter PS entry point enable
                                     1'b0: disable
                                     1'b1: enable
                                     bit0: RXV entry
                                     bit1: NEW MAC entry
                                     bit2: OLD MAC entry
                                     bit3: RSVD
    RESERVED28[29..28]           - (RO) Reserved bits
    SR_INTERPS_DUR_LMT_EN[30]    - (RW) SR inter PS duration limiter enable
                                     1'b0: disable
                                     1'b1: enable
    SR_INTERPS_EN[31]            - (RW) SR Inter PS feature enable
                                     1'b0: disable
                                     1'b1: enable

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_SR_INTERPS_CTRL_SR_INTERPS_EN_ADDR     BN1_WF_RMAC_TOP_SR_INTERPS_CTRL_ADDR
#define BN1_WF_RMAC_TOP_SR_INTERPS_CTRL_SR_INTERPS_EN_MASK     0x80000000                // SR_INTERPS_EN[31]
#define BN1_WF_RMAC_TOP_SR_INTERPS_CTRL_SR_INTERPS_EN_SHFT     31
#define BN1_WF_RMAC_TOP_SR_INTERPS_CTRL_SR_INTERPS_DUR_LMT_EN_ADDR BN1_WF_RMAC_TOP_SR_INTERPS_CTRL_ADDR
#define BN1_WF_RMAC_TOP_SR_INTERPS_CTRL_SR_INTERPS_DUR_LMT_EN_MASK 0x40000000                // SR_INTERPS_DUR_LMT_EN[30]
#define BN1_WF_RMAC_TOP_SR_INTERPS_CTRL_SR_INTERPS_DUR_LMT_EN_SHFT 30
#define BN1_WF_RMAC_TOP_SR_INTERPS_CTRL_SR_INTERPS_ENTRY_EN_ADDR BN1_WF_RMAC_TOP_SR_INTERPS_CTRL_ADDR
#define BN1_WF_RMAC_TOP_SR_INTERPS_CTRL_SR_INTERPS_ENTRY_EN_MASK 0x0F000000                // SR_INTERPS_ENTRY_EN[27..24]
#define BN1_WF_RMAC_TOP_SR_INTERPS_CTRL_SR_INTERPS_ENTRY_EN_SHFT 24
#define BN1_WF_RMAC_TOP_SR_INTERPS_CTRL_SR_INTERPS_DUR_LMT_ADDR BN1_WF_RMAC_TOP_SR_INTERPS_CTRL_ADDR
#define BN1_WF_RMAC_TOP_SR_INTERPS_CTRL_SR_INTERPS_DUR_LMT_MASK 0x00FF0000                // SR_INTERPS_DUR_LMT[23..16]
#define BN1_WF_RMAC_TOP_SR_INTERPS_CTRL_SR_INTERPS_DUR_LMT_SHFT 16
#define BN1_WF_RMAC_TOP_SR_INTERPS_CTRL_SR_INTERPS_DUR_ADJ_ADDR BN1_WF_RMAC_TOP_SR_INTERPS_CTRL_ADDR
#define BN1_WF_RMAC_TOP_SR_INTERPS_CTRL_SR_INTERPS_DUR_ADJ_MASK 0x0000FF00                // SR_INTERPS_DUR_ADJ[15..8]
#define BN1_WF_RMAC_TOP_SR_INTERPS_CTRL_SR_INTERPS_DUR_ADJ_SHFT 8
#define BN1_WF_RMAC_TOP_SR_INTERPS_CTRL_SR_INTERPS_COND_DIS_ADDR BN1_WF_RMAC_TOP_SR_INTERPS_CTRL_ADDR
#define BN1_WF_RMAC_TOP_SR_INTERPS_CTRL_SR_INTERPS_COND_DIS_MASK 0x000000FF                // SR_INTERPS_COND_DIS[7..0]
#define BN1_WF_RMAC_TOP_SR_INTERPS_CTRL_SR_INTERPS_COND_DIS_SHFT 0

/* =====================================================================================

  ---SR_INTERPS_DBG (0x820f5000 + 0x1D8)---

    SR_INTERPS_ENTRY0_CNT[7..0]  - (RO) SR inter PS entry point 0 count
                                     read clear
    SR_INTERPS_ENTRY1_CNT[15..8] - (RO) SR inter PS entry point 1 count
                                     read clear
    SR_INTERPS_ENTRY2_CNT[23..16] - (RO) SR inter PS entry point 2 count
                                     read clear
    SR_INTERPS_ENTRY_LAT[25..24] - (RO) SR Inter PS entry point latch, clear by next trigger
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_SR_INTERPS_DBG_SR_INTERPS_ENTRY_LAT_ADDR BN1_WF_RMAC_TOP_SR_INTERPS_DBG_ADDR
#define BN1_WF_RMAC_TOP_SR_INTERPS_DBG_SR_INTERPS_ENTRY_LAT_MASK 0x03000000                // SR_INTERPS_ENTRY_LAT[25..24]
#define BN1_WF_RMAC_TOP_SR_INTERPS_DBG_SR_INTERPS_ENTRY_LAT_SHFT 24
#define BN1_WF_RMAC_TOP_SR_INTERPS_DBG_SR_INTERPS_ENTRY2_CNT_ADDR BN1_WF_RMAC_TOP_SR_INTERPS_DBG_ADDR
#define BN1_WF_RMAC_TOP_SR_INTERPS_DBG_SR_INTERPS_ENTRY2_CNT_MASK 0x00FF0000                // SR_INTERPS_ENTRY2_CNT[23..16]
#define BN1_WF_RMAC_TOP_SR_INTERPS_DBG_SR_INTERPS_ENTRY2_CNT_SHFT 16
#define BN1_WF_RMAC_TOP_SR_INTERPS_DBG_SR_INTERPS_ENTRY1_CNT_ADDR BN1_WF_RMAC_TOP_SR_INTERPS_DBG_ADDR
#define BN1_WF_RMAC_TOP_SR_INTERPS_DBG_SR_INTERPS_ENTRY1_CNT_MASK 0x0000FF00                // SR_INTERPS_ENTRY1_CNT[15..8]
#define BN1_WF_RMAC_TOP_SR_INTERPS_DBG_SR_INTERPS_ENTRY1_CNT_SHFT 8
#define BN1_WF_RMAC_TOP_SR_INTERPS_DBG_SR_INTERPS_ENTRY0_CNT_ADDR BN1_WF_RMAC_TOP_SR_INTERPS_DBG_ADDR
#define BN1_WF_RMAC_TOP_SR_INTERPS_DBG_SR_INTERPS_ENTRY0_CNT_MASK 0x000000FF                // SR_INTERPS_ENTRY0_CNT[7..0]
#define BN1_WF_RMAC_TOP_SR_INTERPS_DBG_SR_INTERPS_ENTRY0_CNT_SHFT 0

/* =====================================================================================

  ---CB0R0 (0x820f5000 + 0x200)---

    CURRENTBSSID0_31_0[31..0]    - (RW) Current BSSID0 bits 31~0
                                     BSSID0 will extend another 15-BSSID with enable bit in ACBEN. BSSID0-15 will be OWN MAC address when infra-AP mode for rx filtering.

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_CB0R0_CURRENTBSSID0_31_0_ADDR          BN1_WF_RMAC_TOP_CB0R0_ADDR
#define BN1_WF_RMAC_TOP_CB0R0_CURRENTBSSID0_31_0_MASK          0xFFFFFFFF                // CURRENTBSSID0_31_0[31..0]
#define BN1_WF_RMAC_TOP_CB0R0_CURRENTBSSID0_31_0_SHFT          0

/* =====================================================================================

  ---CB0R1 (0x820f5000 + 0x204)---

    CURRENTBSSID0_47_32[15..0]   - (RW) Current BSSID0 bits 47~32
    CURRENTBSSID0_EN[16]         - (RW) Current BSSID0 enable. 
                                     0: Disable this BSSID
                                     1: Enable this BSSID
                                     Note: Do not enable ACBEN[0] and CB0R1[16] at the same time
    CURRENTBSSCOLOR0_EN[17]      - (RW) Current BSSID COLOR enable. 
                                     0: Disable this BSSID Color
                                     1: Enable this BSSID Color
    CURRENTBSSCOLOR0[23..18]     - (RW) Current BSSID COLOR
    MBSSID0_MASK_BITS[26..24]    - (RW) Multiple BSSID addr mask bits for MBSSID comparison.
                                     0: mask bit 0 (2-set MBSS)
                                     1: mask bit 0~1 (4-set MBSS)
                                     2: mask bit 0~2 (8-set MBSS)
                                     etc
    MBSSID0_EN[27]               - (RW) Multiple BSSID is enabled for this BSSID
    PBSSCOLOR_EN[28]             - (RW) Partial BSS color enable
    RESERVED29[31..29]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_CB0R1_PBSSCOLOR_EN_ADDR                BN1_WF_RMAC_TOP_CB0R1_ADDR
#define BN1_WF_RMAC_TOP_CB0R1_PBSSCOLOR_EN_MASK                0x10000000                // PBSSCOLOR_EN[28]
#define BN1_WF_RMAC_TOP_CB0R1_PBSSCOLOR_EN_SHFT                28
#define BN1_WF_RMAC_TOP_CB0R1_MBSSID0_EN_ADDR                  BN1_WF_RMAC_TOP_CB0R1_ADDR
#define BN1_WF_RMAC_TOP_CB0R1_MBSSID0_EN_MASK                  0x08000000                // MBSSID0_EN[27]
#define BN1_WF_RMAC_TOP_CB0R1_MBSSID0_EN_SHFT                  27
#define BN1_WF_RMAC_TOP_CB0R1_MBSSID0_MASK_BITS_ADDR           BN1_WF_RMAC_TOP_CB0R1_ADDR
#define BN1_WF_RMAC_TOP_CB0R1_MBSSID0_MASK_BITS_MASK           0x07000000                // MBSSID0_MASK_BITS[26..24]
#define BN1_WF_RMAC_TOP_CB0R1_MBSSID0_MASK_BITS_SHFT           24
#define BN1_WF_RMAC_TOP_CB0R1_CURRENTBSSCOLOR0_ADDR            BN1_WF_RMAC_TOP_CB0R1_ADDR
#define BN1_WF_RMAC_TOP_CB0R1_CURRENTBSSCOLOR0_MASK            0x00FC0000                // CURRENTBSSCOLOR0[23..18]
#define BN1_WF_RMAC_TOP_CB0R1_CURRENTBSSCOLOR0_SHFT            18
#define BN1_WF_RMAC_TOP_CB0R1_CURRENTBSSCOLOR0_EN_ADDR         BN1_WF_RMAC_TOP_CB0R1_ADDR
#define BN1_WF_RMAC_TOP_CB0R1_CURRENTBSSCOLOR0_EN_MASK         0x00020000                // CURRENTBSSCOLOR0_EN[17]
#define BN1_WF_RMAC_TOP_CB0R1_CURRENTBSSCOLOR0_EN_SHFT         17
#define BN1_WF_RMAC_TOP_CB0R1_CURRENTBSSID0_EN_ADDR            BN1_WF_RMAC_TOP_CB0R1_ADDR
#define BN1_WF_RMAC_TOP_CB0R1_CURRENTBSSID0_EN_MASK            0x00010000                // CURRENTBSSID0_EN[16]
#define BN1_WF_RMAC_TOP_CB0R1_CURRENTBSSID0_EN_SHFT            16
#define BN1_WF_RMAC_TOP_CB0R1_CURRENTBSSID0_47_32_ADDR         BN1_WF_RMAC_TOP_CB0R1_ADDR
#define BN1_WF_RMAC_TOP_CB0R1_CURRENTBSSID0_47_32_MASK         0x0000FFFF                // CURRENTBSSID0_47_32[15..0]
#define BN1_WF_RMAC_TOP_CB0R1_CURRENTBSSID0_47_32_SHFT         0

/* =====================================================================================

  ---OMA0R0 (0x820f5000 + 0x208)---

    OWNMACADDR0_31_0[31..0]      - (RW) OWN MAC address 0 bits 31~0

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_OMA0R0_OWNMACADDR0_31_0_ADDR           BN1_WF_RMAC_TOP_OMA0R0_ADDR
#define BN1_WF_RMAC_TOP_OMA0R0_OWNMACADDR0_31_0_MASK           0xFFFFFFFF                // OWNMACADDR0_31_0[31..0]
#define BN1_WF_RMAC_TOP_OMA0R0_OWNMACADDR0_31_0_SHFT           0

/* =====================================================================================

  ---OMA0R1 (0x820f5000 + 0x20C)---

    OWNMACADDR0_47_32[15..0]     - (RW) OWN MAC address 0 bits 47~32
    OWNMACADDR0_EN[16]           - (RW) OWN MAC address 0 enable
                                     0: Disable this OWN MAC
                                     1: Enable this OWN MAC
    RESERVED17[31..17]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_OMA0R1_OWNMACADDR0_EN_ADDR             BN1_WF_RMAC_TOP_OMA0R1_ADDR
#define BN1_WF_RMAC_TOP_OMA0R1_OWNMACADDR0_EN_MASK             0x00010000                // OWNMACADDR0_EN[16]
#define BN1_WF_RMAC_TOP_OMA0R1_OWNMACADDR0_EN_SHFT             16
#define BN1_WF_RMAC_TOP_OMA0R1_OWNMACADDR0_47_32_ADDR          BN1_WF_RMAC_TOP_OMA0R1_ADDR
#define BN1_WF_RMAC_TOP_OMA0R1_OWNMACADDR0_47_32_MASK          0x0000FFFF                // OWNMACADDR0_47_32[15..0]
#define BN1_WF_RMAC_TOP_OMA0R1_OWNMACADDR0_47_32_SHFT          0

/* =====================================================================================

  ---CFOBSS0 (0x820f5000 + 0x210)---

    CFO_VALUE_BSS0[19..0]        - (RO) CFO value
    RESERVED20[30..20]           - (RO) Reserved bits
    CFO_VLD_BSS0[31]             - (RO) CFO value is valid

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_CFOBSS0_CFO_VLD_BSS0_ADDR              BN1_WF_RMAC_TOP_CFOBSS0_ADDR
#define BN1_WF_RMAC_TOP_CFOBSS0_CFO_VLD_BSS0_MASK              0x80000000                // CFO_VLD_BSS0[31]
#define BN1_WF_RMAC_TOP_CFOBSS0_CFO_VLD_BSS0_SHFT              31
#define BN1_WF_RMAC_TOP_CFOBSS0_CFO_VALUE_BSS0_ADDR            BN1_WF_RMAC_TOP_CFOBSS0_ADDR
#define BN1_WF_RMAC_TOP_CFOBSS0_CFO_VALUE_BSS0_MASK            0x000FFFFF                // CFO_VALUE_BSS0[19..0]
#define BN1_WF_RMAC_TOP_CFOBSS0_CFO_VALUE_BSS0_SHFT            0

/* =====================================================================================

  ---CB1R0 (0x820f5000 + 0x220)---

    CURRENTBSSID1_31_0[31..0]    - (RW) Current BSSID1 bits 31~0

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_CB1R0_CURRENTBSSID1_31_0_ADDR          BN1_WF_RMAC_TOP_CB1R0_ADDR
#define BN1_WF_RMAC_TOP_CB1R0_CURRENTBSSID1_31_0_MASK          0xFFFFFFFF                // CURRENTBSSID1_31_0[31..0]
#define BN1_WF_RMAC_TOP_CB1R0_CURRENTBSSID1_31_0_SHFT          0

/* =====================================================================================

  ---CB1R1 (0x820f5000 + 0x224)---

    CURRENTBSSID1_47_32[15..0]   - (RW) Current BSSID1 bits 47~32
    CURRENTBSSID1_EN[16]         - (RW) Current BSSID1 enable
                                     0: Disable this BSSID
                                     1: Enable this BSSID
    CURRENTBSSCOLOR1_EN[17]      - (RW) Current BSSID COLOR enable. 
                                     0: Disable this BSSID Color
                                     1: Enable this BSSID Color
    CURRENTBSSCOLOR1[23..18]     - (RW) Current BSSID COLOR
    MBSSID1_MASK_BITS[26..24]    - (RW) Multiple BSSID addr mask bits for MBSSID comparison.
    MBSSID1_EN[27]               - (RW) Multiple BSSID is enabled for this BSSID
    PBSSCOLOR_EN[28]             - (RW) Partial BSS color enable
    RESERVED29[31..29]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_CB1R1_PBSSCOLOR_EN_ADDR                BN1_WF_RMAC_TOP_CB1R1_ADDR
#define BN1_WF_RMAC_TOP_CB1R1_PBSSCOLOR_EN_MASK                0x10000000                // PBSSCOLOR_EN[28]
#define BN1_WF_RMAC_TOP_CB1R1_PBSSCOLOR_EN_SHFT                28
#define BN1_WF_RMAC_TOP_CB1R1_MBSSID1_EN_ADDR                  BN1_WF_RMAC_TOP_CB1R1_ADDR
#define BN1_WF_RMAC_TOP_CB1R1_MBSSID1_EN_MASK                  0x08000000                // MBSSID1_EN[27]
#define BN1_WF_RMAC_TOP_CB1R1_MBSSID1_EN_SHFT                  27
#define BN1_WF_RMAC_TOP_CB1R1_MBSSID1_MASK_BITS_ADDR           BN1_WF_RMAC_TOP_CB1R1_ADDR
#define BN1_WF_RMAC_TOP_CB1R1_MBSSID1_MASK_BITS_MASK           0x07000000                // MBSSID1_MASK_BITS[26..24]
#define BN1_WF_RMAC_TOP_CB1R1_MBSSID1_MASK_BITS_SHFT           24
#define BN1_WF_RMAC_TOP_CB1R1_CURRENTBSSCOLOR1_ADDR            BN1_WF_RMAC_TOP_CB1R1_ADDR
#define BN1_WF_RMAC_TOP_CB1R1_CURRENTBSSCOLOR1_MASK            0x00FC0000                // CURRENTBSSCOLOR1[23..18]
#define BN1_WF_RMAC_TOP_CB1R1_CURRENTBSSCOLOR1_SHFT            18
#define BN1_WF_RMAC_TOP_CB1R1_CURRENTBSSCOLOR1_EN_ADDR         BN1_WF_RMAC_TOP_CB1R1_ADDR
#define BN1_WF_RMAC_TOP_CB1R1_CURRENTBSSCOLOR1_EN_MASK         0x00020000                // CURRENTBSSCOLOR1_EN[17]
#define BN1_WF_RMAC_TOP_CB1R1_CURRENTBSSCOLOR1_EN_SHFT         17
#define BN1_WF_RMAC_TOP_CB1R1_CURRENTBSSID1_EN_ADDR            BN1_WF_RMAC_TOP_CB1R1_ADDR
#define BN1_WF_RMAC_TOP_CB1R1_CURRENTBSSID1_EN_MASK            0x00010000                // CURRENTBSSID1_EN[16]
#define BN1_WF_RMAC_TOP_CB1R1_CURRENTBSSID1_EN_SHFT            16
#define BN1_WF_RMAC_TOP_CB1R1_CURRENTBSSID1_47_32_ADDR         BN1_WF_RMAC_TOP_CB1R1_ADDR
#define BN1_WF_RMAC_TOP_CB1R1_CURRENTBSSID1_47_32_MASK         0x0000FFFF                // CURRENTBSSID1_47_32[15..0]
#define BN1_WF_RMAC_TOP_CB1R1_CURRENTBSSID1_47_32_SHFT         0

/* =====================================================================================

  ---OMA1R0 (0x820f5000 + 0x228)---

    OWNMACADDR1_31_0[31..0]      - (RW) OWN MAC address 1 bits 31~0

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_OMA1R0_OWNMACADDR1_31_0_ADDR           BN1_WF_RMAC_TOP_OMA1R0_ADDR
#define BN1_WF_RMAC_TOP_OMA1R0_OWNMACADDR1_31_0_MASK           0xFFFFFFFF                // OWNMACADDR1_31_0[31..0]
#define BN1_WF_RMAC_TOP_OMA1R0_OWNMACADDR1_31_0_SHFT           0

/* =====================================================================================

  ---OMA1R1 (0x820f5000 + 0x22C)---

    OWNMACADDR1_47_32[15..0]     - (RW) OWN MAC address 1 bits 47~32
    OWNMACADDR1_EN[16]           - (RW) OWN MAC address 1 enable
                                     0: Disable this OWN MAC
                                     1: Enable this OWN MAC
    RESERVED17[31..17]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_OMA1R1_OWNMACADDR1_EN_ADDR             BN1_WF_RMAC_TOP_OMA1R1_ADDR
#define BN1_WF_RMAC_TOP_OMA1R1_OWNMACADDR1_EN_MASK             0x00010000                // OWNMACADDR1_EN[16]
#define BN1_WF_RMAC_TOP_OMA1R1_OWNMACADDR1_EN_SHFT             16
#define BN1_WF_RMAC_TOP_OMA1R1_OWNMACADDR1_47_32_ADDR          BN1_WF_RMAC_TOP_OMA1R1_ADDR
#define BN1_WF_RMAC_TOP_OMA1R1_OWNMACADDR1_47_32_MASK          0x0000FFFF                // OWNMACADDR1_47_32[15..0]
#define BN1_WF_RMAC_TOP_OMA1R1_OWNMACADDR1_47_32_SHFT          0

/* =====================================================================================

  ---CFOBSS1 (0x820f5000 + 0x230)---

    CFO_VALUE_BSS1[19..0]        - (RO) CFO value
    RESERVED20[30..20]           - (RO) Reserved bits
    CFO_VLD_BSS1[31]             - (RO) CFO value is valid

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_CFOBSS1_CFO_VLD_BSS1_ADDR              BN1_WF_RMAC_TOP_CFOBSS1_ADDR
#define BN1_WF_RMAC_TOP_CFOBSS1_CFO_VLD_BSS1_MASK              0x80000000                // CFO_VLD_BSS1[31]
#define BN1_WF_RMAC_TOP_CFOBSS1_CFO_VLD_BSS1_SHFT              31
#define BN1_WF_RMAC_TOP_CFOBSS1_CFO_VALUE_BSS1_ADDR            BN1_WF_RMAC_TOP_CFOBSS1_ADDR
#define BN1_WF_RMAC_TOP_CFOBSS1_CFO_VALUE_BSS1_MASK            0x000FFFFF                // CFO_VALUE_BSS1[19..0]
#define BN1_WF_RMAC_TOP_CFOBSS1_CFO_VALUE_BSS1_SHFT            0

/* =====================================================================================

  ---CB2R0 (0x820f5000 + 0x240)---

    CURRENTBSSID2_31_0[31..0]    - (RW) Current BSSID2 bits 31~0

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_CB2R0_CURRENTBSSID2_31_0_ADDR          BN1_WF_RMAC_TOP_CB2R0_ADDR
#define BN1_WF_RMAC_TOP_CB2R0_CURRENTBSSID2_31_0_MASK          0xFFFFFFFF                // CURRENTBSSID2_31_0[31..0]
#define BN1_WF_RMAC_TOP_CB2R0_CURRENTBSSID2_31_0_SHFT          0

/* =====================================================================================

  ---CB2R1 (0x820f5000 + 0x244)---

    CURRENTBSSID2_47_32[15..0]   - (RW) Current BSSID2 bits 47~32
    CURRENTBSSID2_EN[16]         - (RW) Current BSSID2 enable
                                     0: Disable this BSSID
                                     1: Enable this BSSID
    CURRENTBSSCOLOR2_EN[17]      - (RW) Current BSSID COLOR enable. 
                                     0: Disable this BSSID Color
                                     1: Enable this BSSID Color
    CURRENTBSSCOLOR2[23..18]     - (RW) Current BSSID COLOR
    MBSSID2_MASK_BITS[26..24]    - (RW) Multiple BSSID addr mask bits for MBSSID comparison.
    MBSSID2_EN[27]               - (RW) Multiple BSSID is enabled for this BSSID
    PBSSCOLOR_EN[28]             - (RW) Partial BSS color enable
    RESERVED29[31..29]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_CB2R1_PBSSCOLOR_EN_ADDR                BN1_WF_RMAC_TOP_CB2R1_ADDR
#define BN1_WF_RMAC_TOP_CB2R1_PBSSCOLOR_EN_MASK                0x10000000                // PBSSCOLOR_EN[28]
#define BN1_WF_RMAC_TOP_CB2R1_PBSSCOLOR_EN_SHFT                28
#define BN1_WF_RMAC_TOP_CB2R1_MBSSID2_EN_ADDR                  BN1_WF_RMAC_TOP_CB2R1_ADDR
#define BN1_WF_RMAC_TOP_CB2R1_MBSSID2_EN_MASK                  0x08000000                // MBSSID2_EN[27]
#define BN1_WF_RMAC_TOP_CB2R1_MBSSID2_EN_SHFT                  27
#define BN1_WF_RMAC_TOP_CB2R1_MBSSID2_MASK_BITS_ADDR           BN1_WF_RMAC_TOP_CB2R1_ADDR
#define BN1_WF_RMAC_TOP_CB2R1_MBSSID2_MASK_BITS_MASK           0x07000000                // MBSSID2_MASK_BITS[26..24]
#define BN1_WF_RMAC_TOP_CB2R1_MBSSID2_MASK_BITS_SHFT           24
#define BN1_WF_RMAC_TOP_CB2R1_CURRENTBSSCOLOR2_ADDR            BN1_WF_RMAC_TOP_CB2R1_ADDR
#define BN1_WF_RMAC_TOP_CB2R1_CURRENTBSSCOLOR2_MASK            0x00FC0000                // CURRENTBSSCOLOR2[23..18]
#define BN1_WF_RMAC_TOP_CB2R1_CURRENTBSSCOLOR2_SHFT            18
#define BN1_WF_RMAC_TOP_CB2R1_CURRENTBSSCOLOR2_EN_ADDR         BN1_WF_RMAC_TOP_CB2R1_ADDR
#define BN1_WF_RMAC_TOP_CB2R1_CURRENTBSSCOLOR2_EN_MASK         0x00020000                // CURRENTBSSCOLOR2_EN[17]
#define BN1_WF_RMAC_TOP_CB2R1_CURRENTBSSCOLOR2_EN_SHFT         17
#define BN1_WF_RMAC_TOP_CB2R1_CURRENTBSSID2_EN_ADDR            BN1_WF_RMAC_TOP_CB2R1_ADDR
#define BN1_WF_RMAC_TOP_CB2R1_CURRENTBSSID2_EN_MASK            0x00010000                // CURRENTBSSID2_EN[16]
#define BN1_WF_RMAC_TOP_CB2R1_CURRENTBSSID2_EN_SHFT            16
#define BN1_WF_RMAC_TOP_CB2R1_CURRENTBSSID2_47_32_ADDR         BN1_WF_RMAC_TOP_CB2R1_ADDR
#define BN1_WF_RMAC_TOP_CB2R1_CURRENTBSSID2_47_32_MASK         0x0000FFFF                // CURRENTBSSID2_47_32[15..0]
#define BN1_WF_RMAC_TOP_CB2R1_CURRENTBSSID2_47_32_SHFT         0

/* =====================================================================================

  ---OMA2R0 (0x820f5000 + 0x248)---

    OWNMACADDR2_31_0[31..0]      - (RW) OWN MAC address 2 bits 31~0

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_OMA2R0_OWNMACADDR2_31_0_ADDR           BN1_WF_RMAC_TOP_OMA2R0_ADDR
#define BN1_WF_RMAC_TOP_OMA2R0_OWNMACADDR2_31_0_MASK           0xFFFFFFFF                // OWNMACADDR2_31_0[31..0]
#define BN1_WF_RMAC_TOP_OMA2R0_OWNMACADDR2_31_0_SHFT           0

/* =====================================================================================

  ---OMA2R1 (0x820f5000 + 0x24C)---

    OWNMACADDR2_47_32[15..0]     - (RW) OWN MAC address 2 bits 47~32
    OWNMACADDR2_EN[16]           - (RW) OWN MAC address 2 enable
                                     0: Disable this OWN MAC
                                     1: Enable this OWN MAC
    RESERVED17[31..17]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_OMA2R1_OWNMACADDR2_EN_ADDR             BN1_WF_RMAC_TOP_OMA2R1_ADDR
#define BN1_WF_RMAC_TOP_OMA2R1_OWNMACADDR2_EN_MASK             0x00010000                // OWNMACADDR2_EN[16]
#define BN1_WF_RMAC_TOP_OMA2R1_OWNMACADDR2_EN_SHFT             16
#define BN1_WF_RMAC_TOP_OMA2R1_OWNMACADDR2_47_32_ADDR          BN1_WF_RMAC_TOP_OMA2R1_ADDR
#define BN1_WF_RMAC_TOP_OMA2R1_OWNMACADDR2_47_32_MASK          0x0000FFFF                // OWNMACADDR2_47_32[15..0]
#define BN1_WF_RMAC_TOP_OMA2R1_OWNMACADDR2_47_32_SHFT          0

/* =====================================================================================

  ---CFOBSS2 (0x820f5000 + 0x250)---

    CFO_VALUE_BSS2[19..0]        - (RO) CFO value
    RESERVED20[30..20]           - (RO) Reserved bits
    CFO_VLD_BSS2[31]             - (RO) CFO value is valid

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_CFOBSS2_CFO_VLD_BSS2_ADDR              BN1_WF_RMAC_TOP_CFOBSS2_ADDR
#define BN1_WF_RMAC_TOP_CFOBSS2_CFO_VLD_BSS2_MASK              0x80000000                // CFO_VLD_BSS2[31]
#define BN1_WF_RMAC_TOP_CFOBSS2_CFO_VLD_BSS2_SHFT              31
#define BN1_WF_RMAC_TOP_CFOBSS2_CFO_VALUE_BSS2_ADDR            BN1_WF_RMAC_TOP_CFOBSS2_ADDR
#define BN1_WF_RMAC_TOP_CFOBSS2_CFO_VALUE_BSS2_MASK            0x000FFFFF                // CFO_VALUE_BSS2[19..0]
#define BN1_WF_RMAC_TOP_CFOBSS2_CFO_VALUE_BSS2_SHFT            0

/* =====================================================================================

  ---CB3R0 (0x820f5000 + 0x260)---

    CURRENTBSSID3_31_0[31..0]    - (RW) Current BSSID3 bits 31~0
                                     Note: Not valid in MT7603/MT7628

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_CB3R0_CURRENTBSSID3_31_0_ADDR          BN1_WF_RMAC_TOP_CB3R0_ADDR
#define BN1_WF_RMAC_TOP_CB3R0_CURRENTBSSID3_31_0_MASK          0xFFFFFFFF                // CURRENTBSSID3_31_0[31..0]
#define BN1_WF_RMAC_TOP_CB3R0_CURRENTBSSID3_31_0_SHFT          0

/* =====================================================================================

  ---CB3R1 (0x820f5000 + 0x264)---

    CURRENTBSSID3_47_32[15..0]   - (RW) Current BSSID3 bits 47~32
    CURRENTBSSID3_EN[16]         - (RW) Current BSSID3 enable
                                     0: Disable this BSSID
                                     1: Enable this BSSID
                                     Note: Not valid in MT7603/MT7628
    CURRENTBSSCOLOR3_EN[17]      - (RW) Current BSSID COLOR enable. 
                                     0: Disable this BSSID Color
                                     1: Enable this BSSID Color
    CURRENTBSSCOLOR3[23..18]     - (RW) Current BSSID COLOR
    MBSSID3_MASK_BITS[26..24]    - (RW) Multiple BSSID addr mask bits for MBSSID comparison.
    MBSSID3_EN[27]               - (RW) Multiple BSSID is enabled for this BSSID
    PBSSCOLOR_EN[28]             - (RW) Partial BSS color enable
    RESERVED29[31..29]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_CB3R1_PBSSCOLOR_EN_ADDR                BN1_WF_RMAC_TOP_CB3R1_ADDR
#define BN1_WF_RMAC_TOP_CB3R1_PBSSCOLOR_EN_MASK                0x10000000                // PBSSCOLOR_EN[28]
#define BN1_WF_RMAC_TOP_CB3R1_PBSSCOLOR_EN_SHFT                28
#define BN1_WF_RMAC_TOP_CB3R1_MBSSID3_EN_ADDR                  BN1_WF_RMAC_TOP_CB3R1_ADDR
#define BN1_WF_RMAC_TOP_CB3R1_MBSSID3_EN_MASK                  0x08000000                // MBSSID3_EN[27]
#define BN1_WF_RMAC_TOP_CB3R1_MBSSID3_EN_SHFT                  27
#define BN1_WF_RMAC_TOP_CB3R1_MBSSID3_MASK_BITS_ADDR           BN1_WF_RMAC_TOP_CB3R1_ADDR
#define BN1_WF_RMAC_TOP_CB3R1_MBSSID3_MASK_BITS_MASK           0x07000000                // MBSSID3_MASK_BITS[26..24]
#define BN1_WF_RMAC_TOP_CB3R1_MBSSID3_MASK_BITS_SHFT           24
#define BN1_WF_RMAC_TOP_CB3R1_CURRENTBSSCOLOR3_ADDR            BN1_WF_RMAC_TOP_CB3R1_ADDR
#define BN1_WF_RMAC_TOP_CB3R1_CURRENTBSSCOLOR3_MASK            0x00FC0000                // CURRENTBSSCOLOR3[23..18]
#define BN1_WF_RMAC_TOP_CB3R1_CURRENTBSSCOLOR3_SHFT            18
#define BN1_WF_RMAC_TOP_CB3R1_CURRENTBSSCOLOR3_EN_ADDR         BN1_WF_RMAC_TOP_CB3R1_ADDR
#define BN1_WF_RMAC_TOP_CB3R1_CURRENTBSSCOLOR3_EN_MASK         0x00020000                // CURRENTBSSCOLOR3_EN[17]
#define BN1_WF_RMAC_TOP_CB3R1_CURRENTBSSCOLOR3_EN_SHFT         17
#define BN1_WF_RMAC_TOP_CB3R1_CURRENTBSSID3_EN_ADDR            BN1_WF_RMAC_TOP_CB3R1_ADDR
#define BN1_WF_RMAC_TOP_CB3R1_CURRENTBSSID3_EN_MASK            0x00010000                // CURRENTBSSID3_EN[16]
#define BN1_WF_RMAC_TOP_CB3R1_CURRENTBSSID3_EN_SHFT            16
#define BN1_WF_RMAC_TOP_CB3R1_CURRENTBSSID3_47_32_ADDR         BN1_WF_RMAC_TOP_CB3R1_ADDR
#define BN1_WF_RMAC_TOP_CB3R1_CURRENTBSSID3_47_32_MASK         0x0000FFFF                // CURRENTBSSID3_47_32[15..0]
#define BN1_WF_RMAC_TOP_CB3R1_CURRENTBSSID3_47_32_SHFT         0

/* =====================================================================================

  ---OMA3R0 (0x820f5000 + 0x268)---

    OWNMACADDR3_31_0[31..0]      - (RW) OWN MAC address 3 bits 31~0

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_OMA3R0_OWNMACADDR3_31_0_ADDR           BN1_WF_RMAC_TOP_OMA3R0_ADDR
#define BN1_WF_RMAC_TOP_OMA3R0_OWNMACADDR3_31_0_MASK           0xFFFFFFFF                // OWNMACADDR3_31_0[31..0]
#define BN1_WF_RMAC_TOP_OMA3R0_OWNMACADDR3_31_0_SHFT           0

/* =====================================================================================

  ---OMA3R1 (0x820f5000 + 0x26C)---

    OWNMACADDR3_47_32[15..0]     - (RW) OWN MAC address 3 bits 47~32
    OWNMACADDR3_EN[16]           - (RW) OWN MAC address 3 enable
                                     0: Disable this OWN MAC
                                     1: Enable this OWN MAC
    RESERVED17[31..17]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_OMA3R1_OWNMACADDR3_EN_ADDR             BN1_WF_RMAC_TOP_OMA3R1_ADDR
#define BN1_WF_RMAC_TOP_OMA3R1_OWNMACADDR3_EN_MASK             0x00010000                // OWNMACADDR3_EN[16]
#define BN1_WF_RMAC_TOP_OMA3R1_OWNMACADDR3_EN_SHFT             16
#define BN1_WF_RMAC_TOP_OMA3R1_OWNMACADDR3_47_32_ADDR          BN1_WF_RMAC_TOP_OMA3R1_ADDR
#define BN1_WF_RMAC_TOP_OMA3R1_OWNMACADDR3_47_32_MASK          0x0000FFFF                // OWNMACADDR3_47_32[15..0]
#define BN1_WF_RMAC_TOP_OMA3R1_OWNMACADDR3_47_32_SHFT          0

/* =====================================================================================

  ---CFOBSS3 (0x820f5000 + 0x270)---

    CFO_VALUE_BSS3[19..0]        - (RO) CFO value
    RESERVED20[30..20]           - (RO) Reserved bits
    CFO_VLD_BSS3[31]             - (RO) CFO value is valid

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_CFOBSS3_CFO_VLD_BSS3_ADDR              BN1_WF_RMAC_TOP_CFOBSS3_ADDR
#define BN1_WF_RMAC_TOP_CFOBSS3_CFO_VLD_BSS3_MASK              0x80000000                // CFO_VLD_BSS3[31]
#define BN1_WF_RMAC_TOP_CFOBSS3_CFO_VLD_BSS3_SHFT              31
#define BN1_WF_RMAC_TOP_CFOBSS3_CFO_VALUE_BSS3_ADDR            BN1_WF_RMAC_TOP_CFOBSS3_ADDR
#define BN1_WF_RMAC_TOP_CFOBSS3_CFO_VALUE_BSS3_MASK            0x000FFFFF                // CFO_VALUE_BSS3[19..0]
#define BN1_WF_RMAC_TOP_CFOBSS3_CFO_VALUE_BSS3_SHFT            0

/* =====================================================================================

  ---OMA4R0 (0x820f5000 + 0x280)---

    OWNMACADDR4_31_0[31..0]      - (RW) OWN MAC address 4 bits 31~0

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_OMA4R0_OWNMACADDR4_31_0_ADDR           BN1_WF_RMAC_TOP_OMA4R0_ADDR
#define BN1_WF_RMAC_TOP_OMA4R0_OWNMACADDR4_31_0_MASK           0xFFFFFFFF                // OWNMACADDR4_31_0[31..0]
#define BN1_WF_RMAC_TOP_OMA4R0_OWNMACADDR4_31_0_SHFT           0

/* =====================================================================================

  ---OMA4R1 (0x820f5000 + 0x284)---

    OWNMACADDR4_47_32[15..0]     - (RW) OWN MAC address 4 bits 47~32
    OWNMACADDR4_EN[16]           - (RW) OWN MAC address 4 enable0: Disable this OWN MAC1: Enable this OWN MAC
    RESERVED17[31..17]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_OMA4R1_OWNMACADDR4_EN_ADDR             BN1_WF_RMAC_TOP_OMA4R1_ADDR
#define BN1_WF_RMAC_TOP_OMA4R1_OWNMACADDR4_EN_MASK             0x00010000                // OWNMACADDR4_EN[16]
#define BN1_WF_RMAC_TOP_OMA4R1_OWNMACADDR4_EN_SHFT             16
#define BN1_WF_RMAC_TOP_OMA4R1_OWNMACADDR4_47_32_ADDR          BN1_WF_RMAC_TOP_OMA4R1_ADDR
#define BN1_WF_RMAC_TOP_OMA4R1_OWNMACADDR4_47_32_MASK          0x0000FFFF                // OWNMACADDR4_47_32[15..0]
#define BN1_WF_RMAC_TOP_OMA4R1_OWNMACADDR4_47_32_SHFT          0

/* =====================================================================================

  ---B01AR_B1AR (0x820f5000 + 0x290)---

    AID_BSSID0[11..0]            - (RW) Beacon AID for DUT
                                     which is to match beacon match BSSID0
    RESERVED12[15..12]           - (RO) Reserved bits
    AID_BSSID1[27..16]           - (RW) Beacon AID for DUT
                                     which is to match beacon match BSSID1
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_B01AR_B1AR_AID_BSSID1_ADDR             BN1_WF_RMAC_TOP_B01AR_B1AR_ADDR
#define BN1_WF_RMAC_TOP_B01AR_B1AR_AID_BSSID1_MASK             0x0FFF0000                // AID_BSSID1[27..16]
#define BN1_WF_RMAC_TOP_B01AR_B1AR_AID_BSSID1_SHFT             16
#define BN1_WF_RMAC_TOP_B01AR_B1AR_AID_BSSID0_ADDR             BN1_WF_RMAC_TOP_B01AR_B1AR_ADDR
#define BN1_WF_RMAC_TOP_B01AR_B1AR_AID_BSSID0_MASK             0x00000FFF                // AID_BSSID0[11..0]
#define BN1_WF_RMAC_TOP_B01AR_B1AR_AID_BSSID0_SHFT             0

/* =====================================================================================

  ---B23AR_B1AR (0x820f5000 + 0x294)---

    AID_BSSID2[11..0]            - (RW) Beacon AID for DUT
                                     which is to match beacon match BSSID2
    RESERVED12[15..12]           - (RO) Reserved bits
    AID_BSSID3[27..16]           - (RW) Beacon AID for DUT
                                     which is to match beacon match BSSID3
                                     Note: Not valid in MT7603/MT7628
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_B23AR_B1AR_AID_BSSID3_ADDR             BN1_WF_RMAC_TOP_B23AR_B1AR_ADDR
#define BN1_WF_RMAC_TOP_B23AR_B1AR_AID_BSSID3_MASK             0x0FFF0000                // AID_BSSID3[27..16]
#define BN1_WF_RMAC_TOP_B23AR_B1AR_AID_BSSID3_SHFT             16
#define BN1_WF_RMAC_TOP_B23AR_B1AR_AID_BSSID2_ADDR             BN1_WF_RMAC_TOP_B23AR_B1AR_ADDR
#define BN1_WF_RMAC_TOP_B23AR_B1AR_AID_BSSID2_MASK             0x00000FFF                // AID_BSSID2[11..0]
#define BN1_WF_RMAC_TOP_B23AR_B1AR_AID_BSSID2_SHFT             0

/* =====================================================================================

  ---MBSSIDACT0 (0x820f5000 + 0x298)---

    TIM_METHOD_B_N0_BSSID0[7..0] - (RW) TIM parsing for BSSID0
                                     N0 is Max possible nontransmitted BSSID number, is integer power of 2
    TIM_METHOD_B_EN_BSSID0[8]    - (RW) Enable TIM element parsing by method B
                                     0: Disable
                                     1: Enable
    RESERVED9[15..9]             - (RO) Reserved bits
    TIM_METHOD_B_N0_BSSID1[23..16] - (RW) TIM parsing for BSSID1
                                     N0 is Max possible nontransmitted BSSID number, is integer power of 2
    TIM_METHOD_B_EN_BSSID1[24]   - (RW) Enable TIM element parsing by method B
                                     0: Disable
                                     1: Enable
    RESERVED25[31..25]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDACT0_TIM_METHOD_B_EN_BSSID1_ADDR BN1_WF_RMAC_TOP_MBSSIDACT0_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDACT0_TIM_METHOD_B_EN_BSSID1_MASK 0x01000000                // TIM_METHOD_B_EN_BSSID1[24]
#define BN1_WF_RMAC_TOP_MBSSIDACT0_TIM_METHOD_B_EN_BSSID1_SHFT 24
#define BN1_WF_RMAC_TOP_MBSSIDACT0_TIM_METHOD_B_N0_BSSID1_ADDR BN1_WF_RMAC_TOP_MBSSIDACT0_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDACT0_TIM_METHOD_B_N0_BSSID1_MASK 0x00FF0000                // TIM_METHOD_B_N0_BSSID1[23..16]
#define BN1_WF_RMAC_TOP_MBSSIDACT0_TIM_METHOD_B_N0_BSSID1_SHFT 16
#define BN1_WF_RMAC_TOP_MBSSIDACT0_TIM_METHOD_B_EN_BSSID0_ADDR BN1_WF_RMAC_TOP_MBSSIDACT0_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDACT0_TIM_METHOD_B_EN_BSSID0_MASK 0x00000100                // TIM_METHOD_B_EN_BSSID0[8]
#define BN1_WF_RMAC_TOP_MBSSIDACT0_TIM_METHOD_B_EN_BSSID0_SHFT 8
#define BN1_WF_RMAC_TOP_MBSSIDACT0_TIM_METHOD_B_N0_BSSID0_ADDR BN1_WF_RMAC_TOP_MBSSIDACT0_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDACT0_TIM_METHOD_B_N0_BSSID0_MASK 0x000000FF                // TIM_METHOD_B_N0_BSSID0[7..0]
#define BN1_WF_RMAC_TOP_MBSSIDACT0_TIM_METHOD_B_N0_BSSID0_SHFT 0

/* =====================================================================================

  ---MBSSIDACT1 (0x820f5000 + 0x29C)---

    TIM_METHOD_B_N0_BSSID2[7..0] - (RW) TIM parsing for BSSID2
                                     N0 is Max possible nontransmitted BSSID number, is integer power of 2
    TIM_METHOD_B_EN_BSSID2[8]    - (RW) Enable TIM element parsing by method B
                                     0: Disable
                                     1: Enable
    RESERVED9[15..9]             - (RO) Reserved bits
    TIM_METHOD_B_N0_BSSID3[23..16] - (RW) TIM parsing for BSSID3
                                     N0 is Max possible nontransmitted BSSID number, is integer power of 2
    TIM_METHOD_B_EN_BSSID3[24]   - (RW) Enable TIM element parsing by method B
                                     0: Disable
                                     1: Enable
    RESERVED25[31..25]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDACT1_TIM_METHOD_B_EN_BSSID3_ADDR BN1_WF_RMAC_TOP_MBSSIDACT1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDACT1_TIM_METHOD_B_EN_BSSID3_MASK 0x01000000                // TIM_METHOD_B_EN_BSSID3[24]
#define BN1_WF_RMAC_TOP_MBSSIDACT1_TIM_METHOD_B_EN_BSSID3_SHFT 24
#define BN1_WF_RMAC_TOP_MBSSIDACT1_TIM_METHOD_B_N0_BSSID3_ADDR BN1_WF_RMAC_TOP_MBSSIDACT1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDACT1_TIM_METHOD_B_N0_BSSID3_MASK 0x00FF0000                // TIM_METHOD_B_N0_BSSID3[23..16]
#define BN1_WF_RMAC_TOP_MBSSIDACT1_TIM_METHOD_B_N0_BSSID3_SHFT 16
#define BN1_WF_RMAC_TOP_MBSSIDACT1_TIM_METHOD_B_EN_BSSID2_ADDR BN1_WF_RMAC_TOP_MBSSIDACT1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDACT1_TIM_METHOD_B_EN_BSSID2_MASK 0x00000100                // TIM_METHOD_B_EN_BSSID2[8]
#define BN1_WF_RMAC_TOP_MBSSIDACT1_TIM_METHOD_B_EN_BSSID2_SHFT 8
#define BN1_WF_RMAC_TOP_MBSSIDACT1_TIM_METHOD_B_N0_BSSID2_ADDR BN1_WF_RMAC_TOP_MBSSIDACT1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDACT1_TIM_METHOD_B_N0_BSSID2_MASK 0x000000FF                // TIM_METHOD_B_N0_BSSID2[7..0]
#define BN1_WF_RMAC_TOP_MBSSIDACT1_TIM_METHOD_B_N0_BSSID2_SHFT 0

/* =====================================================================================

  ---MBSSID_IDX (0x820f5000 + 0x2A0)---

    MBSSID_IDX_BSSID0[7..0]      - (RW) MBSSID index which DUT connected for BSSID0
    MBSSID_IDX_BSSID1[15..8]     - (RW) MBSSID index which DUT connected for BSSID1
    MBSSID_IDX_BSSID2[23..16]    - (RW) MBSSID index which DUT connected for BSSID2
    MBSSID_IDX_BSSID3[31..24]    - (RW) MBSSID index which DUT connected for BSSID3

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSID_IDX_MBSSID_IDX_BSSID3_ADDR      BN1_WF_RMAC_TOP_MBSSID_IDX_ADDR
#define BN1_WF_RMAC_TOP_MBSSID_IDX_MBSSID_IDX_BSSID3_MASK      0xFF000000                // MBSSID_IDX_BSSID3[31..24]
#define BN1_WF_RMAC_TOP_MBSSID_IDX_MBSSID_IDX_BSSID3_SHFT      24
#define BN1_WF_RMAC_TOP_MBSSID_IDX_MBSSID_IDX_BSSID2_ADDR      BN1_WF_RMAC_TOP_MBSSID_IDX_ADDR
#define BN1_WF_RMAC_TOP_MBSSID_IDX_MBSSID_IDX_BSSID2_MASK      0x00FF0000                // MBSSID_IDX_BSSID2[23..16]
#define BN1_WF_RMAC_TOP_MBSSID_IDX_MBSSID_IDX_BSSID2_SHFT      16
#define BN1_WF_RMAC_TOP_MBSSID_IDX_MBSSID_IDX_BSSID1_ADDR      BN1_WF_RMAC_TOP_MBSSID_IDX_ADDR
#define BN1_WF_RMAC_TOP_MBSSID_IDX_MBSSID_IDX_BSSID1_MASK      0x0000FF00                // MBSSID_IDX_BSSID1[15..8]
#define BN1_WF_RMAC_TOP_MBSSID_IDX_MBSSID_IDX_BSSID1_SHFT      8
#define BN1_WF_RMAC_TOP_MBSSID_IDX_MBSSID_IDX_BSSID0_ADDR      BN1_WF_RMAC_TOP_MBSSID_IDX_ADDR
#define BN1_WF_RMAC_TOP_MBSSID_IDX_MBSSID_IDX_BSSID0_MASK      0x000000FF                // MBSSID_IDX_BSSID0[7..0]
#define BN1_WF_RMAC_TOP_MBSSID_IDX_MBSSID_IDX_BSSID0_SHFT      0

/* =====================================================================================

  ---PQC_OPT (0x820f5000 + 0x2B0)---

    PQC_TSF_OSFT_UPD[0]          - (RW) PQC rollback Control
    PQC_RXSTREAM_UPD[1]          - (RW) PQC rollback Control
    RESERVED2[2]                 - (RO) Reserved bits
    PQC_RDP_MISC_UPD[3]          - (RW) PQC rollback Control
    RESERVED4[27..4]             - (RO) Reserved bits
    TRIG_RX_UPD_EN[28]           - (RW) Force Trig RX always valid
    BSS_COLOR_CHK_LSIG_EN[29]    - (RW) BSS_COLOR check LSIG enable
    BSSID_ADDR_CMP_ORDER[30]     - (RW) BSSID address compare order select
                                     1: LSB
                                     0: MSB
    A3_MATCH_BAND_SEL[31]        - (RW) no used

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_PQC_OPT_A3_MATCH_BAND_SEL_ADDR         BN1_WF_RMAC_TOP_PQC_OPT_ADDR
#define BN1_WF_RMAC_TOP_PQC_OPT_A3_MATCH_BAND_SEL_MASK         0x80000000                // A3_MATCH_BAND_SEL[31]
#define BN1_WF_RMAC_TOP_PQC_OPT_A3_MATCH_BAND_SEL_SHFT         31
#define BN1_WF_RMAC_TOP_PQC_OPT_BSSID_ADDR_CMP_ORDER_ADDR      BN1_WF_RMAC_TOP_PQC_OPT_ADDR
#define BN1_WF_RMAC_TOP_PQC_OPT_BSSID_ADDR_CMP_ORDER_MASK      0x40000000                // BSSID_ADDR_CMP_ORDER[30]
#define BN1_WF_RMAC_TOP_PQC_OPT_BSSID_ADDR_CMP_ORDER_SHFT      30
#define BN1_WF_RMAC_TOP_PQC_OPT_BSS_COLOR_CHK_LSIG_EN_ADDR     BN1_WF_RMAC_TOP_PQC_OPT_ADDR
#define BN1_WF_RMAC_TOP_PQC_OPT_BSS_COLOR_CHK_LSIG_EN_MASK     0x20000000                // BSS_COLOR_CHK_LSIG_EN[29]
#define BN1_WF_RMAC_TOP_PQC_OPT_BSS_COLOR_CHK_LSIG_EN_SHFT     29
#define BN1_WF_RMAC_TOP_PQC_OPT_TRIG_RX_UPD_EN_ADDR            BN1_WF_RMAC_TOP_PQC_OPT_ADDR
#define BN1_WF_RMAC_TOP_PQC_OPT_TRIG_RX_UPD_EN_MASK            0x10000000                // TRIG_RX_UPD_EN[28]
#define BN1_WF_RMAC_TOP_PQC_OPT_TRIG_RX_UPD_EN_SHFT            28
#define BN1_WF_RMAC_TOP_PQC_OPT_PQC_RDP_MISC_UPD_ADDR          BN1_WF_RMAC_TOP_PQC_OPT_ADDR
#define BN1_WF_RMAC_TOP_PQC_OPT_PQC_RDP_MISC_UPD_MASK          0x00000008                // PQC_RDP_MISC_UPD[3]
#define BN1_WF_RMAC_TOP_PQC_OPT_PQC_RDP_MISC_UPD_SHFT          3
#define BN1_WF_RMAC_TOP_PQC_OPT_PQC_RXSTREAM_UPD_ADDR          BN1_WF_RMAC_TOP_PQC_OPT_ADDR
#define BN1_WF_RMAC_TOP_PQC_OPT_PQC_RXSTREAM_UPD_MASK          0x00000002                // PQC_RXSTREAM_UPD[1]
#define BN1_WF_RMAC_TOP_PQC_OPT_PQC_RXSTREAM_UPD_SHFT          1
#define BN1_WF_RMAC_TOP_PQC_OPT_PQC_TSF_OSFT_UPD_ADDR          BN1_WF_RMAC_TOP_PQC_OPT_ADDR
#define BN1_WF_RMAC_TOP_PQC_OPT_PQC_TSF_OSFT_UPD_MASK          0x00000001                // PQC_TSF_OSFT_UPD[0]
#define BN1_WF_RMAC_TOP_PQC_OPT_PQC_TSF_OSFT_UPD_SHFT          0

/* =====================================================================================

  ---MAR0 (0x820f5000 + 0x2C0)---

    MULTICAST_ADDR_31_0[31..0]   - (RW) Allowed multicast address bits 31~0.

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MAR0_MULTICAST_ADDR_31_0_ADDR          BN1_WF_RMAC_TOP_MAR0_ADDR
#define BN1_WF_RMAC_TOP_MAR0_MULTICAST_ADDR_31_0_MASK          0xFFFFFFFF                // MULTICAST_ADDR_31_0[31..0]
#define BN1_WF_RMAC_TOP_MAR0_MULTICAST_ADDR_31_0_SHFT          0

/* =====================================================================================

  ---MAR1 (0x820f5000 + 0x2C4)---

    MULTICAST_ADDR_47_32[15..0]  - (RW) Allowed multicast address bits 47~32.
    ACCESS_START[16]             - (RW) Multicast address access command and status.
                                     When write, 1 indicates to start the address table command access.
                                     When read,1 indicates command is busy
    READWRITE[17]                - (RW) Access command of the address table
                                     0:Read
                                     1:Write
    RESERVED18[23..18]           - (RO) Reserved bits
    MUTICAST_ADDR_INDEX[29..24]  - (RW) Multicast address index. 
                                     Total 32 indexes (0~31, other values are invalid) for MT6630/MT7603/MT7637.
                                     Total 48 index (0~47, other values are invalid) for MT7628/MT7663
                                     Total 64 index for MT7615/MT6632/MT7668/MT7622
    MULTICAST_ADDR_GROUP[31..30] - (RW) The address group & mode for storing, 0 = normal mode access, 1~3=hash mode access
                                     2'd0: store entrie addr (normal mode)
                                     2'd1: store hashed addr in BSSID1 group(hash mode)
                                     2'd2: store hashed addr in BSSID2 group(hash mode)
                                     2'd3: store hashed addr in BSSID3 group(hash mode)

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MAR1_MULTICAST_ADDR_GROUP_ADDR         BN1_WF_RMAC_TOP_MAR1_ADDR
#define BN1_WF_RMAC_TOP_MAR1_MULTICAST_ADDR_GROUP_MASK         0xC0000000                // MULTICAST_ADDR_GROUP[31..30]
#define BN1_WF_RMAC_TOP_MAR1_MULTICAST_ADDR_GROUP_SHFT         30
#define BN1_WF_RMAC_TOP_MAR1_MUTICAST_ADDR_INDEX_ADDR          BN1_WF_RMAC_TOP_MAR1_ADDR
#define BN1_WF_RMAC_TOP_MAR1_MUTICAST_ADDR_INDEX_MASK          0x3F000000                // MUTICAST_ADDR_INDEX[29..24]
#define BN1_WF_RMAC_TOP_MAR1_MUTICAST_ADDR_INDEX_SHFT          24
#define BN1_WF_RMAC_TOP_MAR1_READWRITE_ADDR                    BN1_WF_RMAC_TOP_MAR1_ADDR
#define BN1_WF_RMAC_TOP_MAR1_READWRITE_MASK                    0x00020000                // READWRITE[17]
#define BN1_WF_RMAC_TOP_MAR1_READWRITE_SHFT                    17
#define BN1_WF_RMAC_TOP_MAR1_ACCESS_START_ADDR                 BN1_WF_RMAC_TOP_MAR1_ADDR
#define BN1_WF_RMAC_TOP_MAR1_ACCESS_START_MASK                 0x00010000                // ACCESS_START[16]
#define BN1_WF_RMAC_TOP_MAR1_ACCESS_START_SHFT                 16
#define BN1_WF_RMAC_TOP_MAR1_MULTICAST_ADDR_47_32_ADDR         BN1_WF_RMAC_TOP_MAR1_ADDR
#define BN1_WF_RMAC_TOP_MAR1_MULTICAST_ADDR_47_32_MASK         0x0000FFFF                // MULTICAST_ADDR_47_32[15..0]
#define BN1_WF_RMAC_TOP_MAR1_MULTICAST_ADDR_47_32_SHFT         0

/* =====================================================================================

  ---MUARBR0 (0x820f5000 + 0x2C8)---

    MUARBR_31_0[31..0]           - (RW) Backup/Restore MUAR table
                                     For backup: this CR reture's MUAR table entry's 32-bit LSB content. Note, read this CR will not increase 1 for read entry index.
                                     For restore: write this CR, MUAR table entry's 32-bit LSB will be overwrite.  Note, write this CR will not increase 1 for write entry index.
                                     even address for OMAC[47:0]: EX: addr0, addr2 ,xxx, addr62
                                     odd address for BSSID_IDX[1:0]: EX: addr1, addr3,xxx, addr63
                                     2'b00: BSSID0
                                     2'b01: BSSID1
                                     2'b10: BSSID2
                                     2'b11: BSSID3

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MUARBR0_MUARBR_31_0_ADDR               BN1_WF_RMAC_TOP_MUARBR0_ADDR
#define BN1_WF_RMAC_TOP_MUARBR0_MUARBR_31_0_MASK               0xFFFFFFFF                // MUARBR_31_0[31..0]
#define BN1_WF_RMAC_TOP_MUARBR0_MUARBR_31_0_SHFT               0

/* =====================================================================================

  ---MUARBR1 (0x820f5000 + 0x2CC)---

    MUARBR_47_32[15..0]          - (RW) Backup/Restore MUAR table
                                     For backup: this CR reture's MUAR table entry's 16-bit MSB content. Note, read this CR will increase 1 for read entry index.
                                     For restore: write this CR, MUAR table entry's 16-bit MSB will be overwrite. Note, write this CR will increase 1 for write entry index (MUARBR_IDX_RST should be 0).
                                     even address for OMAC[47:0]: EX: addr0, addr2,xxx, addr62
                                     odd address for BSSID_IDX[1:0]: EX: addr1, addr3, xxx, addr63
                                     2'b00: BSSID0
                                     2'b01: BSSID1
                                     2'b10: BSSID2
                                     2'b11: BSSID3
    RESERVED16[30..16]           - (RO) Reserved bits
    MUARBR_IDX_RST[31]           - (WO) Backup/Restore MUAR table Write 1 to clear MUAR table entry index value

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MUARBR1_MUARBR_IDX_RST_ADDR            BN1_WF_RMAC_TOP_MUARBR1_ADDR
#define BN1_WF_RMAC_TOP_MUARBR1_MUARBR_IDX_RST_MASK            0x80000000                // MUARBR_IDX_RST[31]
#define BN1_WF_RMAC_TOP_MUARBR1_MUARBR_IDX_RST_SHFT            31
#define BN1_WF_RMAC_TOP_MUARBR1_MUARBR_47_32_ADDR              BN1_WF_RMAC_TOP_MUARBR1_ADDR
#define BN1_WF_RMAC_TOP_MUARBR1_MUARBR_47_32_MASK              0x0000FFFF                // MUARBR_47_32[15..0]
#define BN1_WF_RMAC_TOP_MUARBR1_MUARBR_47_32_SHFT              0

/* =====================================================================================

  ---MBSSIDEXT1_0 (0x820f5000 + 0x300)---

    MBSSIDEXT1_0[31..0]          - (RW) Multiple BSSID extension CR
                                     MBSSID_EXT_1[31:0] 
                                     (Note: MBSSID not support in MT6632)

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT1_0_MBSSIDEXT1_0_ADDR         BN1_WF_RMAC_TOP_MBSSIDEXT1_0_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT1_0_MBSSIDEXT1_0_MASK         0xFFFFFFFF                // MBSSIDEXT1_0[31..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT1_0_MBSSIDEXT1_0_SHFT         0

/* =====================================================================================

  ---MBSSIDEXT1_1 (0x820f5000 + 0x304)---

    MBSSIDEXT1_1[15..0]          - (RW) Multiple BSSID extension CR
                                     MBSSID_EXT_1[47:32]
    RESERVED16[16]               - (RO) Reserved bits
    MBSS_COLOR_0_1_EN[17]        - (RW) MBSSID0 BSS_COLOR Enable bit
    MBSS_COLOR_0_1[23..18]       - (RW) MBSSID0 BSS_COLOR
    RESERVED24[27..24]           - (RO) Reserved bits
    MBSS_PCOLOR_0_1_EN[28]       - (RW) MBSSID0 Partial BSS_COLOR Enable bit
    RESERVED29[31..29]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT1_1_MBSS_PCOLOR_0_1_EN_ADDR   BN1_WF_RMAC_TOP_MBSSIDEXT1_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT1_1_MBSS_PCOLOR_0_1_EN_MASK   0x10000000                // MBSS_PCOLOR_0_1_EN[28]
#define BN1_WF_RMAC_TOP_MBSSIDEXT1_1_MBSS_PCOLOR_0_1_EN_SHFT   28
#define BN1_WF_RMAC_TOP_MBSSIDEXT1_1_MBSS_COLOR_0_1_ADDR       BN1_WF_RMAC_TOP_MBSSIDEXT1_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT1_1_MBSS_COLOR_0_1_MASK       0x00FC0000                // MBSS_COLOR_0_1[23..18]
#define BN1_WF_RMAC_TOP_MBSSIDEXT1_1_MBSS_COLOR_0_1_SHFT       18
#define BN1_WF_RMAC_TOP_MBSSIDEXT1_1_MBSS_COLOR_0_1_EN_ADDR    BN1_WF_RMAC_TOP_MBSSIDEXT1_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT1_1_MBSS_COLOR_0_1_EN_MASK    0x00020000                // MBSS_COLOR_0_1_EN[17]
#define BN1_WF_RMAC_TOP_MBSSIDEXT1_1_MBSS_COLOR_0_1_EN_SHFT    17
#define BN1_WF_RMAC_TOP_MBSSIDEXT1_1_MBSSIDEXT1_1_ADDR         BN1_WF_RMAC_TOP_MBSSIDEXT1_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT1_1_MBSSIDEXT1_1_MASK         0x0000FFFF                // MBSSIDEXT1_1[15..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT1_1_MBSSIDEXT1_1_SHFT         0

/* =====================================================================================

  ---MBSSIDEXT2_0 (0x820f5000 + 0x308)---

    MBSSIDEXT2_0[31..0]          - (RW) Multiple BSSID extension CR
                                     MBSSID_EXT_2[31:0]

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT2_0_MBSSIDEXT2_0_ADDR         BN1_WF_RMAC_TOP_MBSSIDEXT2_0_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT2_0_MBSSIDEXT2_0_MASK         0xFFFFFFFF                // MBSSIDEXT2_0[31..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT2_0_MBSSIDEXT2_0_SHFT         0

/* =====================================================================================

  ---MBSSIDEXT2_1 (0x820f5000 + 0x30C)---

    MBSSIDEXT2_1[15..0]          - (RW) Multiple BSSID extension CR
                                     MBSSID_EXT_2[47:32]
    RESERVED16[16]               - (RO) Reserved bits
    MBSS_COLOR_0_2_EN[17]        - (RW) MBSSID0 BSS_COLOR Enable bit
    MBSS_COLOR_0_2[23..18]       - (RW) MBSSID0 BSS_COLOR
    RESERVED24[27..24]           - (RO) Reserved bits
    MBSS_PCOLOR_0_2_EN[28]       - (RW) MBSSID0 Partial BSS_COLOR Enable bit
    RESERVED29[31..29]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT2_1_MBSS_PCOLOR_0_2_EN_ADDR   BN1_WF_RMAC_TOP_MBSSIDEXT2_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT2_1_MBSS_PCOLOR_0_2_EN_MASK   0x10000000                // MBSS_PCOLOR_0_2_EN[28]
#define BN1_WF_RMAC_TOP_MBSSIDEXT2_1_MBSS_PCOLOR_0_2_EN_SHFT   28
#define BN1_WF_RMAC_TOP_MBSSIDEXT2_1_MBSS_COLOR_0_2_ADDR       BN1_WF_RMAC_TOP_MBSSIDEXT2_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT2_1_MBSS_COLOR_0_2_MASK       0x00FC0000                // MBSS_COLOR_0_2[23..18]
#define BN1_WF_RMAC_TOP_MBSSIDEXT2_1_MBSS_COLOR_0_2_SHFT       18
#define BN1_WF_RMAC_TOP_MBSSIDEXT2_1_MBSS_COLOR_0_2_EN_ADDR    BN1_WF_RMAC_TOP_MBSSIDEXT2_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT2_1_MBSS_COLOR_0_2_EN_MASK    0x00020000                // MBSS_COLOR_0_2_EN[17]
#define BN1_WF_RMAC_TOP_MBSSIDEXT2_1_MBSS_COLOR_0_2_EN_SHFT    17
#define BN1_WF_RMAC_TOP_MBSSIDEXT2_1_MBSSIDEXT2_1_ADDR         BN1_WF_RMAC_TOP_MBSSIDEXT2_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT2_1_MBSSIDEXT2_1_MASK         0x0000FFFF                // MBSSIDEXT2_1[15..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT2_1_MBSSIDEXT2_1_SHFT         0

/* =====================================================================================

  ---MBSSIDEXT3_0 (0x820f5000 + 0x310)---

    MBSSIDEXT3_0[31..0]          - (RW) Multiple BSSID extension CR
                                     MBSSID_EXT_3[31:0]

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT3_0_MBSSIDEXT3_0_ADDR         BN1_WF_RMAC_TOP_MBSSIDEXT3_0_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT3_0_MBSSIDEXT3_0_MASK         0xFFFFFFFF                // MBSSIDEXT3_0[31..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT3_0_MBSSIDEXT3_0_SHFT         0

/* =====================================================================================

  ---MBSSIDEXT3_1 (0x820f5000 + 0x314)---

    MBSSIDEXT3_1[15..0]          - (RW) Multiple BSSID extension CR
                                     MBSSID_EXT_3[47:32]
    RESERVED16[16]               - (RO) Reserved bits
    MBSS_COLOR_0_3_EN[17]        - (RW) MBSSID0 BSS_COLOR Enable bit
    MBSS_COLOR_0_3[23..18]       - (RW) MBSSID0 BSS_COLOR
    RESERVED24[27..24]           - (RO) Reserved bits
    MBSS_PCOLOR_0_3_EN[28]       - (RW) MBSSID0 Partial BSS_COLOR Enable bit
    RESERVED29[31..29]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT3_1_MBSS_PCOLOR_0_3_EN_ADDR   BN1_WF_RMAC_TOP_MBSSIDEXT3_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT3_1_MBSS_PCOLOR_0_3_EN_MASK   0x10000000                // MBSS_PCOLOR_0_3_EN[28]
#define BN1_WF_RMAC_TOP_MBSSIDEXT3_1_MBSS_PCOLOR_0_3_EN_SHFT   28
#define BN1_WF_RMAC_TOP_MBSSIDEXT3_1_MBSS_COLOR_0_3_ADDR       BN1_WF_RMAC_TOP_MBSSIDEXT3_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT3_1_MBSS_COLOR_0_3_MASK       0x00FC0000                // MBSS_COLOR_0_3[23..18]
#define BN1_WF_RMAC_TOP_MBSSIDEXT3_1_MBSS_COLOR_0_3_SHFT       18
#define BN1_WF_RMAC_TOP_MBSSIDEXT3_1_MBSS_COLOR_0_3_EN_ADDR    BN1_WF_RMAC_TOP_MBSSIDEXT3_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT3_1_MBSS_COLOR_0_3_EN_MASK    0x00020000                // MBSS_COLOR_0_3_EN[17]
#define BN1_WF_RMAC_TOP_MBSSIDEXT3_1_MBSS_COLOR_0_3_EN_SHFT    17
#define BN1_WF_RMAC_TOP_MBSSIDEXT3_1_MBSSIDEXT3_1_ADDR         BN1_WF_RMAC_TOP_MBSSIDEXT3_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT3_1_MBSSIDEXT3_1_MASK         0x0000FFFF                // MBSSIDEXT3_1[15..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT3_1_MBSSIDEXT3_1_SHFT         0

/* =====================================================================================

  ---MBSSIDEXT4_0 (0x820f5000 + 0x318)---

    MBSSIDEXT4_0[31..0]          - (RW) Multiple BSSID extension CR
                                     MBSSID_EXT_4[31:0]

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT4_0_MBSSIDEXT4_0_ADDR         BN1_WF_RMAC_TOP_MBSSIDEXT4_0_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT4_0_MBSSIDEXT4_0_MASK         0xFFFFFFFF                // MBSSIDEXT4_0[31..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT4_0_MBSSIDEXT4_0_SHFT         0

/* =====================================================================================

  ---MBSSIDEXT4_1 (0x820f5000 + 0x31C)---

    MBSSIDEXT4_1[15..0]          - (RW) Multiple BSSID extension CR
                                     MBSSID_EXT_4[47:32]
    RESERVED16[16]               - (RO) Reserved bits
    MBSS_COLOR_0_4_EN[17]        - (RW) MBSSID0 BSS_COLOR Enable bit
    MBSS_COLOR_0_4[23..18]       - (RW) MBSSID0 BSS_COLOR
    RESERVED24[27..24]           - (RO) Reserved bits
    MBSS_PCOLOR_0_4_EN[28]       - (RW) MBSSID0 Partial BSS_COLOR Enable bit
    RESERVED29[31..29]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT4_1_MBSS_PCOLOR_0_4_EN_ADDR   BN1_WF_RMAC_TOP_MBSSIDEXT4_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT4_1_MBSS_PCOLOR_0_4_EN_MASK   0x10000000                // MBSS_PCOLOR_0_4_EN[28]
#define BN1_WF_RMAC_TOP_MBSSIDEXT4_1_MBSS_PCOLOR_0_4_EN_SHFT   28
#define BN1_WF_RMAC_TOP_MBSSIDEXT4_1_MBSS_COLOR_0_4_ADDR       BN1_WF_RMAC_TOP_MBSSIDEXT4_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT4_1_MBSS_COLOR_0_4_MASK       0x00FC0000                // MBSS_COLOR_0_4[23..18]
#define BN1_WF_RMAC_TOP_MBSSIDEXT4_1_MBSS_COLOR_0_4_SHFT       18
#define BN1_WF_RMAC_TOP_MBSSIDEXT4_1_MBSS_COLOR_0_4_EN_ADDR    BN1_WF_RMAC_TOP_MBSSIDEXT4_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT4_1_MBSS_COLOR_0_4_EN_MASK    0x00020000                // MBSS_COLOR_0_4_EN[17]
#define BN1_WF_RMAC_TOP_MBSSIDEXT4_1_MBSS_COLOR_0_4_EN_SHFT    17
#define BN1_WF_RMAC_TOP_MBSSIDEXT4_1_MBSSIDEXT4_1_ADDR         BN1_WF_RMAC_TOP_MBSSIDEXT4_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT4_1_MBSSIDEXT4_1_MASK         0x0000FFFF                // MBSSIDEXT4_1[15..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT4_1_MBSSIDEXT4_1_SHFT         0

/* =====================================================================================

  ---MBSSIDEXT5_0 (0x820f5000 + 0x320)---

    MBSSIDEXT5_0[31..0]          - (RW) Multiple BSSID extension CR
                                     MBSSID_EXT_5[31:0]

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT5_0_MBSSIDEXT5_0_ADDR         BN1_WF_RMAC_TOP_MBSSIDEXT5_0_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT5_0_MBSSIDEXT5_0_MASK         0xFFFFFFFF                // MBSSIDEXT5_0[31..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT5_0_MBSSIDEXT5_0_SHFT         0

/* =====================================================================================

  ---MBSSIDEXT5_1 (0x820f5000 + 0x324)---

    MBSSIDEXT5_1[15..0]          - (RW) Multiple BSSID extension CR
                                     MBSSID_EXT_5[47:32]
    RESERVED16[16]               - (RO) Reserved bits
    MBSS_COLOR_0_5_EN[17]        - (RW) MBSSID0 BSS_COLOR Enable bit
    MBSS_COLOR_0_5[23..18]       - (RW) MBSSID0 BSS_COLOR
    RESERVED24[27..24]           - (RO) Reserved bits
    MBSS_PCOLOR_0_5_EN[28]       - (RW) MBSSID0 Partial BSS_COLOR Enable bit
    RESERVED29[31..29]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT5_1_MBSS_PCOLOR_0_5_EN_ADDR   BN1_WF_RMAC_TOP_MBSSIDEXT5_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT5_1_MBSS_PCOLOR_0_5_EN_MASK   0x10000000                // MBSS_PCOLOR_0_5_EN[28]
#define BN1_WF_RMAC_TOP_MBSSIDEXT5_1_MBSS_PCOLOR_0_5_EN_SHFT   28
#define BN1_WF_RMAC_TOP_MBSSIDEXT5_1_MBSS_COLOR_0_5_ADDR       BN1_WF_RMAC_TOP_MBSSIDEXT5_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT5_1_MBSS_COLOR_0_5_MASK       0x00FC0000                // MBSS_COLOR_0_5[23..18]
#define BN1_WF_RMAC_TOP_MBSSIDEXT5_1_MBSS_COLOR_0_5_SHFT       18
#define BN1_WF_RMAC_TOP_MBSSIDEXT5_1_MBSS_COLOR_0_5_EN_ADDR    BN1_WF_RMAC_TOP_MBSSIDEXT5_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT5_1_MBSS_COLOR_0_5_EN_MASK    0x00020000                // MBSS_COLOR_0_5_EN[17]
#define BN1_WF_RMAC_TOP_MBSSIDEXT5_1_MBSS_COLOR_0_5_EN_SHFT    17
#define BN1_WF_RMAC_TOP_MBSSIDEXT5_1_MBSSIDEXT5_1_ADDR         BN1_WF_RMAC_TOP_MBSSIDEXT5_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT5_1_MBSSIDEXT5_1_MASK         0x0000FFFF                // MBSSIDEXT5_1[15..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT5_1_MBSSIDEXT5_1_SHFT         0

/* =====================================================================================

  ---MBSSIDEXT6_0 (0x820f5000 + 0x328)---

    MBSSIDEXT6_0[31..0]          - (RW) Multiple BSSID extension CR
                                     MBSSID_EXT_6[31:0]

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT6_0_MBSSIDEXT6_0_ADDR         BN1_WF_RMAC_TOP_MBSSIDEXT6_0_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT6_0_MBSSIDEXT6_0_MASK         0xFFFFFFFF                // MBSSIDEXT6_0[31..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT6_0_MBSSIDEXT6_0_SHFT         0

/* =====================================================================================

  ---MBSSIDEXT6_1 (0x820f5000 + 0x32C)---

    MBSSIDEXT6_1[15..0]          - (RW) Multiple BSSID extension CR
                                     MBSSID_EXT_6[47:32]
    RESERVED16[16]               - (RO) Reserved bits
    MBSS_COLOR_0_6_EN[17]        - (RW) MBSSID0 BSS_COLOR Enable bit
    MBSS_COLOR_0_6[23..18]       - (RW) MBSSID0 BSS_COLOR
    RESERVED24[27..24]           - (RO) Reserved bits
    MBSS_PCOLOR_0_6_EN[28]       - (RW) MBSSID0 Partial BSS_COLOR Enable bit
    RESERVED29[31..29]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT6_1_MBSS_PCOLOR_0_6_EN_ADDR   BN1_WF_RMAC_TOP_MBSSIDEXT6_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT6_1_MBSS_PCOLOR_0_6_EN_MASK   0x10000000                // MBSS_PCOLOR_0_6_EN[28]
#define BN1_WF_RMAC_TOP_MBSSIDEXT6_1_MBSS_PCOLOR_0_6_EN_SHFT   28
#define BN1_WF_RMAC_TOP_MBSSIDEXT6_1_MBSS_COLOR_0_6_ADDR       BN1_WF_RMAC_TOP_MBSSIDEXT6_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT6_1_MBSS_COLOR_0_6_MASK       0x00FC0000                // MBSS_COLOR_0_6[23..18]
#define BN1_WF_RMAC_TOP_MBSSIDEXT6_1_MBSS_COLOR_0_6_SHFT       18
#define BN1_WF_RMAC_TOP_MBSSIDEXT6_1_MBSS_COLOR_0_6_EN_ADDR    BN1_WF_RMAC_TOP_MBSSIDEXT6_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT6_1_MBSS_COLOR_0_6_EN_MASK    0x00020000                // MBSS_COLOR_0_6_EN[17]
#define BN1_WF_RMAC_TOP_MBSSIDEXT6_1_MBSS_COLOR_0_6_EN_SHFT    17
#define BN1_WF_RMAC_TOP_MBSSIDEXT6_1_MBSSIDEXT6_1_ADDR         BN1_WF_RMAC_TOP_MBSSIDEXT6_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT6_1_MBSSIDEXT6_1_MASK         0x0000FFFF                // MBSSIDEXT6_1[15..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT6_1_MBSSIDEXT6_1_SHFT         0

/* =====================================================================================

  ---MBSSIDEXT7_0 (0x820f5000 + 0x330)---

    MBSSIDEXT7_0[31..0]          - (RW) Multiple BSSID extension CR
                                     MBSSID_EXT_7[31:0]

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT7_0_MBSSIDEXT7_0_ADDR         BN1_WF_RMAC_TOP_MBSSIDEXT7_0_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT7_0_MBSSIDEXT7_0_MASK         0xFFFFFFFF                // MBSSIDEXT7_0[31..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT7_0_MBSSIDEXT7_0_SHFT         0

/* =====================================================================================

  ---MBSSIDEXT7_1 (0x820f5000 + 0x334)---

    MBSSIDEXT7_1[15..0]          - (RW) Multiple BSSID extension CR
                                     MBSSID_EXT_7[47:32]
    RESERVED16[16]               - (RO) Reserved bits
    MBSS_COLOR_0_7_EN[17]        - (RW) MBSSID0 BSS_COLOR Enable bit
    MBSS_COLOR_0_7[23..18]       - (RW) MBSSID0 BSS_COLOR
    RESERVED24[27..24]           - (RO) Reserved bits
    MBSS_PCOLOR_0_7_EN[28]       - (RW) MBSSID0 Partial BSS_COLOR Enable bit
    RESERVED29[31..29]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT7_1_MBSS_PCOLOR_0_7_EN_ADDR   BN1_WF_RMAC_TOP_MBSSIDEXT7_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT7_1_MBSS_PCOLOR_0_7_EN_MASK   0x10000000                // MBSS_PCOLOR_0_7_EN[28]
#define BN1_WF_RMAC_TOP_MBSSIDEXT7_1_MBSS_PCOLOR_0_7_EN_SHFT   28
#define BN1_WF_RMAC_TOP_MBSSIDEXT7_1_MBSS_COLOR_0_7_ADDR       BN1_WF_RMAC_TOP_MBSSIDEXT7_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT7_1_MBSS_COLOR_0_7_MASK       0x00FC0000                // MBSS_COLOR_0_7[23..18]
#define BN1_WF_RMAC_TOP_MBSSIDEXT7_1_MBSS_COLOR_0_7_SHFT       18
#define BN1_WF_RMAC_TOP_MBSSIDEXT7_1_MBSS_COLOR_0_7_EN_ADDR    BN1_WF_RMAC_TOP_MBSSIDEXT7_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT7_1_MBSS_COLOR_0_7_EN_MASK    0x00020000                // MBSS_COLOR_0_7_EN[17]
#define BN1_WF_RMAC_TOP_MBSSIDEXT7_1_MBSS_COLOR_0_7_EN_SHFT    17
#define BN1_WF_RMAC_TOP_MBSSIDEXT7_1_MBSSIDEXT7_1_ADDR         BN1_WF_RMAC_TOP_MBSSIDEXT7_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT7_1_MBSSIDEXT7_1_MASK         0x0000FFFF                // MBSSIDEXT7_1[15..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT7_1_MBSSIDEXT7_1_SHFT         0

/* =====================================================================================

  ---MBSSIDEXT8_0 (0x820f5000 + 0x338)---

    MBSSIDEXT8_0[31..0]          - (RW) Multiple BSSID extension CR
                                     MBSSID_EXT_8[31:0]

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT8_0_MBSSIDEXT8_0_ADDR         BN1_WF_RMAC_TOP_MBSSIDEXT8_0_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT8_0_MBSSIDEXT8_0_MASK         0xFFFFFFFF                // MBSSIDEXT8_0[31..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT8_0_MBSSIDEXT8_0_SHFT         0

/* =====================================================================================

  ---MBSSIDEXT8_1 (0x820f5000 + 0x33C)---

    MBSSIDEXT8_1[15..0]          - (RW) Multiple BSSID extension CR
                                     MBSSID_EXT_8[47:32]
    RESERVED16[16]               - (RO) Reserved bits
    MBSS_COLOR_0_8_EN[17]        - (RW) MBSSID0 BSS_COLOR Enable bit
    MBSS_COLOR_0_8[23..18]       - (RW) MBSSID0 BSS_COLOR
    RESERVED24[27..24]           - (RO) Reserved bits
    MBSS_PCOLOR_0_8_EN[28]       - (RW) MBSSID0 Partial BSS_COLOR Enable bit
    RESERVED29[31..29]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT8_1_MBSS_PCOLOR_0_8_EN_ADDR   BN1_WF_RMAC_TOP_MBSSIDEXT8_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT8_1_MBSS_PCOLOR_0_8_EN_MASK   0x10000000                // MBSS_PCOLOR_0_8_EN[28]
#define BN1_WF_RMAC_TOP_MBSSIDEXT8_1_MBSS_PCOLOR_0_8_EN_SHFT   28
#define BN1_WF_RMAC_TOP_MBSSIDEXT8_1_MBSS_COLOR_0_8_ADDR       BN1_WF_RMAC_TOP_MBSSIDEXT8_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT8_1_MBSS_COLOR_0_8_MASK       0x00FC0000                // MBSS_COLOR_0_8[23..18]
#define BN1_WF_RMAC_TOP_MBSSIDEXT8_1_MBSS_COLOR_0_8_SHFT       18
#define BN1_WF_RMAC_TOP_MBSSIDEXT8_1_MBSS_COLOR_0_8_EN_ADDR    BN1_WF_RMAC_TOP_MBSSIDEXT8_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT8_1_MBSS_COLOR_0_8_EN_MASK    0x00020000                // MBSS_COLOR_0_8_EN[17]
#define BN1_WF_RMAC_TOP_MBSSIDEXT8_1_MBSS_COLOR_0_8_EN_SHFT    17
#define BN1_WF_RMAC_TOP_MBSSIDEXT8_1_MBSSIDEXT8_1_ADDR         BN1_WF_RMAC_TOP_MBSSIDEXT8_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT8_1_MBSSIDEXT8_1_MASK         0x0000FFFF                // MBSSIDEXT8_1[15..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT8_1_MBSSIDEXT8_1_SHFT         0

/* =====================================================================================

  ---MBSSIDEXT9_0 (0x820f5000 + 0x340)---

    MBSSIDEXT9_0[31..0]          - (RW) Multiple BSSID extension CR
                                     MBSSID_EXT_9[31:0]

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT9_0_MBSSIDEXT9_0_ADDR         BN1_WF_RMAC_TOP_MBSSIDEXT9_0_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT9_0_MBSSIDEXT9_0_MASK         0xFFFFFFFF                // MBSSIDEXT9_0[31..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT9_0_MBSSIDEXT9_0_SHFT         0

/* =====================================================================================

  ---MBSSIDEXT9_1 (0x820f5000 + 0x344)---

    MBSSIDEXT9_1[15..0]          - (RW) Multiple BSSID extension CR
                                     MBSSID_EXT_9[47:32]
    RESERVED16[16]               - (RO) Reserved bits
    MBSS_COLOR_0_9_EN[17]        - (RW) MBSSID0 BSS_COLOR Enable bit
    MBSS_COLOR_0_9[23..18]       - (RW) MBSSID0 BSS_COLOR
    RESERVED24[27..24]           - (RO) Reserved bits
    MBSS_PCOLOR_0_9_EN[28]       - (RW) MBSSID0 Partial BSS_COLOR Enable bit
    RESERVED29[31..29]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT9_1_MBSS_PCOLOR_0_9_EN_ADDR   BN1_WF_RMAC_TOP_MBSSIDEXT9_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT9_1_MBSS_PCOLOR_0_9_EN_MASK   0x10000000                // MBSS_PCOLOR_0_9_EN[28]
#define BN1_WF_RMAC_TOP_MBSSIDEXT9_1_MBSS_PCOLOR_0_9_EN_SHFT   28
#define BN1_WF_RMAC_TOP_MBSSIDEXT9_1_MBSS_COLOR_0_9_ADDR       BN1_WF_RMAC_TOP_MBSSIDEXT9_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT9_1_MBSS_COLOR_0_9_MASK       0x00FC0000                // MBSS_COLOR_0_9[23..18]
#define BN1_WF_RMAC_TOP_MBSSIDEXT9_1_MBSS_COLOR_0_9_SHFT       18
#define BN1_WF_RMAC_TOP_MBSSIDEXT9_1_MBSS_COLOR_0_9_EN_ADDR    BN1_WF_RMAC_TOP_MBSSIDEXT9_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT9_1_MBSS_COLOR_0_9_EN_MASK    0x00020000                // MBSS_COLOR_0_9_EN[17]
#define BN1_WF_RMAC_TOP_MBSSIDEXT9_1_MBSS_COLOR_0_9_EN_SHFT    17
#define BN1_WF_RMAC_TOP_MBSSIDEXT9_1_MBSSIDEXT9_1_ADDR         BN1_WF_RMAC_TOP_MBSSIDEXT9_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT9_1_MBSSIDEXT9_1_MASK         0x0000FFFF                // MBSSIDEXT9_1[15..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT9_1_MBSSIDEXT9_1_SHFT         0

/* =====================================================================================

  ---MBSSIDEXT10_0 (0x820f5000 + 0x348)---

    MBSSIDEXT10_0[31..0]         - (RW) Multiple BSSID extension CR
                                     MBSSID_EXT_10[31:0]

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT10_0_MBSSIDEXT10_0_ADDR       BN1_WF_RMAC_TOP_MBSSIDEXT10_0_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT10_0_MBSSIDEXT10_0_MASK       0xFFFFFFFF                // MBSSIDEXT10_0[31..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT10_0_MBSSIDEXT10_0_SHFT       0

/* =====================================================================================

  ---MBSSIDEXT10_1 (0x820f5000 + 0x34C)---

    MBSSIDEXT10_1[15..0]         - (RW) Multiple BSSID extension CR
                                     MBSSID_EXT_10[47:32]
    RESERVED16[16]               - (RO) Reserved bits
    MBSS_COLOR_0_10_EN[17]       - (RW) MBSSID0 BSS_COLOR Enable bit
    MBSS_COLOR_0_10[23..18]      - (RW) MBSSID0 BSS_COLOR
    RESERVED24[27..24]           - (RO) Reserved bits
    MBSS_PCOLOR_0_10_EN[28]      - (RW) MBSSID0 Partial BSS_COLOR Enable bit
    RESERVED29[31..29]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT10_1_MBSS_PCOLOR_0_10_EN_ADDR BN1_WF_RMAC_TOP_MBSSIDEXT10_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT10_1_MBSS_PCOLOR_0_10_EN_MASK 0x10000000                // MBSS_PCOLOR_0_10_EN[28]
#define BN1_WF_RMAC_TOP_MBSSIDEXT10_1_MBSS_PCOLOR_0_10_EN_SHFT 28
#define BN1_WF_RMAC_TOP_MBSSIDEXT10_1_MBSS_COLOR_0_10_ADDR     BN1_WF_RMAC_TOP_MBSSIDEXT10_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT10_1_MBSS_COLOR_0_10_MASK     0x00FC0000                // MBSS_COLOR_0_10[23..18]
#define BN1_WF_RMAC_TOP_MBSSIDEXT10_1_MBSS_COLOR_0_10_SHFT     18
#define BN1_WF_RMAC_TOP_MBSSIDEXT10_1_MBSS_COLOR_0_10_EN_ADDR  BN1_WF_RMAC_TOP_MBSSIDEXT10_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT10_1_MBSS_COLOR_0_10_EN_MASK  0x00020000                // MBSS_COLOR_0_10_EN[17]
#define BN1_WF_RMAC_TOP_MBSSIDEXT10_1_MBSS_COLOR_0_10_EN_SHFT  17
#define BN1_WF_RMAC_TOP_MBSSIDEXT10_1_MBSSIDEXT10_1_ADDR       BN1_WF_RMAC_TOP_MBSSIDEXT10_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT10_1_MBSSIDEXT10_1_MASK       0x0000FFFF                // MBSSIDEXT10_1[15..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT10_1_MBSSIDEXT10_1_SHFT       0

/* =====================================================================================

  ---MBSSIDEXT11_0 (0x820f5000 + 0x350)---

    MBSSIDEXT11_0[31..0]         - (RW) Multiple BSSID extension CR
                                     MBSSID_EXT_11[31:0]

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT11_0_MBSSIDEXT11_0_ADDR       BN1_WF_RMAC_TOP_MBSSIDEXT11_0_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT11_0_MBSSIDEXT11_0_MASK       0xFFFFFFFF                // MBSSIDEXT11_0[31..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT11_0_MBSSIDEXT11_0_SHFT       0

/* =====================================================================================

  ---MBSSIDEXT11_1 (0x820f5000 + 0x354)---

    MBSSIDEXT11_1[15..0]         - (RW) Multiple BSSID extension CR
                                     MBSSID_EXT_11[47:32]
    RESERVED16[16]               - (RO) Reserved bits
    MBSS_COLOR_0_11_EN[17]       - (RW) MBSSID0 BSS_COLOR Enable bit
    MBSS_COLOR_0_11[23..18]      - (RW) MBSSID0 BSS_COLOR
    RESERVED24[27..24]           - (RO) Reserved bits
    MBSS_PCOLOR_0_11_EN[28]      - (RW) MBSSID0 Partial BSS_COLOR Enable bit
    RESERVED29[31..29]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT11_1_MBSS_PCOLOR_0_11_EN_ADDR BN1_WF_RMAC_TOP_MBSSIDEXT11_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT11_1_MBSS_PCOLOR_0_11_EN_MASK 0x10000000                // MBSS_PCOLOR_0_11_EN[28]
#define BN1_WF_RMAC_TOP_MBSSIDEXT11_1_MBSS_PCOLOR_0_11_EN_SHFT 28
#define BN1_WF_RMAC_TOP_MBSSIDEXT11_1_MBSS_COLOR_0_11_ADDR     BN1_WF_RMAC_TOP_MBSSIDEXT11_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT11_1_MBSS_COLOR_0_11_MASK     0x00FC0000                // MBSS_COLOR_0_11[23..18]
#define BN1_WF_RMAC_TOP_MBSSIDEXT11_1_MBSS_COLOR_0_11_SHFT     18
#define BN1_WF_RMAC_TOP_MBSSIDEXT11_1_MBSS_COLOR_0_11_EN_ADDR  BN1_WF_RMAC_TOP_MBSSIDEXT11_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT11_1_MBSS_COLOR_0_11_EN_MASK  0x00020000                // MBSS_COLOR_0_11_EN[17]
#define BN1_WF_RMAC_TOP_MBSSIDEXT11_1_MBSS_COLOR_0_11_EN_SHFT  17
#define BN1_WF_RMAC_TOP_MBSSIDEXT11_1_MBSSIDEXT11_1_ADDR       BN1_WF_RMAC_TOP_MBSSIDEXT11_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT11_1_MBSSIDEXT11_1_MASK       0x0000FFFF                // MBSSIDEXT11_1[15..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT11_1_MBSSIDEXT11_1_SHFT       0

/* =====================================================================================

  ---MBSSIDEXT12_0 (0x820f5000 + 0x358)---

    MBSSIDEXT12_0[31..0]         - (RW) Multiple BSSID extension CR
                                     MBSSID_EXT_12[31:0]

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT12_0_MBSSIDEXT12_0_ADDR       BN1_WF_RMAC_TOP_MBSSIDEXT12_0_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT12_0_MBSSIDEXT12_0_MASK       0xFFFFFFFF                // MBSSIDEXT12_0[31..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT12_0_MBSSIDEXT12_0_SHFT       0

/* =====================================================================================

  ---MBSSIDEXT12_1 (0x820f5000 + 0x35C)---

    MBSSIDEXT12_1[15..0]         - (RW) Multiple BSSID extension CR
                                     MBSSID_EXT_12[47:32]
    RESERVED16[16]               - (RO) Reserved bits
    MBSS_COLOR_0_12_EN[17]       - (RW) MBSSID0 BSS_COLOR Enable bit
    MBSS_COLOR_0_12[23..18]      - (RW) MBSSID0 BSS_COLOR
    RESERVED24[27..24]           - (RO) Reserved bits
    MBSS_PCOLOR_0_12_EN[28]      - (RW) MBSSID0 Partial BSS_COLOR Enable bit
    RESERVED29[31..29]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT12_1_MBSS_PCOLOR_0_12_EN_ADDR BN1_WF_RMAC_TOP_MBSSIDEXT12_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT12_1_MBSS_PCOLOR_0_12_EN_MASK 0x10000000                // MBSS_PCOLOR_0_12_EN[28]
#define BN1_WF_RMAC_TOP_MBSSIDEXT12_1_MBSS_PCOLOR_0_12_EN_SHFT 28
#define BN1_WF_RMAC_TOP_MBSSIDEXT12_1_MBSS_COLOR_0_12_ADDR     BN1_WF_RMAC_TOP_MBSSIDEXT12_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT12_1_MBSS_COLOR_0_12_MASK     0x00FC0000                // MBSS_COLOR_0_12[23..18]
#define BN1_WF_RMAC_TOP_MBSSIDEXT12_1_MBSS_COLOR_0_12_SHFT     18
#define BN1_WF_RMAC_TOP_MBSSIDEXT12_1_MBSS_COLOR_0_12_EN_ADDR  BN1_WF_RMAC_TOP_MBSSIDEXT12_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT12_1_MBSS_COLOR_0_12_EN_MASK  0x00020000                // MBSS_COLOR_0_12_EN[17]
#define BN1_WF_RMAC_TOP_MBSSIDEXT12_1_MBSS_COLOR_0_12_EN_SHFT  17
#define BN1_WF_RMAC_TOP_MBSSIDEXT12_1_MBSSIDEXT12_1_ADDR       BN1_WF_RMAC_TOP_MBSSIDEXT12_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT12_1_MBSSIDEXT12_1_MASK       0x0000FFFF                // MBSSIDEXT12_1[15..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT12_1_MBSSIDEXT12_1_SHFT       0

/* =====================================================================================

  ---MBSSIDEXT13_0 (0x820f5000 + 0x360)---

    MBSSIDEXT13_0[31..0]         - (RW) Multiple BSSID extension CR
                                     MBSSID_EXT_13[31:0]

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT13_0_MBSSIDEXT13_0_ADDR       BN1_WF_RMAC_TOP_MBSSIDEXT13_0_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT13_0_MBSSIDEXT13_0_MASK       0xFFFFFFFF                // MBSSIDEXT13_0[31..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT13_0_MBSSIDEXT13_0_SHFT       0

/* =====================================================================================

  ---MBSSIDEXT13_1 (0x820f5000 + 0x364)---

    MBSSIDEXT13_1[15..0]         - (RW) Multiple BSSID extension CR
                                     MBSSID_EXT_13[47:32]
    RESERVED16[16]               - (RO) Reserved bits
    MBSS_COLOR_0_13_EN[17]       - (RW) MBSSID0 BSS_COLOR Enable bit
    MBSS_COLOR_0_13[23..18]      - (RW) MBSSID0 BSS_COLOR
    RESERVED24[27..24]           - (RO) Reserved bits
    MBSS_PCOLOR_0_13_EN[28]      - (RW) MBSSID0 Partial BSS_COLOR Enable bit
    RESERVED29[31..29]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT13_1_MBSS_PCOLOR_0_13_EN_ADDR BN1_WF_RMAC_TOP_MBSSIDEXT13_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT13_1_MBSS_PCOLOR_0_13_EN_MASK 0x10000000                // MBSS_PCOLOR_0_13_EN[28]
#define BN1_WF_RMAC_TOP_MBSSIDEXT13_1_MBSS_PCOLOR_0_13_EN_SHFT 28
#define BN1_WF_RMAC_TOP_MBSSIDEXT13_1_MBSS_COLOR_0_13_ADDR     BN1_WF_RMAC_TOP_MBSSIDEXT13_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT13_1_MBSS_COLOR_0_13_MASK     0x00FC0000                // MBSS_COLOR_0_13[23..18]
#define BN1_WF_RMAC_TOP_MBSSIDEXT13_1_MBSS_COLOR_0_13_SHFT     18
#define BN1_WF_RMAC_TOP_MBSSIDEXT13_1_MBSS_COLOR_0_13_EN_ADDR  BN1_WF_RMAC_TOP_MBSSIDEXT13_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT13_1_MBSS_COLOR_0_13_EN_MASK  0x00020000                // MBSS_COLOR_0_13_EN[17]
#define BN1_WF_RMAC_TOP_MBSSIDEXT13_1_MBSS_COLOR_0_13_EN_SHFT  17
#define BN1_WF_RMAC_TOP_MBSSIDEXT13_1_MBSSIDEXT13_1_ADDR       BN1_WF_RMAC_TOP_MBSSIDEXT13_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT13_1_MBSSIDEXT13_1_MASK       0x0000FFFF                // MBSSIDEXT13_1[15..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT13_1_MBSSIDEXT13_1_SHFT       0

/* =====================================================================================

  ---MBSSIDEXT14_0 (0x820f5000 + 0x368)---

    MBSSIDEXT14_0[31..0]         - (RW) Multiple BSSID extension CR
                                     MBSSID_EXT_14[31:0]

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT14_0_MBSSIDEXT14_0_ADDR       BN1_WF_RMAC_TOP_MBSSIDEXT14_0_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT14_0_MBSSIDEXT14_0_MASK       0xFFFFFFFF                // MBSSIDEXT14_0[31..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT14_0_MBSSIDEXT14_0_SHFT       0

/* =====================================================================================

  ---MBSSIDEXT14_1 (0x820f5000 + 0x36C)---

    MBSSIDEXT14_1[15..0]         - (RW) Multiple BSSID extension CR 
                                     MBSSID_EXT_14[47:32]
    RESERVED16[16]               - (RO) Reserved bits
    MBSS_COLOR_0_14_EN[17]       - (RW) MBSSID0 BSS_COLOR Enable bit
    MBSS_COLOR_0_14[23..18]      - (RW) MBSSID0 BSS_COLOR
    RESERVED24[27..24]           - (RO) Reserved bits
    MBSS_PCOLOR_0_14_EN[28]      - (RW) MBSSID0 Partial BSS_COLOR Enable bit
    RESERVED29[31..29]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT14_1_MBSS_PCOLOR_0_14_EN_ADDR BN1_WF_RMAC_TOP_MBSSIDEXT14_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT14_1_MBSS_PCOLOR_0_14_EN_MASK 0x10000000                // MBSS_PCOLOR_0_14_EN[28]
#define BN1_WF_RMAC_TOP_MBSSIDEXT14_1_MBSS_PCOLOR_0_14_EN_SHFT 28
#define BN1_WF_RMAC_TOP_MBSSIDEXT14_1_MBSS_COLOR_0_14_ADDR     BN1_WF_RMAC_TOP_MBSSIDEXT14_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT14_1_MBSS_COLOR_0_14_MASK     0x00FC0000                // MBSS_COLOR_0_14[23..18]
#define BN1_WF_RMAC_TOP_MBSSIDEXT14_1_MBSS_COLOR_0_14_SHFT     18
#define BN1_WF_RMAC_TOP_MBSSIDEXT14_1_MBSS_COLOR_0_14_EN_ADDR  BN1_WF_RMAC_TOP_MBSSIDEXT14_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT14_1_MBSS_COLOR_0_14_EN_MASK  0x00020000                // MBSS_COLOR_0_14_EN[17]
#define BN1_WF_RMAC_TOP_MBSSIDEXT14_1_MBSS_COLOR_0_14_EN_SHFT  17
#define BN1_WF_RMAC_TOP_MBSSIDEXT14_1_MBSSIDEXT14_1_ADDR       BN1_WF_RMAC_TOP_MBSSIDEXT14_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT14_1_MBSSIDEXT14_1_MASK       0x0000FFFF                // MBSSIDEXT14_1[15..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT14_1_MBSSIDEXT14_1_SHFT       0

/* =====================================================================================

  ---MBSSIDEXT15_0 (0x820f5000 + 0x370)---

    MBSSIDEXT15_0[31..0]         - (RW) Multiple BSSID extension CR
                                     MBSSID_EXT_15[31:0]

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT15_0_MBSSIDEXT15_0_ADDR       BN1_WF_RMAC_TOP_MBSSIDEXT15_0_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT15_0_MBSSIDEXT15_0_MASK       0xFFFFFFFF                // MBSSIDEXT15_0[31..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT15_0_MBSSIDEXT15_0_SHFT       0

/* =====================================================================================

  ---MBSSIDEXT15_1 (0x820f5000 + 0x374)---

    MBSSIDEXT15_1[15..0]         - (RW) Multiple BSSID extension CR
                                     MBSSID_EXT_15[47:32]
    RESERVED16[16]               - (RO) Reserved bits
    MBSS_COLOR_0_15_EN[17]       - (RW) MBSSID0 BSS_COLOR Enable bit
    MBSS_COLOR_0_15[23..18]      - (RW) MBSSID0 BSS_COLOR
    RESERVED24[27..24]           - (RO) Reserved bits
    MBSS_PCOLOR_0_15_EN[28]      - (RW) MBSSID0 Partial BSS_COLOR Enable bit
    RESERVED29[31..29]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MBSSIDEXT15_1_MBSS_PCOLOR_0_15_EN_ADDR BN1_WF_RMAC_TOP_MBSSIDEXT15_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT15_1_MBSS_PCOLOR_0_15_EN_MASK 0x10000000                // MBSS_PCOLOR_0_15_EN[28]
#define BN1_WF_RMAC_TOP_MBSSIDEXT15_1_MBSS_PCOLOR_0_15_EN_SHFT 28
#define BN1_WF_RMAC_TOP_MBSSIDEXT15_1_MBSS_COLOR_0_15_ADDR     BN1_WF_RMAC_TOP_MBSSIDEXT15_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT15_1_MBSS_COLOR_0_15_MASK     0x00FC0000                // MBSS_COLOR_0_15[23..18]
#define BN1_WF_RMAC_TOP_MBSSIDEXT15_1_MBSS_COLOR_0_15_SHFT     18
#define BN1_WF_RMAC_TOP_MBSSIDEXT15_1_MBSS_COLOR_0_15_EN_ADDR  BN1_WF_RMAC_TOP_MBSSIDEXT15_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT15_1_MBSS_COLOR_0_15_EN_MASK  0x00020000                // MBSS_COLOR_0_15_EN[17]
#define BN1_WF_RMAC_TOP_MBSSIDEXT15_1_MBSS_COLOR_0_15_EN_SHFT  17
#define BN1_WF_RMAC_TOP_MBSSIDEXT15_1_MBSSIDEXT15_1_ADDR       BN1_WF_RMAC_TOP_MBSSIDEXT15_1_ADDR
#define BN1_WF_RMAC_TOP_MBSSIDEXT15_1_MBSSIDEXT15_1_MASK       0x0000FFFF                // MBSSIDEXT15_1[15..0]
#define BN1_WF_RMAC_TOP_MBSSIDEXT15_1_MBSSIDEXT15_1_SHFT       0

/* =====================================================================================

  ---ACBEN (0x820f5000 + 0x378)---

    ACBEN[15..0]                 - (RW) All 16 Current BSSID enable for Infra-AP mode
                                     Note: Do not enable ACBEN[0] and CB0R1[16] at the same time
                                     (Note: not support in MT6632)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_ACBEN_ACBEN_ADDR                       BN1_WF_RMAC_TOP_ACBEN_ADDR
#define BN1_WF_RMAC_TOP_ACBEN_ACBEN_MASK                       0x0000FFFF                // ACBEN[15..0]
#define BN1_WF_RMAC_TOP_ACBEN_ACBEN_SHFT                       0

/* =====================================================================================

  ---AIRTIME0 (0x820f5000 + 0x380)---

    OBSS_BACKOFF[15..0]          - (RW) Backoff threshold for OBSS.
                                     If (HW count backoff timer > this threshold), backoff time will use this CR. Otherwise use HW count backoff counter. Unit is 1.024us
    ED_OFFSET[20..16]            - (RW) SW compensation used. 
                                     Normal WIFI packet's duration of ED to CS for both CCK and OFDM. Unit is 1.024us
    N2ME_CTS_RSV_OBSS_EN[21]     - (RW) Count Not to Me CTS's NAV into OBSS airtime
                                     0 : Disable. Only count Not to Me CTS's airtime into OBSS
                                     1 : Enable. Also count yhe Not to Me CTS's Duration (NAV) into OBSS. (Not suggested if CTS2Self exists in the air)
    RESERVED22[29..22]           - (RO) Reserved bits
    RX_AIRTIME_EN[30]            - (RW) RX airtime enable
                                     0: Disable RX airtime function
                                     1: Enable RX airtime function, include non-wifi, OBSS and Per-STA timer.
    RX_AIRTIME_CLR[31]           - (RW) RX airtime clear
                                     Write 1 will clear RX airtime related timer, including 
                                     non-wifi  and OBSS timer
                                     Read will always 0.

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_AIRTIME0_RX_AIRTIME_CLR_ADDR           BN1_WF_RMAC_TOP_AIRTIME0_ADDR
#define BN1_WF_RMAC_TOP_AIRTIME0_RX_AIRTIME_CLR_MASK           0x80000000                // RX_AIRTIME_CLR[31]
#define BN1_WF_RMAC_TOP_AIRTIME0_RX_AIRTIME_CLR_SHFT           31
#define BN1_WF_RMAC_TOP_AIRTIME0_RX_AIRTIME_EN_ADDR            BN1_WF_RMAC_TOP_AIRTIME0_ADDR
#define BN1_WF_RMAC_TOP_AIRTIME0_RX_AIRTIME_EN_MASK            0x40000000                // RX_AIRTIME_EN[30]
#define BN1_WF_RMAC_TOP_AIRTIME0_RX_AIRTIME_EN_SHFT            30
#define BN1_WF_RMAC_TOP_AIRTIME0_N2ME_CTS_RSV_OBSS_EN_ADDR     BN1_WF_RMAC_TOP_AIRTIME0_ADDR
#define BN1_WF_RMAC_TOP_AIRTIME0_N2ME_CTS_RSV_OBSS_EN_MASK     0x00200000                // N2ME_CTS_RSV_OBSS_EN[21]
#define BN1_WF_RMAC_TOP_AIRTIME0_N2ME_CTS_RSV_OBSS_EN_SHFT     21
#define BN1_WF_RMAC_TOP_AIRTIME0_ED_OFFSET_ADDR                BN1_WF_RMAC_TOP_AIRTIME0_ADDR
#define BN1_WF_RMAC_TOP_AIRTIME0_ED_OFFSET_MASK                0x001F0000                // ED_OFFSET[20..16]
#define BN1_WF_RMAC_TOP_AIRTIME0_ED_OFFSET_SHFT                16
#define BN1_WF_RMAC_TOP_AIRTIME0_OBSS_BACKOFF_ADDR             BN1_WF_RMAC_TOP_AIRTIME0_ADDR
#define BN1_WF_RMAC_TOP_AIRTIME0_OBSS_BACKOFF_MASK             0x0000FFFF                // OBSS_BACKOFF[15..0]
#define BN1_WF_RMAC_TOP_AIRTIME0_OBSS_BACKOFF_SHFT             0

/* =====================================================================================

  ---AIRTIME1 (0x820f5000 + 0x384)---

    SW_OBSS_BAND0[7..0]          - (RW) SW compensation used.
                                     Write this CR with bit[8]=1 will add this value to Band0-OBSS timer
                                     Read will previous value. Unit is 1.024us
    SW_OBSS_BAND0_EN[8]          - (WC) SW compensation used.
                                     Read always 0.
                                     Write 1 will add [7:0] value to Band0-OBSS timer
    RESERVED9[15..9]             - (RO) Reserved bits
    NONQOSD_BACKOFF[31..16]      - (RW) RX airtime CR
                                     Non-QoS data backoff time. 
                                     Unit is 1.024us

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_AIRTIME1_NONQOSD_BACKOFF_ADDR          BN1_WF_RMAC_TOP_AIRTIME1_ADDR
#define BN1_WF_RMAC_TOP_AIRTIME1_NONQOSD_BACKOFF_MASK          0xFFFF0000                // NONQOSD_BACKOFF[31..16]
#define BN1_WF_RMAC_TOP_AIRTIME1_NONQOSD_BACKOFF_SHFT          16
#define BN1_WF_RMAC_TOP_AIRTIME1_SW_OBSS_BAND0_EN_ADDR         BN1_WF_RMAC_TOP_AIRTIME1_ADDR
#define BN1_WF_RMAC_TOP_AIRTIME1_SW_OBSS_BAND0_EN_MASK         0x00000100                // SW_OBSS_BAND0_EN[8]
#define BN1_WF_RMAC_TOP_AIRTIME1_SW_OBSS_BAND0_EN_SHFT         8
#define BN1_WF_RMAC_TOP_AIRTIME1_SW_OBSS_BAND0_ADDR            BN1_WF_RMAC_TOP_AIRTIME1_ADDR
#define BN1_WF_RMAC_TOP_AIRTIME1_SW_OBSS_BAND0_MASK            0x000000FF                // SW_OBSS_BAND0[7..0]
#define BN1_WF_RMAC_TOP_AIRTIME1_SW_OBSS_BAND0_SHFT            0

/* =====================================================================================

  ---AIRTIME2 (0x820f5000 + 0x388)---

    SW_NONWIFI_BAND0[7..0]       - (RW) SW compensation used.
                                     Write this CR with bit[8]=1 will add this value to Band0-NONWIFI timer
                                     Read will previous value. Unit is 1.024us
    SW_NONWIFI_BAND0_EN[8]       - (WC) SW compensation used.
                                     Read always 0.
                                     Write 1 will add [7:0] value to Band0-NONWIFI timer
    RESERVED9[31..9]             - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_AIRTIME2_SW_NONWIFI_BAND0_EN_ADDR      BN1_WF_RMAC_TOP_AIRTIME2_ADDR
#define BN1_WF_RMAC_TOP_AIRTIME2_SW_NONWIFI_BAND0_EN_MASK      0x00000100                // SW_NONWIFI_BAND0_EN[8]
#define BN1_WF_RMAC_TOP_AIRTIME2_SW_NONWIFI_BAND0_EN_SHFT      8
#define BN1_WF_RMAC_TOP_AIRTIME2_SW_NONWIFI_BAND0_ADDR         BN1_WF_RMAC_TOP_AIRTIME2_ADDR
#define BN1_WF_RMAC_TOP_AIRTIME2_SW_NONWIFI_BAND0_MASK         0x000000FF                // SW_NONWIFI_BAND0[7..0]
#define BN1_WF_RMAC_TOP_AIRTIME2_SW_NONWIFI_BAND0_SHFT         0

/* =====================================================================================

  ---AIRTIME3 (0x820f5000 + 0x38C)---

    WMM_QID0_BACKOFF[15..0]      - (RW) RX airtime CR
                                     WMM0 QID0 backoff time. 
                                     Unit is 1.024us
    WMM_QID1_BACKOFF[31..16]     - (RW) RX airtime CR
                                     WMM0 QID1 backoff time. 
                                     Unit is 1.024us

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_AIRTIME3_WMM_QID1_BACKOFF_ADDR         BN1_WF_RMAC_TOP_AIRTIME3_ADDR
#define BN1_WF_RMAC_TOP_AIRTIME3_WMM_QID1_BACKOFF_MASK         0xFFFF0000                // WMM_QID1_BACKOFF[31..16]
#define BN1_WF_RMAC_TOP_AIRTIME3_WMM_QID1_BACKOFF_SHFT         16
#define BN1_WF_RMAC_TOP_AIRTIME3_WMM_QID0_BACKOFF_ADDR         BN1_WF_RMAC_TOP_AIRTIME3_ADDR
#define BN1_WF_RMAC_TOP_AIRTIME3_WMM_QID0_BACKOFF_MASK         0x0000FFFF                // WMM_QID0_BACKOFF[15..0]
#define BN1_WF_RMAC_TOP_AIRTIME3_WMM_QID0_BACKOFF_SHFT         0

/* =====================================================================================

  ---AIRTIME4 (0x820f5000 + 0x390)---

    WMM_QID2_BACKOFF[15..0]      - (RW) RX airtime CR
                                     WMM0 QID2 backoff time. 
                                     Unit is 1.024us
    WMM_QID3_BACKOFF[31..16]     - (RW) RX airtime CR
                                     WMM0 QID3 backoff time. 
                                     Unit is 1.024us

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_AIRTIME4_WMM_QID3_BACKOFF_ADDR         BN1_WF_RMAC_TOP_AIRTIME4_ADDR
#define BN1_WF_RMAC_TOP_AIRTIME4_WMM_QID3_BACKOFF_MASK         0xFFFF0000                // WMM_QID3_BACKOFF[31..16]
#define BN1_WF_RMAC_TOP_AIRTIME4_WMM_QID3_BACKOFF_SHFT         16
#define BN1_WF_RMAC_TOP_AIRTIME4_WMM_QID2_BACKOFF_ADDR         BN1_WF_RMAC_TOP_AIRTIME4_ADDR
#define BN1_WF_RMAC_TOP_AIRTIME4_WMM_QID2_BACKOFF_MASK         0x0000FFFF                // WMM_QID2_BACKOFF[15..0]
#define BN1_WF_RMAC_TOP_AIRTIME4_WMM_QID2_BACKOFF_SHFT         0

/* =====================================================================================

  ---AIRTIME13 (0x820f5000 + 0x394)---

    RX0_AIRTIME_NONWIFI[20..0]   - (RO) Band0 RX airtime - nonwifi part.
                                     Will not increase when this timer larger than 21'hFFFFF.
                                     Read will clear this timer.
    RESERVED21[31..21]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_AIRTIME13_RX0_AIRTIME_NONWIFI_ADDR     BN1_WF_RMAC_TOP_AIRTIME13_ADDR
#define BN1_WF_RMAC_TOP_AIRTIME13_RX0_AIRTIME_NONWIFI_MASK     0x001FFFFF                // RX0_AIRTIME_NONWIFI[20..0]
#define BN1_WF_RMAC_TOP_AIRTIME13_RX0_AIRTIME_NONWIFI_SHFT     0

/* =====================================================================================

  ---AIRTIME14 (0x820f5000 + 0x398)---

    RX0_AIRTIME_OBSS[20..0]      - (RO) Band0 RX airtime - OBSS part
                                     Will not increase when this timer larger than 21'hFFFFF.
                                     Read will clear this timer.
    RESERVED21[31..21]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_AIRTIME14_RX0_AIRTIME_OBSS_ADDR        BN1_WF_RMAC_TOP_AIRTIME14_ADDR
#define BN1_WF_RMAC_TOP_AIRTIME14_RX0_AIRTIME_OBSS_MASK        0x001FFFFF                // RX0_AIRTIME_OBSS[20..0]
#define BN1_WF_RMAC_TOP_AIRTIME14_RX0_AIRTIME_OBSS_SHFT        0

/* =====================================================================================

  ---FS0CR (0x820f5000 + 0x3A0)---

    SC_0_RSVD[7..0]              - (RW) Reserved CR bit
    RESERVED8[20..8]             - (RO) Reserved bits
    SC_0_MSBA_BA128_DIS[21]      - (RW) BA128 Bitmap disable for response MSBA 
                                     1'b0: Enable
                                     1'b1: Disable
    SC_0_NOACK_BA_BYPASS[22]     - (RW) BA bypass for No_ACK MPDU
    SC_0_HEMU_RST_BA_EN[23]      - (RW) BA SB Reset User1~Userx when RX not MU PPDU
    SC_0_QOSDNULL_BA_BYPASS[24]  - (RW) BA bypass  for QOS Data Null
    SC_0_BA_COND3_EN[25]         - (RW) BA Condition3 enable
    SC_0_BA_TMP_CREATE_DIS[26]   - (RW) BA diable tmp creater
    SC_0_BA_SKIP_POLICY_CHK_EN[27] - (RW) BA skip ack policy value
    SC_0_BA_CLR_BY_A1_COMP_EN[28] - (RW) BA clear by addr1 compare enable
    SC_0_BA_CLR_BY_A1_RPTR_AUTO_DIS[29] - (RW) BA clear by addr1 repeater auto disable
    SC_0_AMPDU_GT_64_BLK_EN[30]  - (RW) Block AMPDU > 64 MPDU
                                     0: no block AMPDU>64 part MPDU in RMAC
                                     1: block AMPDU>64 part MPDU in RMAC
    SC_0_EN[31]                  - (RW) Scoreboard0 enable

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_EN_ADDR                     BN1_WF_RMAC_TOP_FS0CR_ADDR
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_EN_MASK                     0x80000000                // SC_0_EN[31]
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_EN_SHFT                     31
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_AMPDU_GT_64_BLK_EN_ADDR     BN1_WF_RMAC_TOP_FS0CR_ADDR
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_AMPDU_GT_64_BLK_EN_MASK     0x40000000                // SC_0_AMPDU_GT_64_BLK_EN[30]
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_AMPDU_GT_64_BLK_EN_SHFT     30
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_BA_CLR_BY_A1_RPTR_AUTO_DIS_ADDR BN1_WF_RMAC_TOP_FS0CR_ADDR
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_BA_CLR_BY_A1_RPTR_AUTO_DIS_MASK 0x20000000                // SC_0_BA_CLR_BY_A1_RPTR_AUTO_DIS[29]
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_BA_CLR_BY_A1_RPTR_AUTO_DIS_SHFT 29
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_BA_CLR_BY_A1_COMP_EN_ADDR   BN1_WF_RMAC_TOP_FS0CR_ADDR
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_BA_CLR_BY_A1_COMP_EN_MASK   0x10000000                // SC_0_BA_CLR_BY_A1_COMP_EN[28]
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_BA_CLR_BY_A1_COMP_EN_SHFT   28
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_BA_SKIP_POLICY_CHK_EN_ADDR  BN1_WF_RMAC_TOP_FS0CR_ADDR
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_BA_SKIP_POLICY_CHK_EN_MASK  0x08000000                // SC_0_BA_SKIP_POLICY_CHK_EN[27]
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_BA_SKIP_POLICY_CHK_EN_SHFT  27
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_BA_TMP_CREATE_DIS_ADDR      BN1_WF_RMAC_TOP_FS0CR_ADDR
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_BA_TMP_CREATE_DIS_MASK      0x04000000                // SC_0_BA_TMP_CREATE_DIS[26]
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_BA_TMP_CREATE_DIS_SHFT      26
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_BA_COND3_EN_ADDR            BN1_WF_RMAC_TOP_FS0CR_ADDR
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_BA_COND3_EN_MASK            0x02000000                // SC_0_BA_COND3_EN[25]
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_BA_COND3_EN_SHFT            25
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_QOSDNULL_BA_BYPASS_ADDR     BN1_WF_RMAC_TOP_FS0CR_ADDR
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_QOSDNULL_BA_BYPASS_MASK     0x01000000                // SC_0_QOSDNULL_BA_BYPASS[24]
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_QOSDNULL_BA_BYPASS_SHFT     24
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_HEMU_RST_BA_EN_ADDR         BN1_WF_RMAC_TOP_FS0CR_ADDR
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_HEMU_RST_BA_EN_MASK         0x00800000                // SC_0_HEMU_RST_BA_EN[23]
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_HEMU_RST_BA_EN_SHFT         23
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_NOACK_BA_BYPASS_ADDR        BN1_WF_RMAC_TOP_FS0CR_ADDR
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_NOACK_BA_BYPASS_MASK        0x00400000                // SC_0_NOACK_BA_BYPASS[22]
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_NOACK_BA_BYPASS_SHFT        22
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_MSBA_BA128_DIS_ADDR         BN1_WF_RMAC_TOP_FS0CR_ADDR
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_MSBA_BA128_DIS_MASK         0x00200000                // SC_0_MSBA_BA128_DIS[21]
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_MSBA_BA128_DIS_SHFT         21
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_RSVD_ADDR                   BN1_WF_RMAC_TOP_FS0CR_ADDR
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_RSVD_MASK                   0x000000FF                // SC_0_RSVD[7..0]
#define BN1_WF_RMAC_TOP_FS0CR_SC_0_RSVD_SHFT                   0

/* =====================================================================================

  ---RSVD0 (0x820f5000 + 0x3E0)---

    RSVD0[31..0]                 - (RW) Reserved0
                                     Do not change this value
                                     [21]: optional for make EIFS=0 for VOW by setting this bit = 1
                                     [17]: optional for stop reload EIFS when FCS error for VOW by setting this bit = 1

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RSVD0_RSVD0_ADDR                       BN1_WF_RMAC_TOP_RSVD0_ADDR
#define BN1_WF_RMAC_TOP_RSVD0_RSVD0_MASK                       0xFFFFFFFF                // RSVD0[31..0]
#define BN1_WF_RMAC_TOP_RSVD0_RSVD0_SHFT                       0

/* =====================================================================================

  ---RSVD1 (0x820f5000 + 0x3E4)---

    RSVD1[31..0]                 - (RW) Reserved1
                                     [15]: Force VOA_VLD
                                     [7:0]: TMR watchdog timer
                                     [8]: TMR watchdog enable

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RSVD1_RSVD1_ADDR                       BN1_WF_RMAC_TOP_RSVD1_ADDR
#define BN1_WF_RMAC_TOP_RSVD1_RSVD1_MASK                       0xFFFFFFFF                // RSVD1[31..0]
#define BN1_WF_RMAC_TOP_RSVD1_RSVD1_SHFT                       0

/* =====================================================================================

  ---RCPI0 (0x820f5000 + 0x400)---

    RCPI_CCK_LOW_THRESHOLD0[9..0] - (RW) This unsigned value is the low RCPI CCK threshold to generate interrupt, typically 0~255 of BSSIDx (BSSIDx depends on RCPI_BSS_SOURCE)
    RESERVED10[10]               - (RO) Reserved bits
    RCPI_MODE_BSS0[13..11]       - (RW) Indicates 4 antenna with 6 different Interrupt mode for BSSIDx (BSSIDx depends on RCPI_BSS_SOURCE)
                                     3'h0: ant0 only (source : RCPI0 in Rx vector)
                                     3'h1: ant1 only (source : RCPI1 in Rx vector)
                                     3'h2: ant2 only (source : RCPI2 in Rx vector)
                                     3'h3: ant3 only (source : RCPI3 in Rx vector)
                                     3'h4: ant0 + ant1 + ant2 + ant3
                                     3'h5: max (ant0, ant1, ant2, ant3)
    RCPI_MOVING_AVERAGE_PARAMETER0[15..14] - (RW) Sets up parameter for moving average RCPI of BSSIDx (BSSIDx depends on RCPI_BSS_SOURCE)
                                     Formula: y(n)=(1-arfa)*y(n-1)+arfa*x(n), arfa<=1
                                     y(n): New moving average RCPI value
                                     y(n-1): Last moving average RCPI value
                                     x(n): RCPI value from BB when Beacon is received
                                     When the RCPI value from BB is 255, it means RCPI value is invalid and will not process RCPI moving average.
                                     2'b00: arfa = 1/16
                                     2'b01: arfa = 1/8
                                     2'b10: arfa = 1/4
                                     2'b11: arfa = 1
    RCPI_CCK_HIGH_THRESHOLD0[25..16] - (RW) This unsigned value is the high RCPI CCK threshold to generate interrupt, typically 0~255 of BSSIDx (BSSIDx depends on RCPI_BSS_SOURCE)
    RCPI_BSS_SOURCE0[27..26]     - (RW) Indicate the BSSID source of packet for RCPI moving average.
                                     2'd0: BSSID0
                                     2'd1: BSSID1
                                     2'd2: BSSID2
                                     2'd3: BSSID3
    RCPI_SOURCE0[30..28]         - (RW) Indicates frame type with correct FCS32 from BSSIDx (BSSIDx depends on RCPI_BSS_SOURCE)
                                     3'b001: All Unicast Data frames (A1 is equal to effective Own MAC 0 or 1 or 2) from BSSID 0 with correct FCS32
                                     3'b010: All Beacon frames from BSSIx 0 with correct FCS32
                                     3'b011: All Beacon frames and Unicast Data frames (A1 is equal to effective Own MAC 0 or 1 or 2) from BSSIDx with correct FCS32.
                                     3'b1XX: All Data frames or Beacon frames from BSSIDx with correct FCS32
    MOVING_AVERAGE_ENABLE0[31]   - (RW) Enables moving average calculation for received beacon RCPI of BSSIDx (BSSIDx depends on RCPI_BSS_SOURCE)
                                     Note: When setting RR.Moving_average_enable from 0 to 1, the first Beacon RCPI value will be set for initial RCPI value and will not show in RR1 until 2nd Beacon RCPI value is received.

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RCPI0_MOVING_AVERAGE_ENABLE0_ADDR      BN1_WF_RMAC_TOP_RCPI0_ADDR
#define BN1_WF_RMAC_TOP_RCPI0_MOVING_AVERAGE_ENABLE0_MASK      0x80000000                // MOVING_AVERAGE_ENABLE0[31]
#define BN1_WF_RMAC_TOP_RCPI0_MOVING_AVERAGE_ENABLE0_SHFT      31
#define BN1_WF_RMAC_TOP_RCPI0_RCPI_SOURCE0_ADDR                BN1_WF_RMAC_TOP_RCPI0_ADDR
#define BN1_WF_RMAC_TOP_RCPI0_RCPI_SOURCE0_MASK                0x70000000                // RCPI_SOURCE0[30..28]
#define BN1_WF_RMAC_TOP_RCPI0_RCPI_SOURCE0_SHFT                28
#define BN1_WF_RMAC_TOP_RCPI0_RCPI_BSS_SOURCE0_ADDR            BN1_WF_RMAC_TOP_RCPI0_ADDR
#define BN1_WF_RMAC_TOP_RCPI0_RCPI_BSS_SOURCE0_MASK            0x0C000000                // RCPI_BSS_SOURCE0[27..26]
#define BN1_WF_RMAC_TOP_RCPI0_RCPI_BSS_SOURCE0_SHFT            26
#define BN1_WF_RMAC_TOP_RCPI0_RCPI_CCK_HIGH_THRESHOLD0_ADDR    BN1_WF_RMAC_TOP_RCPI0_ADDR
#define BN1_WF_RMAC_TOP_RCPI0_RCPI_CCK_HIGH_THRESHOLD0_MASK    0x03FF0000                // RCPI_CCK_HIGH_THRESHOLD0[25..16]
#define BN1_WF_RMAC_TOP_RCPI0_RCPI_CCK_HIGH_THRESHOLD0_SHFT    16
#define BN1_WF_RMAC_TOP_RCPI0_RCPI_MOVING_AVERAGE_PARAMETER0_ADDR BN1_WF_RMAC_TOP_RCPI0_ADDR
#define BN1_WF_RMAC_TOP_RCPI0_RCPI_MOVING_AVERAGE_PARAMETER0_MASK 0x0000C000                // RCPI_MOVING_AVERAGE_PARAMETER0[15..14]
#define BN1_WF_RMAC_TOP_RCPI0_RCPI_MOVING_AVERAGE_PARAMETER0_SHFT 14
#define BN1_WF_RMAC_TOP_RCPI0_RCPI_MODE_BSS0_ADDR              BN1_WF_RMAC_TOP_RCPI0_ADDR
#define BN1_WF_RMAC_TOP_RCPI0_RCPI_MODE_BSS0_MASK              0x00003800                // RCPI_MODE_BSS0[13..11]
#define BN1_WF_RMAC_TOP_RCPI0_RCPI_MODE_BSS0_SHFT              11
#define BN1_WF_RMAC_TOP_RCPI0_RCPI_CCK_LOW_THRESHOLD0_ADDR     BN1_WF_RMAC_TOP_RCPI0_ADDR
#define BN1_WF_RMAC_TOP_RCPI0_RCPI_CCK_LOW_THRESHOLD0_MASK     0x000003FF                // RCPI_CCK_LOW_THRESHOLD0[9..0]
#define BN1_WF_RMAC_TOP_RCPI0_RCPI_CCK_LOW_THRESHOLD0_SHFT     0

/* =====================================================================================

  ---RCPI3 (0x820f5000 + 0x404)---

    RCPI_LOW_THRESHOLD0_OFDM[9..0] - (RW) This unsigned value is the low RCPI threshold to generate interrupt, typically 0~255 of BSSID0 (for OFDM).
    RESERVED10[15..10]           - (RO) Reserved bits
    RCPI_HIGH_THRESHOLD0_OFDM[25..16] - (RW) This unsigned value is the high RCPI threshold to generate interrupt, typically 0~255 of BSSID0 (for OFDM).
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RCPI3_RCPI_HIGH_THRESHOLD0_OFDM_ADDR   BN1_WF_RMAC_TOP_RCPI3_ADDR
#define BN1_WF_RMAC_TOP_RCPI3_RCPI_HIGH_THRESHOLD0_OFDM_MASK   0x03FF0000                // RCPI_HIGH_THRESHOLD0_OFDM[25..16]
#define BN1_WF_RMAC_TOP_RCPI3_RCPI_HIGH_THRESHOLD0_OFDM_SHFT   16
#define BN1_WF_RMAC_TOP_RCPI3_RCPI_LOW_THRESHOLD0_OFDM_ADDR    BN1_WF_RMAC_TOP_RCPI3_ADDR
#define BN1_WF_RMAC_TOP_RCPI3_RCPI_LOW_THRESHOLD0_OFDM_MASK    0x000003FF                // RCPI_LOW_THRESHOLD0_OFDM[9..0]
#define BN1_WF_RMAC_TOP_RCPI3_RCPI_LOW_THRESHOLD0_OFDM_SHFT    0

/* =====================================================================================

  ---RCPI2 (0x820f5000 + 0x410)---

    RCPI_CCK_LOW_THRESHOLD1[9..0] - (RW) This unsigned value is the low RCPI CCK threshold to generate interrupt, typically 0~255 of BSSIDx (BSSIDx depends on RCPI_BSS_SOURCE)
    RESERVED10[10]               - (RO) Reserved bits
    RCPI_MODE_BSS1[13..11]       - (RW) Indicates 4 antenna with 6 different Interrupt mode for BSSIDx (BSSIDx depends on RCPI_BSS_SOURCE)
                                     3'h0: ant0 only (source : RCPI0 in Rx vector)
                                     3'h1: ant1 only (source : RCPI1 in Rx vector)
                                     3'h2: ant2 only (source : RCPI2 in Rx vector)
                                     3'h3: ant3 only (source : RCPI3 in Rx vector)
                                     3'h4: ant0 + ant1 + ant2 + ant3
                                     3'h5: max (ant0, ant1, ant2, ant3)
    RCPI_MOVING_AVERAGE_PARAMETER1[15..14] - (RW) Sets up parameter for moving average RCPI of BSSIDx (BSSIDx depends on RCPI_BSS_SOURCE)
                                     Formula: y(n)=(1-arfa)*y(n-1)+arfa*x(n), arfa<=1
                                     y(n): New moving average RCPI value
                                     y(n-1): Last moving average RCPI value
                                     x(n): RCPI value from BB when Beacon is received
                                     When the RCPI value from BB is 255, it means RCPI value is invalid and will not process RCPI moving average.
                                     2'b00: arfa = 1/16
                                     2'b01: arfa = 1/8
                                     2'b10: arfa = 1/4
                                     2'b11: arfa = 1
    RCPI_CCK_HIGH_THRESHOLD1[25..16] - (RW) This unsigned value is the high RCPI CCK threshold to generate interrupt, typically 0~255 of BSSIDx (BSSIDx depends on RCPI_BSS_SOURCE)
    RCPI_BSS_SOURCE1[27..26]     - (RW) Indicate the BSSID source of packet for RCPI moving average.
                                     2'd0: BSSID0
                                     2'd1: BSSID1
                                     2'd2: BSSID2
                                     2'd3: BSSID3
    RCPI_SOURCE1[30..28]         - (RW) Indicates frame type with correct FCS32 from BSSIDx (BSSIDx depends on RCPI_BSS_SOURCE)
                                     3'b001: All Unicast Data frames (A1 is equal to effective Own MAC 0 or 1 or 2) from BSSID 0 with correct FCS32
                                     3'b010: All Beacon frames from BSSIx 0 with correct FCS32
                                     3'b011: All Beacon frames and Unicast Data frames (A1 is equal to effective Own MAC 0 or 1 or 2) from BSSIDx with correct FCS32.
                                     3'b1XX: All Data frames or Beacon frames from BSSIDx with correct FCS32
    MOVING_AVERAGE_ENABLE1[31]   - (RW) Enables moving average calculation for received beacon RCPI of BSSIDx (BSSIDx depends on RCPI_BSS_SOURCE)
                                     Note: When setting RR.Moving_average_enable from 0 to 1, the first Beacon RCPI value will be set for initial RCPI value and will not show in RR1 until 2nd Beacon RCPI value is received.

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RCPI2_MOVING_AVERAGE_ENABLE1_ADDR      BN1_WF_RMAC_TOP_RCPI2_ADDR
#define BN1_WF_RMAC_TOP_RCPI2_MOVING_AVERAGE_ENABLE1_MASK      0x80000000                // MOVING_AVERAGE_ENABLE1[31]
#define BN1_WF_RMAC_TOP_RCPI2_MOVING_AVERAGE_ENABLE1_SHFT      31
#define BN1_WF_RMAC_TOP_RCPI2_RCPI_SOURCE1_ADDR                BN1_WF_RMAC_TOP_RCPI2_ADDR
#define BN1_WF_RMAC_TOP_RCPI2_RCPI_SOURCE1_MASK                0x70000000                // RCPI_SOURCE1[30..28]
#define BN1_WF_RMAC_TOP_RCPI2_RCPI_SOURCE1_SHFT                28
#define BN1_WF_RMAC_TOP_RCPI2_RCPI_BSS_SOURCE1_ADDR            BN1_WF_RMAC_TOP_RCPI2_ADDR
#define BN1_WF_RMAC_TOP_RCPI2_RCPI_BSS_SOURCE1_MASK            0x0C000000                // RCPI_BSS_SOURCE1[27..26]
#define BN1_WF_RMAC_TOP_RCPI2_RCPI_BSS_SOURCE1_SHFT            26
#define BN1_WF_RMAC_TOP_RCPI2_RCPI_CCK_HIGH_THRESHOLD1_ADDR    BN1_WF_RMAC_TOP_RCPI2_ADDR
#define BN1_WF_RMAC_TOP_RCPI2_RCPI_CCK_HIGH_THRESHOLD1_MASK    0x03FF0000                // RCPI_CCK_HIGH_THRESHOLD1[25..16]
#define BN1_WF_RMAC_TOP_RCPI2_RCPI_CCK_HIGH_THRESHOLD1_SHFT    16
#define BN1_WF_RMAC_TOP_RCPI2_RCPI_MOVING_AVERAGE_PARAMETER1_ADDR BN1_WF_RMAC_TOP_RCPI2_ADDR
#define BN1_WF_RMAC_TOP_RCPI2_RCPI_MOVING_AVERAGE_PARAMETER1_MASK 0x0000C000                // RCPI_MOVING_AVERAGE_PARAMETER1[15..14]
#define BN1_WF_RMAC_TOP_RCPI2_RCPI_MOVING_AVERAGE_PARAMETER1_SHFT 14
#define BN1_WF_RMAC_TOP_RCPI2_RCPI_MODE_BSS1_ADDR              BN1_WF_RMAC_TOP_RCPI2_ADDR
#define BN1_WF_RMAC_TOP_RCPI2_RCPI_MODE_BSS1_MASK              0x00003800                // RCPI_MODE_BSS1[13..11]
#define BN1_WF_RMAC_TOP_RCPI2_RCPI_MODE_BSS1_SHFT              11
#define BN1_WF_RMAC_TOP_RCPI2_RCPI_CCK_LOW_THRESHOLD1_ADDR     BN1_WF_RMAC_TOP_RCPI2_ADDR
#define BN1_WF_RMAC_TOP_RCPI2_RCPI_CCK_LOW_THRESHOLD1_MASK     0x000003FF                // RCPI_CCK_LOW_THRESHOLD1[9..0]
#define BN1_WF_RMAC_TOP_RCPI2_RCPI_CCK_LOW_THRESHOLD1_SHFT     0

/* =====================================================================================

  ---RCPI9 (0x820f5000 + 0X414)---

    RCPI_LOW_THRESHOLD1_OFDM[9..0] - (RW) This unsigned value is the low RCPI threshold to generate interrupt, typically 0~255 of BSSID1 (for OFDM).
    RESERVED10[15..10]           - (RO) Reserved bits
    RCPI_HIGH_THRESHOLD1_OFDM[25..16] - (RW) This unsigned value is the high RCPI threshold to generate interrupt, typically 0~255 of BSSID1 (for OFDM).
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RCPI9_RCPI_HIGH_THRESHOLD1_OFDM_ADDR   BN1_WF_RMAC_TOP_RCPI9_ADDR
#define BN1_WF_RMAC_TOP_RCPI9_RCPI_HIGH_THRESHOLD1_OFDM_MASK   0x03FF0000                // RCPI_HIGH_THRESHOLD1_OFDM[25..16]
#define BN1_WF_RMAC_TOP_RCPI9_RCPI_HIGH_THRESHOLD1_OFDM_SHFT   16
#define BN1_WF_RMAC_TOP_RCPI9_RCPI_LOW_THRESHOLD1_OFDM_ADDR    BN1_WF_RMAC_TOP_RCPI9_ADDR
#define BN1_WF_RMAC_TOP_RCPI9_RCPI_LOW_THRESHOLD1_OFDM_MASK    0x000003FF                // RCPI_LOW_THRESHOLD1_OFDM[9..0]
#define BN1_WF_RMAC_TOP_RCPI9_RCPI_LOW_THRESHOLD1_OFDM_SHFT    0

/* =====================================================================================

  ---RCPI4 (0x820f5000 + 0x420)---

    RCPI_CCK_LOW_THRESHOLD2[9..0] - (RW) This unsigned value is the low RCPI CCK threshold to generate interrupt, typically 0~255 of BSSIDx (BSSIDx depends on RCPI_BSS_SOURCE)
    RESERVED10[10]               - (RO) Reserved bits
    RCPI_MODE_BSS2[13..11]       - (RW) Indicates 4 antenna with 6 different Interrupt mode for BSSIDx (BSSIDx depends on RCPI_BSS_SOURCE)
                                     3'h0: ant0 only (source : RCPI0 in Rx vector)
                                     3'h1: ant1 only (source : RCPI1 in Rx vector)
                                     3'h2: ant2 only (source : RCPI2 in Rx vector)
                                     3'h3: ant3 only (source : RCPI3 in Rx vector)
                                     3'h4: ant0 + ant1 + ant2 + ant3
                                     3'h5: max (ant0, ant1, ant2, ant3)
    RCPI_MOVING_AVERAGE_PARAMETER2[15..14] - (RW) Sets up parameter for moving average RCPI of BSSIDx (BSSIDx depends on RCPI_BSS_SOURCE)
                                     Formula: y(n)=(1-arfa)*y(n-1)+arfa*x(n), arfa<=1
                                     y(n): New moving average RCPI value
                                     y(n-1): Last moving average RCPI value
                                     x(n): RCPI value from BB when Beacon is received
                                     When the RCPI value from BB is 255, it means RCPI value is invalid and will not process RCPI moving average.
                                     2'b00: arfa = 1/16
                                     2'b01: arfa = 1/8
                                     2'b10: arfa = 1/4
                                     2'b11: arfa = 1
    RCPI_CCK_HIGH_THRESHOLD2[25..16] - (RW) This unsigned value is the high RCPI CCK threshold to generate interrupt, typically 0~255 of BSSIDx (BSSIDx depends on RCPI_BSS_SOURCE)
    RCPI_BSS_SOURCE2[27..26]     - (RW) Indicate the BSSID source of packet for RCPI moving average.
                                     2'd0: BSSID0
                                     2'd1: BSSID1
                                     2'd2: BSSID2
                                     2'd3: BSSID3
    RCPI_SOURCE2[30..28]         - (RW) Indicates frame type with correct FCS32 from BSSIDx (BSSIDx depends on RCPI_BSS_SOURCE)
                                     3'b001: All Unicast Data frames (A1 is equal to effective Own MAC 0 or 1 or 2) from BSSID 0 with correct FCS32
                                     3'b010: All Beacon frames from BSSIx 0 with correct FCS32
                                     3'b011: All Beacon frames and Unicast Data frames (A1 is equal to effective Own MAC 0 or 1 or 2) from BSSIDx with correct FCS32.
                                     3'b1XX: All Data frames or Beacon frames from BSSIDx with correct FCS32
    MOVING_AVERAGE_ENABLE2[31]   - (RW) Enables moving average calculation for received beacon RCPI of BSSIDx (BSSIDx depends on RCPI_BSS_SOURCE)
                                     Note: When setting RR.Moving_average_enable from 0 to 1, the first Beacon RCPI value will be set for initial RCPI value and will not show in RR1 until 2nd Beacon RCPI value is received.

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RCPI4_MOVING_AVERAGE_ENABLE2_ADDR      BN1_WF_RMAC_TOP_RCPI4_ADDR
#define BN1_WF_RMAC_TOP_RCPI4_MOVING_AVERAGE_ENABLE2_MASK      0x80000000                // MOVING_AVERAGE_ENABLE2[31]
#define BN1_WF_RMAC_TOP_RCPI4_MOVING_AVERAGE_ENABLE2_SHFT      31
#define BN1_WF_RMAC_TOP_RCPI4_RCPI_SOURCE2_ADDR                BN1_WF_RMAC_TOP_RCPI4_ADDR
#define BN1_WF_RMAC_TOP_RCPI4_RCPI_SOURCE2_MASK                0x70000000                // RCPI_SOURCE2[30..28]
#define BN1_WF_RMAC_TOP_RCPI4_RCPI_SOURCE2_SHFT                28
#define BN1_WF_RMAC_TOP_RCPI4_RCPI_BSS_SOURCE2_ADDR            BN1_WF_RMAC_TOP_RCPI4_ADDR
#define BN1_WF_RMAC_TOP_RCPI4_RCPI_BSS_SOURCE2_MASK            0x0C000000                // RCPI_BSS_SOURCE2[27..26]
#define BN1_WF_RMAC_TOP_RCPI4_RCPI_BSS_SOURCE2_SHFT            26
#define BN1_WF_RMAC_TOP_RCPI4_RCPI_CCK_HIGH_THRESHOLD2_ADDR    BN1_WF_RMAC_TOP_RCPI4_ADDR
#define BN1_WF_RMAC_TOP_RCPI4_RCPI_CCK_HIGH_THRESHOLD2_MASK    0x03FF0000                // RCPI_CCK_HIGH_THRESHOLD2[25..16]
#define BN1_WF_RMAC_TOP_RCPI4_RCPI_CCK_HIGH_THRESHOLD2_SHFT    16
#define BN1_WF_RMAC_TOP_RCPI4_RCPI_MOVING_AVERAGE_PARAMETER2_ADDR BN1_WF_RMAC_TOP_RCPI4_ADDR
#define BN1_WF_RMAC_TOP_RCPI4_RCPI_MOVING_AVERAGE_PARAMETER2_MASK 0x0000C000                // RCPI_MOVING_AVERAGE_PARAMETER2[15..14]
#define BN1_WF_RMAC_TOP_RCPI4_RCPI_MOVING_AVERAGE_PARAMETER2_SHFT 14
#define BN1_WF_RMAC_TOP_RCPI4_RCPI_MODE_BSS2_ADDR              BN1_WF_RMAC_TOP_RCPI4_ADDR
#define BN1_WF_RMAC_TOP_RCPI4_RCPI_MODE_BSS2_MASK              0x00003800                // RCPI_MODE_BSS2[13..11]
#define BN1_WF_RMAC_TOP_RCPI4_RCPI_MODE_BSS2_SHFT              11
#define BN1_WF_RMAC_TOP_RCPI4_RCPI_CCK_LOW_THRESHOLD2_ADDR     BN1_WF_RMAC_TOP_RCPI4_ADDR
#define BN1_WF_RMAC_TOP_RCPI4_RCPI_CCK_LOW_THRESHOLD2_MASK     0x000003FF                // RCPI_CCK_LOW_THRESHOLD2[9..0]
#define BN1_WF_RMAC_TOP_RCPI4_RCPI_CCK_LOW_THRESHOLD2_SHFT     0

/* =====================================================================================

  ---RCPI7 (0x820f5000 + 0x424)---

    RCPI_LOW_THRESHOLD2_OFDM[9..0] - (RW) This unsigned value is the low RCPI threshold to generate interrupt, typically 0~255 of BSSID2 (for OFDM).
    RESERVED10[15..10]           - (RO) Reserved bits
    RCPI_HIGH_THRESHOLD2_OFDM[25..16] - (RW) This unsigned value is the high RCPI threshold to generate interrupt, typically 0~255 of BSSID2 (for OFDM).
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RCPI7_RCPI_HIGH_THRESHOLD2_OFDM_ADDR   BN1_WF_RMAC_TOP_RCPI7_ADDR
#define BN1_WF_RMAC_TOP_RCPI7_RCPI_HIGH_THRESHOLD2_OFDM_MASK   0x03FF0000                // RCPI_HIGH_THRESHOLD2_OFDM[25..16]
#define BN1_WF_RMAC_TOP_RCPI7_RCPI_HIGH_THRESHOLD2_OFDM_SHFT   16
#define BN1_WF_RMAC_TOP_RCPI7_RCPI_LOW_THRESHOLD2_OFDM_ADDR    BN1_WF_RMAC_TOP_RCPI7_ADDR
#define BN1_WF_RMAC_TOP_RCPI7_RCPI_LOW_THRESHOLD2_OFDM_MASK    0x000003FF                // RCPI_LOW_THRESHOLD2_OFDM[9..0]
#define BN1_WF_RMAC_TOP_RCPI7_RCPI_LOW_THRESHOLD2_OFDM_SHFT    0

/* =====================================================================================

  ---RCPI6 (0x820f5000 + 0x430)---

    RCPI_CCK_LOW_THRESHOLD3[9..0] - (RW) This unsigned value is the low RCPI CCK threshold to generate interrupt, typically 0~255 of BSSIDx (BSSIDx depends on RCPI_BSS_SOURCE)
    RESERVED10[10]               - (RO) Reserved bits
    RCPI_MODE_BSS3[13..11]       - (RW) Indicates 4 antenna with 6 different Interrupt mode for BSSIDx (BSSIDx depends on RCPI_BSS_SOURCE)
                                     3'h0: ant0 only (source : RCPI0 in Rx vector)
                                     3'h1: ant1 only (source : RCPI1 in Rx vector)
                                     3'h2: ant2 only (source : RCPI2 in Rx vector)
                                     3'h3: ant3 only (source : RCPI3 in Rx vector)
                                     3'h4: ant0 + ant1 + ant2 + ant3
                                     3'h5: max (ant0, ant1, ant2, ant3)
    RCPI_MOVING_AVERAGE_PARAMETER3[15..14] - (RW) Sets up parameter for moving average RCPI of BSSIDx (BSSIDx depends on RCPI_BSS_SOURCE)
                                     Formula: y(n)=(1-arfa)*y(n-1)+arfa*x(n), arfa<=1
                                     y(n): New moving average RCPI value
                                     y(n-1): Last moving average RCPI value
                                     x(n): RCPI value from BB when Beacon is received
                                     When the RCPI value from BB is 255, it means RCPI value is invalid and will not process RCPI moving average.
                                     2'b00: arfa = 1/16
                                     2'b01: arfa = 1/8
                                     2'b10: arfa = 1/4
                                     2'b11: arfa = 1
    RCPI_CCK_HIGH_THRESHOLD3[25..16] - (RW) This unsigned value is the high RCPI CCK threshold to generate interrupt, typically 0~255 of BSSIDx (BSSIDx depends on RCPI_BSS_SOURCE)
    RCPI_BSS_SOURCE3[27..26]     - (RW) Indicate the BSSID source of packet for RCPI moving average.
                                     2'd0: BSSID0
                                     2'd1: BSSID1
                                     2'd2: BSSID2
                                     2'd3: BSSID3
    RCPI_SOURCE3[30..28]         - (RW) Indicates frame type with correct FCS32 from BSSIDx (BSSIDx depends on RCPI_BSS_SOURCE)
                                     3'b001: All Unicast Data frames (A1 is equal to effective Own MAC 0 or 1 or 2) from BSSID 0 with correct FCS32
                                     3'b010: All Beacon frames from BSSIx 0 with correct FCS32
                                     3'b011: All Beacon frames and Unicast Data frames (A1 is equal to effective Own MAC 0 or 1 or 2) from BSSIDx with correct FCS32.
                                     3'b1XX: All Data frames or Beacon frames from BSSIDx with correct FCS32
    MOVING_AVERAGE_ENABLE3[31]   - (RW) Enables moving average calculation for received beacon RCPI of BSSIDx (BSSIDx depends on RCPI_BSS_SOURCE)
                                     Note: When setting RR.Moving_average_enable from 0 to 1, the first Beacon RCPI value will be set for initial RCPI value and will not show in RR1 until 2nd Beacon RCPI value is received.

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RCPI6_MOVING_AVERAGE_ENABLE3_ADDR      BN1_WF_RMAC_TOP_RCPI6_ADDR
#define BN1_WF_RMAC_TOP_RCPI6_MOVING_AVERAGE_ENABLE3_MASK      0x80000000                // MOVING_AVERAGE_ENABLE3[31]
#define BN1_WF_RMAC_TOP_RCPI6_MOVING_AVERAGE_ENABLE3_SHFT      31
#define BN1_WF_RMAC_TOP_RCPI6_RCPI_SOURCE3_ADDR                BN1_WF_RMAC_TOP_RCPI6_ADDR
#define BN1_WF_RMAC_TOP_RCPI6_RCPI_SOURCE3_MASK                0x70000000                // RCPI_SOURCE3[30..28]
#define BN1_WF_RMAC_TOP_RCPI6_RCPI_SOURCE3_SHFT                28
#define BN1_WF_RMAC_TOP_RCPI6_RCPI_BSS_SOURCE3_ADDR            BN1_WF_RMAC_TOP_RCPI6_ADDR
#define BN1_WF_RMAC_TOP_RCPI6_RCPI_BSS_SOURCE3_MASK            0x0C000000                // RCPI_BSS_SOURCE3[27..26]
#define BN1_WF_RMAC_TOP_RCPI6_RCPI_BSS_SOURCE3_SHFT            26
#define BN1_WF_RMAC_TOP_RCPI6_RCPI_CCK_HIGH_THRESHOLD3_ADDR    BN1_WF_RMAC_TOP_RCPI6_ADDR
#define BN1_WF_RMAC_TOP_RCPI6_RCPI_CCK_HIGH_THRESHOLD3_MASK    0x03FF0000                // RCPI_CCK_HIGH_THRESHOLD3[25..16]
#define BN1_WF_RMAC_TOP_RCPI6_RCPI_CCK_HIGH_THRESHOLD3_SHFT    16
#define BN1_WF_RMAC_TOP_RCPI6_RCPI_MOVING_AVERAGE_PARAMETER3_ADDR BN1_WF_RMAC_TOP_RCPI6_ADDR
#define BN1_WF_RMAC_TOP_RCPI6_RCPI_MOVING_AVERAGE_PARAMETER3_MASK 0x0000C000                // RCPI_MOVING_AVERAGE_PARAMETER3[15..14]
#define BN1_WF_RMAC_TOP_RCPI6_RCPI_MOVING_AVERAGE_PARAMETER3_SHFT 14
#define BN1_WF_RMAC_TOP_RCPI6_RCPI_MODE_BSS3_ADDR              BN1_WF_RMAC_TOP_RCPI6_ADDR
#define BN1_WF_RMAC_TOP_RCPI6_RCPI_MODE_BSS3_MASK              0x00003800                // RCPI_MODE_BSS3[13..11]
#define BN1_WF_RMAC_TOP_RCPI6_RCPI_MODE_BSS3_SHFT              11
#define BN1_WF_RMAC_TOP_RCPI6_RCPI_CCK_LOW_THRESHOLD3_ADDR     BN1_WF_RMAC_TOP_RCPI6_ADDR
#define BN1_WF_RMAC_TOP_RCPI6_RCPI_CCK_LOW_THRESHOLD3_MASK     0x000003FF                // RCPI_CCK_LOW_THRESHOLD3[9..0]
#define BN1_WF_RMAC_TOP_RCPI6_RCPI_CCK_LOW_THRESHOLD3_SHFT     0

/* =====================================================================================

  ---RCPI11 (0x820f5000 + 0X434)---

    RCPI_LOW_THRESHOLD3_OFDM[9..0] - (RW) This unsigned value is the low RCPI threshold to generate interrupt, typically 0~255 of BSSID3 (for OFDM).
    RESERVED10[15..10]           - (RO) Reserved bits
    RCPI_HIGH_THRESHOLD3_OFDM[25..16] - (RW) This unsigned value is the high RCPI threshold to generate interrupt, typically 0~255 of BSSID3 (for OFDM).
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RCPI11_RCPI_HIGH_THRESHOLD3_OFDM_ADDR  BN1_WF_RMAC_TOP_RCPI11_ADDR
#define BN1_WF_RMAC_TOP_RCPI11_RCPI_HIGH_THRESHOLD3_OFDM_MASK  0x03FF0000                // RCPI_HIGH_THRESHOLD3_OFDM[25..16]
#define BN1_WF_RMAC_TOP_RCPI11_RCPI_HIGH_THRESHOLD3_OFDM_SHFT  16
#define BN1_WF_RMAC_TOP_RCPI11_RCPI_LOW_THRESHOLD3_OFDM_ADDR   BN1_WF_RMAC_TOP_RCPI11_ADDR
#define BN1_WF_RMAC_TOP_RCPI11_RCPI_LOW_THRESHOLD3_OFDM_MASK   0x000003FF                // RCPI_LOW_THRESHOLD3_OFDM[9..0]
#define BN1_WF_RMAC_TOP_RCPI11_RCPI_LOW_THRESHOLD3_OFDM_SHFT   0

/* =====================================================================================

  ---LRCPITMPCCK0 (0x820f5000 + 0x588)---

    BSSID0_CCK_RCPI_VALUE[9..0]  - (RW) This unsigned value is the moving average BSSID 0 CCK RCPI value, ranging 0-255 when RR.Moving_average_enable is asserted.
                                     The value is meaningless when the first Beacon RCPI value is received and is meaningful after the 2nd beacon RCPI value is received.
                                     Write to this register will make HW initialize moving average circuit as feeding one beacon RCPI value. This is for power-on after power-off to make RCPI moving average not restart. SW needs to back up this register value twice and restore it after power-on.
    RESERVED10[15..10]           - (RO) Reserved bits
    BSSID0_CCK_RCPI_YN[30..16]   - (RW) This unsigned value is the moving average BSSID 0 CCK. RCPI YN value includes 10-bit integer in MSB and 5-bit decimal in LSB (BU/RS usage).
    RESERVED31[31]               - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_LRCPITMPCCK0_BSSID0_CCK_RCPI_YN_ADDR   BN1_WF_RMAC_TOP_LRCPITMPCCK0_ADDR
#define BN1_WF_RMAC_TOP_LRCPITMPCCK0_BSSID0_CCK_RCPI_YN_MASK   0x7FFF0000                // BSSID0_CCK_RCPI_YN[30..16]
#define BN1_WF_RMAC_TOP_LRCPITMPCCK0_BSSID0_CCK_RCPI_YN_SHFT   16
#define BN1_WF_RMAC_TOP_LRCPITMPCCK0_BSSID0_CCK_RCPI_VALUE_ADDR BN1_WF_RMAC_TOP_LRCPITMPCCK0_ADDR
#define BN1_WF_RMAC_TOP_LRCPITMPCCK0_BSSID0_CCK_RCPI_VALUE_MASK 0x000003FF                // BSSID0_CCK_RCPI_VALUE[9..0]
#define BN1_WF_RMAC_TOP_LRCPITMPCCK0_BSSID0_CCK_RCPI_VALUE_SHFT 0

/* =====================================================================================

  ---LRCPITMPCCK1 (0x820f5000 + 0x58C)---

    BSSID1_CCK_RCPI_VALUE[9..0]  - (RW) This unsigned value is the moving average BSSID 1 CCK RCPI value, ranging 0-255 when RR.Moving_average_enable is asserted.
                                     The value is meaningless when the first Beacon RCPI value is received and is meaningful after the 2nd beacon RCPI value is received.
                                     Write to this register will make HW initialize moving average circuit as feeding one beacon RCPI value. This is for power-on after power-off to make RCPI moving average not restart. SW needs to back up this register value twice and restore it after power-on.
    RESERVED10[15..10]           - (RO) Reserved bits
    BSSID1_CCK_RCPI_YN[30..16]   - (RW) This unsigned value is the moving average BSSID 1 CCK RCPI YN value includes 10-bit integer in MSB and 5-bit decimal in LSB (BU/RS usage).
    RESERVED31[31]               - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_LRCPITMPCCK1_BSSID1_CCK_RCPI_YN_ADDR   BN1_WF_RMAC_TOP_LRCPITMPCCK1_ADDR
#define BN1_WF_RMAC_TOP_LRCPITMPCCK1_BSSID1_CCK_RCPI_YN_MASK   0x7FFF0000                // BSSID1_CCK_RCPI_YN[30..16]
#define BN1_WF_RMAC_TOP_LRCPITMPCCK1_BSSID1_CCK_RCPI_YN_SHFT   16
#define BN1_WF_RMAC_TOP_LRCPITMPCCK1_BSSID1_CCK_RCPI_VALUE_ADDR BN1_WF_RMAC_TOP_LRCPITMPCCK1_ADDR
#define BN1_WF_RMAC_TOP_LRCPITMPCCK1_BSSID1_CCK_RCPI_VALUE_MASK 0x000003FF                // BSSID1_CCK_RCPI_VALUE[9..0]
#define BN1_WF_RMAC_TOP_LRCPITMPCCK1_BSSID1_CCK_RCPI_VALUE_SHFT 0

/* =====================================================================================

  ---LRCPITMPCCK2 (0x820f5000 + 0x590)---

    BSSID2_CCK_RCPI_VALUE[9..0]  - (RW) This unsigned value is the moving average BSSID 2 CCK RCPI value, ranging 0-255 when RR.Moving_average_enable is asserted.
                                     The value is meaningless when the first Beacon RCPI value is received and is meaningful after the 2nd beacon RCPI value is received.
                                     Write to this register will make HW initialize moving average circuit as feeding one beacon RCPI value. This is for power-on after power-off to make RCPI moving average not restart. SW needs to back up this register value twice and restore it after power-on.
    RESERVED10[15..10]           - (RO) Reserved bits
    BSSID2_CCK_RCPI_YN[30..16]   - (RW) This unsigned value is the moving average BSSID 2 CCK RCPI YN value includes 10-bit integer in MSB and 5-bit decimal in LSB (BU/RS usage).
    RESERVED31[31]               - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_LRCPITMPCCK2_BSSID2_CCK_RCPI_YN_ADDR   BN1_WF_RMAC_TOP_LRCPITMPCCK2_ADDR
#define BN1_WF_RMAC_TOP_LRCPITMPCCK2_BSSID2_CCK_RCPI_YN_MASK   0x7FFF0000                // BSSID2_CCK_RCPI_YN[30..16]
#define BN1_WF_RMAC_TOP_LRCPITMPCCK2_BSSID2_CCK_RCPI_YN_SHFT   16
#define BN1_WF_RMAC_TOP_LRCPITMPCCK2_BSSID2_CCK_RCPI_VALUE_ADDR BN1_WF_RMAC_TOP_LRCPITMPCCK2_ADDR
#define BN1_WF_RMAC_TOP_LRCPITMPCCK2_BSSID2_CCK_RCPI_VALUE_MASK 0x000003FF                // BSSID2_CCK_RCPI_VALUE[9..0]
#define BN1_WF_RMAC_TOP_LRCPITMPCCK2_BSSID2_CCK_RCPI_VALUE_SHFT 0

/* =====================================================================================

  ---LRCPITMPCCK3 (0x820f5000 + 0x594)---

    BSSID3_CCK_RCPI_VALUE[9..0]  - (RW) This unsigned value is the moving average BSSID 3 CCK RCPI value, ranging from 0-255 when RR.Moving_average_enable is asserted.
                                     The value is meaningless when the first Beacon RCPI value is received and is meaningful after the 2nd beacon RCPI value is received.
                                     Write to this register will make HW initialize moving average circuit as feeding one beacon RCPI value. This is for power-on after power-off to make RCPI moving average not restart. SW needs to back up this register value twice and restore it after power-on.
    RESERVED10[15..10]           - (RO) Reserved bits
    BSSID3_CCK_RCPI_YN[30..16]   - (RW) This unsigned value is the moving average BSSID 3 CCK RCPI YN value includes 10-bit integer in MSB and 5-bit decimal in LSB (BU/RS usage).
    RESERVED31[31]               - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_LRCPITMPCCK3_BSSID3_CCK_RCPI_YN_ADDR   BN1_WF_RMAC_TOP_LRCPITMPCCK3_ADDR
#define BN1_WF_RMAC_TOP_LRCPITMPCCK3_BSSID3_CCK_RCPI_YN_MASK   0x7FFF0000                // BSSID3_CCK_RCPI_YN[30..16]
#define BN1_WF_RMAC_TOP_LRCPITMPCCK3_BSSID3_CCK_RCPI_YN_SHFT   16
#define BN1_WF_RMAC_TOP_LRCPITMPCCK3_BSSID3_CCK_RCPI_VALUE_ADDR BN1_WF_RMAC_TOP_LRCPITMPCCK3_ADDR
#define BN1_WF_RMAC_TOP_LRCPITMPCCK3_BSSID3_CCK_RCPI_VALUE_MASK 0x000003FF                // BSSID3_CCK_RCPI_VALUE[9..0]
#define BN1_WF_RMAC_TOP_LRCPITMPCCK3_BSSID3_CCK_RCPI_VALUE_SHFT 0

/* =====================================================================================

  ---LRCPITMPOFDM0 (0x820f5000 + 0x598)---

    BSSID0_OFDM_RCPI_VALUE[9..0] - (RW) This unsigned value is the moving average BSSID 0 OFDM RCPI value, ranging 0-255 when RR.Moving_average_enable is asserted .
                                     The value is meaningless when the first Beacon RCPI value is received and is meaningful after the 2nd beacon RCPI value is received.
                                     Write to this register will make HW initialize moving average circuit as feeding one beacon RCPI value. This is for power-on after power-off to make RCPI moving average not restart. SW needs to back up this register value twice and restore it after power-on.
    RESERVED10[15..10]           - (RO) Reserved bits
    BSSID0_OFDM_RCPI_YN[30..16]  - (RW) This unsigned value is the moving average BSSID 0 OFDM RCPI YN value includes 10-bit integer in MSB and 5-bit decimal in LSB (BU/RS usage).
    RESERVED31[31]               - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_LRCPITMPOFDM0_BSSID0_OFDM_RCPI_YN_ADDR BN1_WF_RMAC_TOP_LRCPITMPOFDM0_ADDR
#define BN1_WF_RMAC_TOP_LRCPITMPOFDM0_BSSID0_OFDM_RCPI_YN_MASK 0x7FFF0000                // BSSID0_OFDM_RCPI_YN[30..16]
#define BN1_WF_RMAC_TOP_LRCPITMPOFDM0_BSSID0_OFDM_RCPI_YN_SHFT 16
#define BN1_WF_RMAC_TOP_LRCPITMPOFDM0_BSSID0_OFDM_RCPI_VALUE_ADDR BN1_WF_RMAC_TOP_LRCPITMPOFDM0_ADDR
#define BN1_WF_RMAC_TOP_LRCPITMPOFDM0_BSSID0_OFDM_RCPI_VALUE_MASK 0x000003FF                // BSSID0_OFDM_RCPI_VALUE[9..0]
#define BN1_WF_RMAC_TOP_LRCPITMPOFDM0_BSSID0_OFDM_RCPI_VALUE_SHFT 0

/* =====================================================================================

  ---LRCPITMPOFDM1 (0x820f5000 + 0x59C)---

    BSSID1_OFDM_RCPI_VALUE[9..0] - (RW) This unsigned value is the moving average BSSID 1 OFDM RCPI value, ranging from 0-255 when RR.Moving_average_enable is asserted .
                                     The value is meaningless when the first Beacon RCPI value is received and is meaningful after the 2nd beacon RCPI value is received.
                                     Write to this register will make HW initialize moving average circuit as feeding one beacon RCPI value. This is for power-on after power-off to make RCPI moving average not restart. SW needs to back up this register value twice and restore it after power-on.
    RESERVED10[15..10]           - (RO) Reserved bits
    BSSID1_OFDM_RCPI_YN[30..16]  - (RW) This unsigned value is the moving average BSSID 1 OFDM RCPI YN value includes 10-bit integer in MSB and 5-bit decimal in LSB (BU/RS usage).
    RESERVED31[31]               - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_LRCPITMPOFDM1_BSSID1_OFDM_RCPI_YN_ADDR BN1_WF_RMAC_TOP_LRCPITMPOFDM1_ADDR
#define BN1_WF_RMAC_TOP_LRCPITMPOFDM1_BSSID1_OFDM_RCPI_YN_MASK 0x7FFF0000                // BSSID1_OFDM_RCPI_YN[30..16]
#define BN1_WF_RMAC_TOP_LRCPITMPOFDM1_BSSID1_OFDM_RCPI_YN_SHFT 16
#define BN1_WF_RMAC_TOP_LRCPITMPOFDM1_BSSID1_OFDM_RCPI_VALUE_ADDR BN1_WF_RMAC_TOP_LRCPITMPOFDM1_ADDR
#define BN1_WF_RMAC_TOP_LRCPITMPOFDM1_BSSID1_OFDM_RCPI_VALUE_MASK 0x000003FF                // BSSID1_OFDM_RCPI_VALUE[9..0]
#define BN1_WF_RMAC_TOP_LRCPITMPOFDM1_BSSID1_OFDM_RCPI_VALUE_SHFT 0

/* =====================================================================================

  ---LRCPITMPOFDM2 (0x820f5000 + 0x5A0)---

    BSSID2_OFDM_RCPI_VALUE[9..0] - (RW) This unsigned value is the moving average BSSID 2 OFDM RCPI value, ranging from 0-255 when RR.Moving_average_enable is asserted .
                                     The value is meaningless when the first Beacon RCPI value is received and is meaningful after the 2nd beacon RCPI value is received.
                                     Write to this register will make HW initialize moving average circuit as feeding one beacon RCPI value. This is for power-on after power-off to make RCPI moving average not restart. SW needs to back up this register value twice and restore it after power-on.
    RESERVED10[15..10]           - (RO) Reserved bits
    BSSID2_OFDM_RCPI_YN[30..16]  - (RW) This unsigned value is the moving average BSSID 2 OFDM RCPI YN value includes 10-bit integer in MSB and 5-bit decimal in LSB (BU/RS usage).
    RESERVED31[31]               - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_LRCPITMPOFDM2_BSSID2_OFDM_RCPI_YN_ADDR BN1_WF_RMAC_TOP_LRCPITMPOFDM2_ADDR
#define BN1_WF_RMAC_TOP_LRCPITMPOFDM2_BSSID2_OFDM_RCPI_YN_MASK 0x7FFF0000                // BSSID2_OFDM_RCPI_YN[30..16]
#define BN1_WF_RMAC_TOP_LRCPITMPOFDM2_BSSID2_OFDM_RCPI_YN_SHFT 16
#define BN1_WF_RMAC_TOP_LRCPITMPOFDM2_BSSID2_OFDM_RCPI_VALUE_ADDR BN1_WF_RMAC_TOP_LRCPITMPOFDM2_ADDR
#define BN1_WF_RMAC_TOP_LRCPITMPOFDM2_BSSID2_OFDM_RCPI_VALUE_MASK 0x000003FF                // BSSID2_OFDM_RCPI_VALUE[9..0]
#define BN1_WF_RMAC_TOP_LRCPITMPOFDM2_BSSID2_OFDM_RCPI_VALUE_SHFT 0

/* =====================================================================================

  ---LRCPITMPOFDM3 (0x820f5000 + 0x5A4)---

    BSSID3_OFDM_RCPI_VALUE[9..0] - (RW) This unsigned value is the moving average BSSID 3 OFDM RCPI value, ranging 0-255 when RR.Moving_average_enable is asserted .
                                     The value is meaningless when the first Beacon RCPI value is received and is meaningful after the 2nd beacon RCPI value is received.
                                     Write to this register will make HW initialize moving average circuit as feeding one beacon RCPI value. This is for power-on after power-off to make RCPI moving average not restart. SW needs to back up this register value twice and restore it after power-on.
    RESERVED10[15..10]           - (RO) Reserved bits
    BSSID3_OFDM_RCPI_YN[30..16]  - (RW) This unsigned value is the moving average BSSID 3 OFDM RCPI YN value includes 10-bit integer in MSB and 5-bit decimal in LSB (BU/RS usage).
    RESERVED31[31]               - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_LRCPITMPOFDM3_BSSID3_OFDM_RCPI_YN_ADDR BN1_WF_RMAC_TOP_LRCPITMPOFDM3_ADDR
#define BN1_WF_RMAC_TOP_LRCPITMPOFDM3_BSSID3_OFDM_RCPI_YN_MASK 0x7FFF0000                // BSSID3_OFDM_RCPI_YN[30..16]
#define BN1_WF_RMAC_TOP_LRCPITMPOFDM3_BSSID3_OFDM_RCPI_YN_SHFT 16
#define BN1_WF_RMAC_TOP_LRCPITMPOFDM3_BSSID3_OFDM_RCPI_VALUE_ADDR BN1_WF_RMAC_TOP_LRCPITMPOFDM3_ADDR
#define BN1_WF_RMAC_TOP_LRCPITMPOFDM3_BSSID3_OFDM_RCPI_VALUE_MASK 0x000003FF                // BSSID3_OFDM_RCPI_VALUE[9..0]
#define BN1_WF_RMAC_TOP_LRCPITMPOFDM3_BSSID3_OFDM_RCPI_VALUE_SHFT 0

/* =====================================================================================

  ---LRCPI_MISC0R (0x820f5000 + 0x5A8)---

    BSSID3_CCK_IND_RCPI_MA_VLD[0] - (RW) Internal BSSID3 CCK IND RCPI MA VLD (BU/RS usage)
    BSSID3_OFDM_IND_RCPI_MA_VLD[1] - (RW) Internal BSSID3 OFDM IND RCPI MA VLD (BU/RS usage)
    BSSID2_CCK_IND_RCPI_MA_VLD[2] - (RW) Internal BSSID2 CCK IND RCPI MA VLD (BU/RS usage)
    BSSID2_OFDM_IND_RCPI_MA_VLD[3] - (RW) Internal BSSID2 OFDM IND RCPI MA VLD (BU/RS usage)
    BSSID1_CCK_IND_RCPI_MA_VLD[4] - (RW) Internal BSSID1 CCK IND RCPI MA VLD (BU/RS usage)
    BSSID1_OFDM_IND_RCPI_MA_VLD[5] - (RW) Internal BSSID1 OFDM IND RCPI MA VLD (BU/RS usage)
    BSSID0_CCK_IND_RCPI_MA_VLD[6] - (RW) Internal BSSID0 CCK IND RCPI MA VLD (BU/RS usage)
    BSSID0_OFDM_IND_RCPI_MA_VLD[7] - (RW) Internal BSSID0 OFDM IND RCPI MA VLD (BU/RS usage)
    BSSID3_CCK_IND_RCPI_REQ[8]   - (RW) Internal BSSID3 CCK IND RCPI REQ (BU/RS usage)
    BSSID3_OFDM_IND_RCPI_REQ[9]  - (RW) Internal BSSID3 OFDM IND RCPI REQ (BU/RS usage)
    BSSID2_CCK_IND_RCPI_REQ[10]  - (RW) Internal BSSID2 CCK IND RCPI REQ (BU/RS usage)
    BSSID2_OFDM_IND_RCPI_REQ[11] - (RW) Internal BSSID2 OFDM IND RCPI REQ (BU/RS usage)
    BSSID1_CCK_IND_RCPI_REQ[12]  - (RW) Internal BSSID1 CCK IND RCPI REQ (BU/RS usage)
    BSSID1_OFDM_IND_RCPI_REQ[13] - (RW) Internal BSSID1 OFDM IND RCPI REQ (BU/RS usage)
    BSSID0_CCK_IND_RCPI_REQ[14]  - (RW) Internal BSSID0 CCK IND RCPI REQ (BU/RS usage)
    BSSID0_OFDM_IND_RCPI_REQ[15] - (RW) Internal BSSID0 OFDM IND RCPI REQ (BU/RS usage)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID0_OFDM_IND_RCPI_REQ_ADDR BN1_WF_RMAC_TOP_LRCPI_MISC0R_ADDR
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID0_OFDM_IND_RCPI_REQ_MASK 0x00008000                // BSSID0_OFDM_IND_RCPI_REQ[15]
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID0_OFDM_IND_RCPI_REQ_SHFT 15
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID0_CCK_IND_RCPI_REQ_ADDR BN1_WF_RMAC_TOP_LRCPI_MISC0R_ADDR
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID0_CCK_IND_RCPI_REQ_MASK 0x00004000                // BSSID0_CCK_IND_RCPI_REQ[14]
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID0_CCK_IND_RCPI_REQ_SHFT 14
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID1_OFDM_IND_RCPI_REQ_ADDR BN1_WF_RMAC_TOP_LRCPI_MISC0R_ADDR
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID1_OFDM_IND_RCPI_REQ_MASK 0x00002000                // BSSID1_OFDM_IND_RCPI_REQ[13]
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID1_OFDM_IND_RCPI_REQ_SHFT 13
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID1_CCK_IND_RCPI_REQ_ADDR BN1_WF_RMAC_TOP_LRCPI_MISC0R_ADDR
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID1_CCK_IND_RCPI_REQ_MASK 0x00001000                // BSSID1_CCK_IND_RCPI_REQ[12]
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID1_CCK_IND_RCPI_REQ_SHFT 12
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID2_OFDM_IND_RCPI_REQ_ADDR BN1_WF_RMAC_TOP_LRCPI_MISC0R_ADDR
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID2_OFDM_IND_RCPI_REQ_MASK 0x00000800                // BSSID2_OFDM_IND_RCPI_REQ[11]
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID2_OFDM_IND_RCPI_REQ_SHFT 11
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID2_CCK_IND_RCPI_REQ_ADDR BN1_WF_RMAC_TOP_LRCPI_MISC0R_ADDR
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID2_CCK_IND_RCPI_REQ_MASK 0x00000400                // BSSID2_CCK_IND_RCPI_REQ[10]
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID2_CCK_IND_RCPI_REQ_SHFT 10
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID3_OFDM_IND_RCPI_REQ_ADDR BN1_WF_RMAC_TOP_LRCPI_MISC0R_ADDR
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID3_OFDM_IND_RCPI_REQ_MASK 0x00000200                // BSSID3_OFDM_IND_RCPI_REQ[9]
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID3_OFDM_IND_RCPI_REQ_SHFT 9
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID3_CCK_IND_RCPI_REQ_ADDR BN1_WF_RMAC_TOP_LRCPI_MISC0R_ADDR
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID3_CCK_IND_RCPI_REQ_MASK 0x00000100                // BSSID3_CCK_IND_RCPI_REQ[8]
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID3_CCK_IND_RCPI_REQ_SHFT 8
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID0_OFDM_IND_RCPI_MA_VLD_ADDR BN1_WF_RMAC_TOP_LRCPI_MISC0R_ADDR
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID0_OFDM_IND_RCPI_MA_VLD_MASK 0x00000080                // BSSID0_OFDM_IND_RCPI_MA_VLD[7]
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID0_OFDM_IND_RCPI_MA_VLD_SHFT 7
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID0_CCK_IND_RCPI_MA_VLD_ADDR BN1_WF_RMAC_TOP_LRCPI_MISC0R_ADDR
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID0_CCK_IND_RCPI_MA_VLD_MASK 0x00000040                // BSSID0_CCK_IND_RCPI_MA_VLD[6]
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID0_CCK_IND_RCPI_MA_VLD_SHFT 6
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID1_OFDM_IND_RCPI_MA_VLD_ADDR BN1_WF_RMAC_TOP_LRCPI_MISC0R_ADDR
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID1_OFDM_IND_RCPI_MA_VLD_MASK 0x00000020                // BSSID1_OFDM_IND_RCPI_MA_VLD[5]
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID1_OFDM_IND_RCPI_MA_VLD_SHFT 5
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID1_CCK_IND_RCPI_MA_VLD_ADDR BN1_WF_RMAC_TOP_LRCPI_MISC0R_ADDR
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID1_CCK_IND_RCPI_MA_VLD_MASK 0x00000010                // BSSID1_CCK_IND_RCPI_MA_VLD[4]
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID1_CCK_IND_RCPI_MA_VLD_SHFT 4
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID2_OFDM_IND_RCPI_MA_VLD_ADDR BN1_WF_RMAC_TOP_LRCPI_MISC0R_ADDR
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID2_OFDM_IND_RCPI_MA_VLD_MASK 0x00000008                // BSSID2_OFDM_IND_RCPI_MA_VLD[3]
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID2_OFDM_IND_RCPI_MA_VLD_SHFT 3
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID2_CCK_IND_RCPI_MA_VLD_ADDR BN1_WF_RMAC_TOP_LRCPI_MISC0R_ADDR
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID2_CCK_IND_RCPI_MA_VLD_MASK 0x00000004                // BSSID2_CCK_IND_RCPI_MA_VLD[2]
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID2_CCK_IND_RCPI_MA_VLD_SHFT 2
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID3_OFDM_IND_RCPI_MA_VLD_ADDR BN1_WF_RMAC_TOP_LRCPI_MISC0R_ADDR
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID3_OFDM_IND_RCPI_MA_VLD_MASK 0x00000002                // BSSID3_OFDM_IND_RCPI_MA_VLD[1]
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID3_OFDM_IND_RCPI_MA_VLD_SHFT 1
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID3_CCK_IND_RCPI_MA_VLD_ADDR BN1_WF_RMAC_TOP_LRCPI_MISC0R_ADDR
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID3_CCK_IND_RCPI_MA_VLD_MASK 0x00000001                // BSSID3_CCK_IND_RCPI_MA_VLD[0]
#define BN1_WF_RMAC_TOP_LRCPI_MISC0R_BSSID3_CCK_IND_RCPI_MA_VLD_SHFT 0

/* =====================================================================================

  ---RMACDR (0x820f5000 + 0x600)---

    RMAC_DMY_31_0[31..0]         - (RW) RMAC Dummy Register. Value should not change except
                                     bit0 is used for Disable TSF upadte when receiving probe response frame
                                     bit1 to bit2 is used for phy_delay offset
                                     bit3 is used for Mozart. 0: to match data packet with ToDS=1 and FrDS=0, BSSID=A3. 1: normal matching. For MT7636.
                                     bit4 is used for Enable TSF upadte when receiving TIM Broadcast frame
                                     bit5 is used for TMR packet drop option
                                     bit6 to bit8 is used for pure phy delay offset
                                     bit9 to use phy2mac_tmr_abort
                                     bit10 to use eco_tmr_rmac_trb_mpdu_drop
                                     bit11 to get_tod_out_pre
                                     bit12 to use toa_vld
                                     bit13 to sel rmac_mdrdy
                                     bit14 to sel 7636 eco
                                     bit15 to sel rxvector_dw1~9 read
                                     bit16 to bit23 is used for phy_delay offset too
                                     bit25 and bit24 is used to 16-BSSID extending option. 3 means 4-bit extend. 2 means 3-bit extend. 1 means 2-bit extend. 0 means 1-bit extend.
                                     bit26 is used to check HTC field by rate or not. 1 is not check by rate
                                     bit27 is used for receive BTIM or not when BTIM with critical beacon
                                     bit28 is used for rx early terminate with NAV comparison
                                     bit29 is used for rx early terminate with BSSID match or not
                                     bit30 is used to select rxv length is 16-bit or 20-bit
                                     bit31 is used for debug

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RMACDR_RMAC_DMY_31_0_ADDR              BN1_WF_RMAC_TOP_RMACDR_ADDR
#define BN1_WF_RMAC_TOP_RMACDR_RMAC_DMY_31_0_MASK              0xFFFFFFFF                // RMAC_DMY_31_0[31..0]
#define BN1_WF_RMAC_TOP_RMACDR_RMAC_DMY_31_0_SHFT              0

/* =====================================================================================

  ---RMCR (0x820f5000 + 0x604)---

    RX_NOACK_CTRL[0]             - (RW) Setting for throughput debug
                                     0: Send Ack control frame no matter the Rx FIFO is disabled or full. Send BA control frame if there is at least one MPDU with FCS32 OK in AMPDU and it meet  the RX FIFO is disable or full condition
                                     1: Do not send the Ack control frame when the Rx FIFO is disabled or full. Do not send the BA control frame if no any MPDU with FCS32 OK in AMPDU can save in RX FIFO (Rx FIFO is disabled or full)
                                     Note : 
                                     When this field is de-asserted, the bitmap of BA will be set only by  FCS32 check. 
                                     When this field is asserted, the bitmap of BA will be set by FCS32 check and RX packet can be saved in RX FIFO
    SMPS_BY_TF[1]                - (RW) SMPS by Trigger Frame(MU_RTS, BSRP, BQRP)
    BCN_CONTENT_CHK_EN_BSSID0[2] - (RW) Enable DUT checking below specified contents in BSSID0 beacon frame if changed. Refer Chapter Beacon content check for more details.
                                     If Disable, DUT will not check all BSSID0 beacons frame by this function.
                                     If Enable, chip will check the specified content in BSSID0 beacon frame and if the specified content changed, beacon frames will be received, or it will be dropped. It will apply in WLAN_ON state or ON state. 
                                     Write 0 to disable, and write 1 to Enable. 
                                     Read returns the configured value.
                                     0: Disable
                                     1: Enable
    HT_PCO_PHASE_SKIP_EN_BSSID0[3] - (RW) Control the function of HW to skip parsing PCO phase bit in HT operation IE of Beacon from BSSID0, if it is existed.
                                     Write 0 is disable, and write 1 to Enable.
                                     Read returns the configured value.
                                     0: Skip parsing
                                     1: Parsing
    BCN_CONTENT_CHK_EN_BSSID1[4] - (RW) Enable checking below specified contents in BSSID1 beacon frame if changed. Refer Chapter Beacon content check for more details.
                                     If Disable, chip will not check all BSSID1 beacons frame by this function.
                                     If Enable, will check the specified content in BSSID1 beacon frame and if the specified content changed, beacon frames will be received, or it will be dropped. It will apply in WLAN_ON state or ON state. 
                                     Write 0 is disable, and write 1 to Enable. 
                                     Read returns the configured value.
                                     0: Disable
                                     1: Enable
    HT_PCO_PHASE_SKIP_EN_BSSID1[5] - (RW) Control the function of HW to skip parsing PCO phase bit in HT operation IE of Beacon from BSSID1, if it is existed.
                                     Write 0 is disable, and write 1 to Enable.
                                     Read returns the configured value.
                                     0: Skip parsing
                                     1: Parsing
    RESP_BA_IF_RX_BAR_W_NOACK[6] - (RW) Setting for IOT case
                                     0: Not response BA if receiving a BAR with ACK Policy=NoACK
                                     1: Will response BA even the received BAR with ACK Policy=NoACK.
    BCN_WO_TIM_IE_SEL[7]         - (RW) Setting for beacon without TIM IE
                                     0: If received beacon without TIM IE, the signal from RMAC to LP rmac_bcn_w_tim_ie_flag will be 0; if received beacon with TIM IE, the signal rmac_bcn_w_tim_ie_flag wll be 1 to qualify rmac_bcn_w_bmc_flag signal.
                                     1: The signal from RMAC to LP rmac_bcn_w_tim_ie_flag wll be 1 regardless of beacon with/without TIM IE to qualify rmac_bcn_w_bmc_flag. And rmac_bcn_w_bmc_flag will be 0.
    P2P_OUI_TYPE_7_0[15..8]      - (RW) P2P OUI Type
                                     P2P OUI Type for Beacon content check used
    BCN_CONTENT_CHK_EN_BSSID2[16] - (RW) Enable checking below specified contents in BSSID2 beacon frame if changed. Refer Chapter Beacon content check for more details.
                                     If Disable, Chip will not check all BSSID2 beacons frame by this function.
                                     If Enable, Chip will check the specified content in BSSID2 beacon frame and if the specified content changed, beacon frames will be received, or it will be dropped. It will apply in WLAN_ON state or ON state. 
                                     Write 0 to disable, and write 1 to Enable. 
                                     Read returns the configured value.
                                     0: Disable
                                     1: Enable
    HT_PCO_PHASE_SKIP_EN_BSSID2[17] - (RW) Control the function of HW to skip parsing PCO phase bit in HT operation IE of Beacon from BSSID2, if it is existed.
                                     Write 0 to disable, and write 1 to Enable.
                                     Read returns the configured value.
                                     0: Skip parsing
                                     1: Parsing
    BCN_CONTENT_CHK_EN_BSSID3[18] - (RW) Enable checking below specified contents in BSSID3 beacon frame if changed. Refer Chapter Beacon content check for more details.
                                     If Disable, Chip will not check all BSSID3 beacons frame by this function.
                                     If Enable, Chip will check the specified content in BSSID3 beacon frame and if the specified content changed, beacon frames will be received, or it will be dropped. It will apply in WLAN_ON state or ON state. 
                                     Write 0 to disable, and write 1 to Enable. 
                                     Read returns the configured value.
                                     0: Disable
                                     1: Enable
    HT_PCO_PHASE_SKIP_EN_BSSID3[19] - (RW) Control the function of HW to skip parsing PCO phase bit in HT operation IE of Beacon from BSSID3, if it is existed.
                                     Write 0 to disable, and write 1 to Enable.
                                     Read returns the configured value.
                                     0: Skip parsing
                                     1: Parsing
    SMPS_MODE[21..20]            - (RW) SMPS mode control
                                     2'b00: Disable SM Power Saving function. HW automatic turn on all RX stream regardless of RMCR[25:22]
                                     2'b01: Static SM Power Saving mode. SW need to enable one of all RX stream bit (RMCR[25:22])
                                     2'b10: Dynamic SM Power Saving mode. SW need to enable one of all RX stream bit (RMCR[25:22]). HW turn on all RX streams when received a frame (RTS only when set RMCR[26]) addressed to me. HW turn off RX streams and only a single receive chain active when received: A frame not addressed to me
                                     ; A frame with TA not that TXOP owner; CS indicates channel is idle at TxPIFS slot boundary (CR program)
                                     2'b11: Disable SM Power Saving function. HW need turn on  RX stream bit according to (RMCR[25:22])
    RX_STREAM0[22]               - (RW) SMPS RX stream0 control
                                     0: disable RX stream 0
                                     1: enable RX stream 0
    RX_STREAM1[23]               - (RW) SMPS RX stream1 control
                                     0: disable RX stream 1
                                     1: enable RX stream 1
    RX_STREAM2[24]               - (RW) SMPS RX stream2 control
                                     0: disable RX stream 2
                                     1: enable RX stream 2
    RX_STREAM3[25]               - (RW) SMPS RX stream3 control
                                     0: disable RX stream 3
                                     1: enable RX stream 3
    SMPS_BY_RTS_ONLY[26]         - (RW) SMPS by RTS frame only
                                     0: SMPS according to all frame to me
                                     1: SMPS only according RTS frame to me
    RX_EARLY_TERMINATE_TIME_3_0[29..27] - (RW) For LP improve to early terminate RX refinement.
    RX_EARLY_TERMINATE_MODE[31..30] - (RW) For LP improve to early terminate RX.
                                     Mode0: Disable this function
                                     Mode1: Assert 1T mac2phy_disable_phy to implement this function
                                     Mode2: De-assert phy2mac_rx 100ns to implement this function
                                     Mode3: De-assert phy2mac_rx by RMAC calculation

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RMCR_RX_EARLY_TERMINATE_MODE_ADDR      BN1_WF_RMAC_TOP_RMCR_ADDR
#define BN1_WF_RMAC_TOP_RMCR_RX_EARLY_TERMINATE_MODE_MASK      0xC0000000                // RX_EARLY_TERMINATE_MODE[31..30]
#define BN1_WF_RMAC_TOP_RMCR_RX_EARLY_TERMINATE_MODE_SHFT      30
#define BN1_WF_RMAC_TOP_RMCR_RX_EARLY_TERMINATE_TIME_3_0_ADDR  BN1_WF_RMAC_TOP_RMCR_ADDR
#define BN1_WF_RMAC_TOP_RMCR_RX_EARLY_TERMINATE_TIME_3_0_MASK  0x38000000                // RX_EARLY_TERMINATE_TIME_3_0[29..27]
#define BN1_WF_RMAC_TOP_RMCR_RX_EARLY_TERMINATE_TIME_3_0_SHFT  27
#define BN1_WF_RMAC_TOP_RMCR_SMPS_BY_RTS_ONLY_ADDR             BN1_WF_RMAC_TOP_RMCR_ADDR
#define BN1_WF_RMAC_TOP_RMCR_SMPS_BY_RTS_ONLY_MASK             0x04000000                // SMPS_BY_RTS_ONLY[26]
#define BN1_WF_RMAC_TOP_RMCR_SMPS_BY_RTS_ONLY_SHFT             26
#define BN1_WF_RMAC_TOP_RMCR_RX_STREAM3_ADDR                   BN1_WF_RMAC_TOP_RMCR_ADDR
#define BN1_WF_RMAC_TOP_RMCR_RX_STREAM3_MASK                   0x02000000                // RX_STREAM3[25]
#define BN1_WF_RMAC_TOP_RMCR_RX_STREAM3_SHFT                   25
#define BN1_WF_RMAC_TOP_RMCR_RX_STREAM2_ADDR                   BN1_WF_RMAC_TOP_RMCR_ADDR
#define BN1_WF_RMAC_TOP_RMCR_RX_STREAM2_MASK                   0x01000000                // RX_STREAM2[24]
#define BN1_WF_RMAC_TOP_RMCR_RX_STREAM2_SHFT                   24
#define BN1_WF_RMAC_TOP_RMCR_RX_STREAM1_ADDR                   BN1_WF_RMAC_TOP_RMCR_ADDR
#define BN1_WF_RMAC_TOP_RMCR_RX_STREAM1_MASK                   0x00800000                // RX_STREAM1[23]
#define BN1_WF_RMAC_TOP_RMCR_RX_STREAM1_SHFT                   23
#define BN1_WF_RMAC_TOP_RMCR_RX_STREAM0_ADDR                   BN1_WF_RMAC_TOP_RMCR_ADDR
#define BN1_WF_RMAC_TOP_RMCR_RX_STREAM0_MASK                   0x00400000                // RX_STREAM0[22]
#define BN1_WF_RMAC_TOP_RMCR_RX_STREAM0_SHFT                   22
#define BN1_WF_RMAC_TOP_RMCR_SMPS_MODE_ADDR                    BN1_WF_RMAC_TOP_RMCR_ADDR
#define BN1_WF_RMAC_TOP_RMCR_SMPS_MODE_MASK                    0x00300000                // SMPS_MODE[21..20]
#define BN1_WF_RMAC_TOP_RMCR_SMPS_MODE_SHFT                    20
#define BN1_WF_RMAC_TOP_RMCR_HT_PCO_PHASE_SKIP_EN_BSSID3_ADDR  BN1_WF_RMAC_TOP_RMCR_ADDR
#define BN1_WF_RMAC_TOP_RMCR_HT_PCO_PHASE_SKIP_EN_BSSID3_MASK  0x00080000                // HT_PCO_PHASE_SKIP_EN_BSSID3[19]
#define BN1_WF_RMAC_TOP_RMCR_HT_PCO_PHASE_SKIP_EN_BSSID3_SHFT  19
#define BN1_WF_RMAC_TOP_RMCR_BCN_CONTENT_CHK_EN_BSSID3_ADDR    BN1_WF_RMAC_TOP_RMCR_ADDR
#define BN1_WF_RMAC_TOP_RMCR_BCN_CONTENT_CHK_EN_BSSID3_MASK    0x00040000                // BCN_CONTENT_CHK_EN_BSSID3[18]
#define BN1_WF_RMAC_TOP_RMCR_BCN_CONTENT_CHK_EN_BSSID3_SHFT    18
#define BN1_WF_RMAC_TOP_RMCR_HT_PCO_PHASE_SKIP_EN_BSSID2_ADDR  BN1_WF_RMAC_TOP_RMCR_ADDR
#define BN1_WF_RMAC_TOP_RMCR_HT_PCO_PHASE_SKIP_EN_BSSID2_MASK  0x00020000                // HT_PCO_PHASE_SKIP_EN_BSSID2[17]
#define BN1_WF_RMAC_TOP_RMCR_HT_PCO_PHASE_SKIP_EN_BSSID2_SHFT  17
#define BN1_WF_RMAC_TOP_RMCR_BCN_CONTENT_CHK_EN_BSSID2_ADDR    BN1_WF_RMAC_TOP_RMCR_ADDR
#define BN1_WF_RMAC_TOP_RMCR_BCN_CONTENT_CHK_EN_BSSID2_MASK    0x00010000                // BCN_CONTENT_CHK_EN_BSSID2[16]
#define BN1_WF_RMAC_TOP_RMCR_BCN_CONTENT_CHK_EN_BSSID2_SHFT    16
#define BN1_WF_RMAC_TOP_RMCR_P2P_OUI_TYPE_7_0_ADDR             BN1_WF_RMAC_TOP_RMCR_ADDR
#define BN1_WF_RMAC_TOP_RMCR_P2P_OUI_TYPE_7_0_MASK             0x0000FF00                // P2P_OUI_TYPE_7_0[15..8]
#define BN1_WF_RMAC_TOP_RMCR_P2P_OUI_TYPE_7_0_SHFT             8
#define BN1_WF_RMAC_TOP_RMCR_BCN_WO_TIM_IE_SEL_ADDR            BN1_WF_RMAC_TOP_RMCR_ADDR
#define BN1_WF_RMAC_TOP_RMCR_BCN_WO_TIM_IE_SEL_MASK            0x00000080                // BCN_WO_TIM_IE_SEL[7]
#define BN1_WF_RMAC_TOP_RMCR_BCN_WO_TIM_IE_SEL_SHFT            7
#define BN1_WF_RMAC_TOP_RMCR_RESP_BA_IF_RX_BAR_W_NOACK_ADDR    BN1_WF_RMAC_TOP_RMCR_ADDR
#define BN1_WF_RMAC_TOP_RMCR_RESP_BA_IF_RX_BAR_W_NOACK_MASK    0x00000040                // RESP_BA_IF_RX_BAR_W_NOACK[6]
#define BN1_WF_RMAC_TOP_RMCR_RESP_BA_IF_RX_BAR_W_NOACK_SHFT    6
#define BN1_WF_RMAC_TOP_RMCR_HT_PCO_PHASE_SKIP_EN_BSSID1_ADDR  BN1_WF_RMAC_TOP_RMCR_ADDR
#define BN1_WF_RMAC_TOP_RMCR_HT_PCO_PHASE_SKIP_EN_BSSID1_MASK  0x00000020                // HT_PCO_PHASE_SKIP_EN_BSSID1[5]
#define BN1_WF_RMAC_TOP_RMCR_HT_PCO_PHASE_SKIP_EN_BSSID1_SHFT  5
#define BN1_WF_RMAC_TOP_RMCR_BCN_CONTENT_CHK_EN_BSSID1_ADDR    BN1_WF_RMAC_TOP_RMCR_ADDR
#define BN1_WF_RMAC_TOP_RMCR_BCN_CONTENT_CHK_EN_BSSID1_MASK    0x00000010                // BCN_CONTENT_CHK_EN_BSSID1[4]
#define BN1_WF_RMAC_TOP_RMCR_BCN_CONTENT_CHK_EN_BSSID1_SHFT    4
#define BN1_WF_RMAC_TOP_RMCR_HT_PCO_PHASE_SKIP_EN_BSSID0_ADDR  BN1_WF_RMAC_TOP_RMCR_ADDR
#define BN1_WF_RMAC_TOP_RMCR_HT_PCO_PHASE_SKIP_EN_BSSID0_MASK  0x00000008                // HT_PCO_PHASE_SKIP_EN_BSSID0[3]
#define BN1_WF_RMAC_TOP_RMCR_HT_PCO_PHASE_SKIP_EN_BSSID0_SHFT  3
#define BN1_WF_RMAC_TOP_RMCR_BCN_CONTENT_CHK_EN_BSSID0_ADDR    BN1_WF_RMAC_TOP_RMCR_ADDR
#define BN1_WF_RMAC_TOP_RMCR_BCN_CONTENT_CHK_EN_BSSID0_MASK    0x00000004                // BCN_CONTENT_CHK_EN_BSSID0[2]
#define BN1_WF_RMAC_TOP_RMCR_BCN_CONTENT_CHK_EN_BSSID0_SHFT    2
#define BN1_WF_RMAC_TOP_RMCR_SMPS_BY_TF_ADDR                   BN1_WF_RMAC_TOP_RMCR_ADDR
#define BN1_WF_RMAC_TOP_RMCR_SMPS_BY_TF_MASK                   0x00000002                // SMPS_BY_TF[1]
#define BN1_WF_RMAC_TOP_RMCR_SMPS_BY_TF_SHFT                   1
#define BN1_WF_RMAC_TOP_RMCR_RX_NOACK_CTRL_ADDR                BN1_WF_RMAC_TOP_RMCR_ADDR
#define BN1_WF_RMAC_TOP_RMCR_RX_NOACK_CTRL_MASK                0x00000001                // RX_NOACK_CTRL[0]
#define BN1_WF_RMAC_TOP_RMCR_RX_NOACK_CTRL_SHFT                0

/* =====================================================================================

  ---MORE (0x820f5000 + 0x608)---

    MPDU_LEN_COMPARE_13_0[13..0] - (RW) For MPDU length comparison for PHY MIB counter
                                     Debug only
    RX_OUTOFLEN_CNT_FIFOFULL_EN[14] - (RW) Count Rx out of length range case as Rx FIFO full
                                     0 : Rx out of length range packet will not increment RXFIFOFULL MIB counter
                                     1 : Rx out of length range packet will increment RXFIFOFULL MIB counter
    RX_NDP_CNT_OUTOFLEN_EN[15]   - (RW) Count Rx NDP(Null Data Packet) as out of length range.
                                     0 : Rx NDP will not increment RXOUTOFLEN MIB counter
                                     1 : Rx NDP will increment RXOUTOFLEN MIB counter
    RMAC_CR_SMPS_SLOT_IDLE_CNT[17..16] - (RW) SMPS slot idle counter control
                                     2'b00: PIFS
                                     2'b01: PIFS + 1*SLOT
                                     2'b10: PIFS + 2*SLOT
                                     2'b11: PIFS + 3*SLOT
    RMAC_CR_BIPN_TSF_DLY_EN[18]  - (RW) RX BCN BIPN check and delay TSF update
                                     1'b1: enable
                                     1'b0: disable
    RMAC_CR_BCC_DROP_BCN_DIS[19] - (RW) Disable RX BCN Hash result mismatch drop, rx all BCN to MDP
                                     and drop BCN by MDP
                                     1'b0: disable
                                     1'b1: enable
    RMAC_CR_NO_VEC2[20]          - (RW) For normal usage, SW does not need to configure this register
    RMAC_BTEN_RESULT_SEL[21]     - (RW) For normal usage, SW does not need to configure this register
    DIS_RMAC_FAKE_MDRDY[22]      - (RW) For normal usage, SW does not need to configure this register
    MAC2PHY_RXD_ACK_BEHAVIOR[23] - (RW) For normal usage, SW does not need to configure this register
    Freerun_40MCK_en[24]         - (RW) For normal usage, SW does not need to configure this register
    RMAC_CR_LP_DROP_BTIM_DIS[25] - (RW) Disable LP RX BTIM Drop, 
                                     1'b0: disable
                                     1'b1: enable
    DROP_NDP[26]                 - (RW) Drop NPD frame
    DROP_UC2ME_BSSID_UNMATCH[27] - (RW) Drop UC2ME but corresponding BSSID is not matched
    BCN_BIPN_NON_STBC_DIS[28]    - (RW) BCN Secure BIPN check disable STBC = 2'b00 check
    BSR_FIRST_LAT_EN[29]         - (RW) RX BSR only latch first FCS PASS value
                                     1'b0: latch last FCS PASS
                                     1'b1: latch first FCS PASS
    MUAR_MODE_SEL[31..30]        - (RW) MUAR table mode selection
                                     2'b00: normal mode
                                     2'b01: repeater mode
                                     2'b11: reserved

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MORE_MUAR_MODE_SEL_ADDR                BN1_WF_RMAC_TOP_MORE_ADDR
#define BN1_WF_RMAC_TOP_MORE_MUAR_MODE_SEL_MASK                0xC0000000                // MUAR_MODE_SEL[31..30]
#define BN1_WF_RMAC_TOP_MORE_MUAR_MODE_SEL_SHFT                30
#define BN1_WF_RMAC_TOP_MORE_BSR_FIRST_LAT_EN_ADDR             BN1_WF_RMAC_TOP_MORE_ADDR
#define BN1_WF_RMAC_TOP_MORE_BSR_FIRST_LAT_EN_MASK             0x20000000                // BSR_FIRST_LAT_EN[29]
#define BN1_WF_RMAC_TOP_MORE_BSR_FIRST_LAT_EN_SHFT             29
#define BN1_WF_RMAC_TOP_MORE_BCN_BIPN_NON_STBC_DIS_ADDR        BN1_WF_RMAC_TOP_MORE_ADDR
#define BN1_WF_RMAC_TOP_MORE_BCN_BIPN_NON_STBC_DIS_MASK        0x10000000                // BCN_BIPN_NON_STBC_DIS[28]
#define BN1_WF_RMAC_TOP_MORE_BCN_BIPN_NON_STBC_DIS_SHFT        28
#define BN1_WF_RMAC_TOP_MORE_DROP_UC2ME_BSSID_UNMATCH_ADDR     BN1_WF_RMAC_TOP_MORE_ADDR
#define BN1_WF_RMAC_TOP_MORE_DROP_UC2ME_BSSID_UNMATCH_MASK     0x08000000                // DROP_UC2ME_BSSID_UNMATCH[27]
#define BN1_WF_RMAC_TOP_MORE_DROP_UC2ME_BSSID_UNMATCH_SHFT     27
#define BN1_WF_RMAC_TOP_MORE_DROP_NDP_ADDR                     BN1_WF_RMAC_TOP_MORE_ADDR
#define BN1_WF_RMAC_TOP_MORE_DROP_NDP_MASK                     0x04000000                // DROP_NDP[26]
#define BN1_WF_RMAC_TOP_MORE_DROP_NDP_SHFT                     26
#define BN1_WF_RMAC_TOP_MORE_RMAC_CR_LP_DROP_BTIM_DIS_ADDR     BN1_WF_RMAC_TOP_MORE_ADDR
#define BN1_WF_RMAC_TOP_MORE_RMAC_CR_LP_DROP_BTIM_DIS_MASK     0x02000000                // RMAC_CR_LP_DROP_BTIM_DIS[25]
#define BN1_WF_RMAC_TOP_MORE_RMAC_CR_LP_DROP_BTIM_DIS_SHFT     25
#define BN1_WF_RMAC_TOP_MORE_Freerun_40MCK_en_ADDR             BN1_WF_RMAC_TOP_MORE_ADDR
#define BN1_WF_RMAC_TOP_MORE_Freerun_40MCK_en_MASK             0x01000000                // Freerun_40MCK_en[24]
#define BN1_WF_RMAC_TOP_MORE_Freerun_40MCK_en_SHFT             24
#define BN1_WF_RMAC_TOP_MORE_MAC2PHY_RXD_ACK_BEHAVIOR_ADDR     BN1_WF_RMAC_TOP_MORE_ADDR
#define BN1_WF_RMAC_TOP_MORE_MAC2PHY_RXD_ACK_BEHAVIOR_MASK     0x00800000                // MAC2PHY_RXD_ACK_BEHAVIOR[23]
#define BN1_WF_RMAC_TOP_MORE_MAC2PHY_RXD_ACK_BEHAVIOR_SHFT     23
#define BN1_WF_RMAC_TOP_MORE_DIS_RMAC_FAKE_MDRDY_ADDR          BN1_WF_RMAC_TOP_MORE_ADDR
#define BN1_WF_RMAC_TOP_MORE_DIS_RMAC_FAKE_MDRDY_MASK          0x00400000                // DIS_RMAC_FAKE_MDRDY[22]
#define BN1_WF_RMAC_TOP_MORE_DIS_RMAC_FAKE_MDRDY_SHFT          22
#define BN1_WF_RMAC_TOP_MORE_RMAC_BTEN_RESULT_SEL_ADDR         BN1_WF_RMAC_TOP_MORE_ADDR
#define BN1_WF_RMAC_TOP_MORE_RMAC_BTEN_RESULT_SEL_MASK         0x00200000                // RMAC_BTEN_RESULT_SEL[21]
#define BN1_WF_RMAC_TOP_MORE_RMAC_BTEN_RESULT_SEL_SHFT         21
#define BN1_WF_RMAC_TOP_MORE_RMAC_CR_NO_VEC2_ADDR              BN1_WF_RMAC_TOP_MORE_ADDR
#define BN1_WF_RMAC_TOP_MORE_RMAC_CR_NO_VEC2_MASK              0x00100000                // RMAC_CR_NO_VEC2[20]
#define BN1_WF_RMAC_TOP_MORE_RMAC_CR_NO_VEC2_SHFT              20
#define BN1_WF_RMAC_TOP_MORE_RMAC_CR_BCC_DROP_BCN_DIS_ADDR     BN1_WF_RMAC_TOP_MORE_ADDR
#define BN1_WF_RMAC_TOP_MORE_RMAC_CR_BCC_DROP_BCN_DIS_MASK     0x00080000                // RMAC_CR_BCC_DROP_BCN_DIS[19]
#define BN1_WF_RMAC_TOP_MORE_RMAC_CR_BCC_DROP_BCN_DIS_SHFT     19
#define BN1_WF_RMAC_TOP_MORE_RMAC_CR_BIPN_TSF_DLY_EN_ADDR      BN1_WF_RMAC_TOP_MORE_ADDR
#define BN1_WF_RMAC_TOP_MORE_RMAC_CR_BIPN_TSF_DLY_EN_MASK      0x00040000                // RMAC_CR_BIPN_TSF_DLY_EN[18]
#define BN1_WF_RMAC_TOP_MORE_RMAC_CR_BIPN_TSF_DLY_EN_SHFT      18
#define BN1_WF_RMAC_TOP_MORE_RMAC_CR_SMPS_SLOT_IDLE_CNT_ADDR   BN1_WF_RMAC_TOP_MORE_ADDR
#define BN1_WF_RMAC_TOP_MORE_RMAC_CR_SMPS_SLOT_IDLE_CNT_MASK   0x00030000                // RMAC_CR_SMPS_SLOT_IDLE_CNT[17..16]
#define BN1_WF_RMAC_TOP_MORE_RMAC_CR_SMPS_SLOT_IDLE_CNT_SHFT   16
#define BN1_WF_RMAC_TOP_MORE_RX_NDP_CNT_OUTOFLEN_EN_ADDR       BN1_WF_RMAC_TOP_MORE_ADDR
#define BN1_WF_RMAC_TOP_MORE_RX_NDP_CNT_OUTOFLEN_EN_MASK       0x00008000                // RX_NDP_CNT_OUTOFLEN_EN[15]
#define BN1_WF_RMAC_TOP_MORE_RX_NDP_CNT_OUTOFLEN_EN_SHFT       15
#define BN1_WF_RMAC_TOP_MORE_RX_OUTOFLEN_CNT_FIFOFULL_EN_ADDR  BN1_WF_RMAC_TOP_MORE_ADDR
#define BN1_WF_RMAC_TOP_MORE_RX_OUTOFLEN_CNT_FIFOFULL_EN_MASK  0x00004000                // RX_OUTOFLEN_CNT_FIFOFULL_EN[14]
#define BN1_WF_RMAC_TOP_MORE_RX_OUTOFLEN_CNT_FIFOFULL_EN_SHFT  14
#define BN1_WF_RMAC_TOP_MORE_MPDU_LEN_COMPARE_13_0_ADDR        BN1_WF_RMAC_TOP_MORE_ADDR
#define BN1_WF_RMAC_TOP_MORE_MPDU_LEN_COMPARE_13_0_MASK        0x00003FFF                // MPDU_LEN_COMPARE_13_0[13..0]
#define BN1_WF_RMAC_TOP_MORE_MPDU_LEN_COMPARE_13_0_SHFT        0

/* =====================================================================================

  ---MISC (0x820f5000 + 0x610)---

    DROP_THRESHOLD[15..0]        - (RW) MPDU drop threshold
                                     RMAC will drop MPDU with length > DROP_THRESHOLD
    PSMP_DUR_SEL[16]             - (RW) PSMP duration control selection
                                     0: PSMP duration will be PSMP action frame header duration
                                     1: PSMP duration will be PSMP Sequence Duration Field (in us)
    BA_TMP_CREATE_DIS[17]        - (RW) BA scoreboard create control
                                     0: Temporary BA will create by AMPDU/BAR
                                     1: Temporary BA will create by AMPDU/BAR/MPDU
    RMAC_CR_LP_DROP_BCN_DIS[18]  - (RW) Disable LP RX BCN drop, rx all BCN to MDP, and hash drop by MDP
                                     and drop BCN by MDP
                                     1'b0: disable
                                     1'b1: enable
    TSF_HDREND_TO_PLDEND_OFST_EN[19] - (RW) Fine tune of TSF value by SW
                                     0: Fine tune of TSF by HW tick
                                     1: Fine tune of TSF by SW setting
    TSF_HDREND_TO_PLDEND_OFST_SW[23..20] - (RW) Fine tune of TSF value by SW when TSF_HDREND_TO_PLDEND_OFST_EN = 1
    SIGNALING_TA0_SEL[24]        - (RW) Rule 0 for Rx signaling TA
                                     1 : Use original received Rx A2 bit[0]
                                     0 : If Rx frame type is control frame, treat Rx A2 bit [0] = 0.
    SIGNALING_TA1_SEL[25]        - (RW) Rule 1 for Rx signaling TA
                                     1 : Directly treat all Rx A2 bit [0] = 0
                                     0 : Use the rule of SIGNALING_TA0_SEL for Rx A2 bit[0] parsing.
    SIGNALING_PKT0_SEL[26]       - (RW) Rule 0 for Rx Packet
    SIGNALING_PKT1_SEL[27]       - (RW) Rule 1 for Rx Packet
    RMAC_CR_RX_HOLD_VALUE[31..28] - (RW) For normal usage, SW does not need to configure this register

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MISC_RMAC_CR_RX_HOLD_VALUE_ADDR        BN1_WF_RMAC_TOP_MISC_ADDR
#define BN1_WF_RMAC_TOP_MISC_RMAC_CR_RX_HOLD_VALUE_MASK        0xF0000000                // RMAC_CR_RX_HOLD_VALUE[31..28]
#define BN1_WF_RMAC_TOP_MISC_RMAC_CR_RX_HOLD_VALUE_SHFT        28
#define BN1_WF_RMAC_TOP_MISC_SIGNALING_PKT1_SEL_ADDR           BN1_WF_RMAC_TOP_MISC_ADDR
#define BN1_WF_RMAC_TOP_MISC_SIGNALING_PKT1_SEL_MASK           0x08000000                // SIGNALING_PKT1_SEL[27]
#define BN1_WF_RMAC_TOP_MISC_SIGNALING_PKT1_SEL_SHFT           27
#define BN1_WF_RMAC_TOP_MISC_SIGNALING_PKT0_SEL_ADDR           BN1_WF_RMAC_TOP_MISC_ADDR
#define BN1_WF_RMAC_TOP_MISC_SIGNALING_PKT0_SEL_MASK           0x04000000                // SIGNALING_PKT0_SEL[26]
#define BN1_WF_RMAC_TOP_MISC_SIGNALING_PKT0_SEL_SHFT           26
#define BN1_WF_RMAC_TOP_MISC_SIGNALING_TA1_SEL_ADDR            BN1_WF_RMAC_TOP_MISC_ADDR
#define BN1_WF_RMAC_TOP_MISC_SIGNALING_TA1_SEL_MASK            0x02000000                // SIGNALING_TA1_SEL[25]
#define BN1_WF_RMAC_TOP_MISC_SIGNALING_TA1_SEL_SHFT            25
#define BN1_WF_RMAC_TOP_MISC_SIGNALING_TA0_SEL_ADDR            BN1_WF_RMAC_TOP_MISC_ADDR
#define BN1_WF_RMAC_TOP_MISC_SIGNALING_TA0_SEL_MASK            0x01000000                // SIGNALING_TA0_SEL[24]
#define BN1_WF_RMAC_TOP_MISC_SIGNALING_TA0_SEL_SHFT            24
#define BN1_WF_RMAC_TOP_MISC_TSF_HDREND_TO_PLDEND_OFST_SW_ADDR BN1_WF_RMAC_TOP_MISC_ADDR
#define BN1_WF_RMAC_TOP_MISC_TSF_HDREND_TO_PLDEND_OFST_SW_MASK 0x00F00000                // TSF_HDREND_TO_PLDEND_OFST_SW[23..20]
#define BN1_WF_RMAC_TOP_MISC_TSF_HDREND_TO_PLDEND_OFST_SW_SHFT 20
#define BN1_WF_RMAC_TOP_MISC_TSF_HDREND_TO_PLDEND_OFST_EN_ADDR BN1_WF_RMAC_TOP_MISC_ADDR
#define BN1_WF_RMAC_TOP_MISC_TSF_HDREND_TO_PLDEND_OFST_EN_MASK 0x00080000                // TSF_HDREND_TO_PLDEND_OFST_EN[19]
#define BN1_WF_RMAC_TOP_MISC_TSF_HDREND_TO_PLDEND_OFST_EN_SHFT 19
#define BN1_WF_RMAC_TOP_MISC_RMAC_CR_LP_DROP_BCN_DIS_ADDR      BN1_WF_RMAC_TOP_MISC_ADDR
#define BN1_WF_RMAC_TOP_MISC_RMAC_CR_LP_DROP_BCN_DIS_MASK      0x00040000                // RMAC_CR_LP_DROP_BCN_DIS[18]
#define BN1_WF_RMAC_TOP_MISC_RMAC_CR_LP_DROP_BCN_DIS_SHFT      18
#define BN1_WF_RMAC_TOP_MISC_BA_TMP_CREATE_DIS_ADDR            BN1_WF_RMAC_TOP_MISC_ADDR
#define BN1_WF_RMAC_TOP_MISC_BA_TMP_CREATE_DIS_MASK            0x00020000                // BA_TMP_CREATE_DIS[17]
#define BN1_WF_RMAC_TOP_MISC_BA_TMP_CREATE_DIS_SHFT            17
#define BN1_WF_RMAC_TOP_MISC_PSMP_DUR_SEL_ADDR                 BN1_WF_RMAC_TOP_MISC_ADDR
#define BN1_WF_RMAC_TOP_MISC_PSMP_DUR_SEL_MASK                 0x00010000                // PSMP_DUR_SEL[16]
#define BN1_WF_RMAC_TOP_MISC_PSMP_DUR_SEL_SHFT                 16
#define BN1_WF_RMAC_TOP_MISC_DROP_THRESHOLD_ADDR               BN1_WF_RMAC_TOP_MISC_ADDR
#define BN1_WF_RMAC_TOP_MISC_DROP_THRESHOLD_MASK               0x0000FFFF                // DROP_THRESHOLD[15..0]
#define BN1_WF_RMAC_TOP_MISC_DROP_THRESHOLD_SHFT               0

/* =====================================================================================

  ---MISC2 (0x820f5000 + 0x614)---

    DOT11VHTPROBEDELAY[9..0]     - (RW) The definition of dot11VHTProbeDelay
    RESERVED10[13..10]           - (RO) Reserved bits
    ZHF_SUPPORT[14]              - (RW) Zero handoff support for NAV update or not
                                     0: update NAV for normal regular rule
                                     1: update NAV by wlan table decision
    RESERVED15[15]               - (RO) Reserved bits
    SMPS_TYPE_MGMT_EN[16]        - (RW) Smart connection with management packet
                                     1'b0: Disable 
                                     1'b1: Enable
    RXPHY_DLAY_FOR_TXOPPS_DIS[17] - (RW) TXOP Power Saving wakeup control
                                     0: Enable the RXPHY_DELAY compensation for TXOPPS
                                     1: Disable the RXPHY_DELAY compensation for TXOPPS
    RESERVED18[18]               - (RO) Reserved bits
    PARTIAL_BCN_RCPI_EN[19]      - (RW) Partial beacon RCPI update control
                                     0: Do not update RCPI if partial beacon meet
                                     1: Do update RCPI if partial beacon meet
    INDIUM_DATA_PKT_BSSID_SET[23..20] - (RW) INDIUM management frame control
                                     0: set more bit to 0
                                     1: set more bit to 1 if packet is data frame
                                     bit23 for BSSID3
                                     bit22 for BSSID2
                                     bit21 for BSSID1
                                     bit20 for BSSID0
    INDIUM_MGNT_PKT_BSSID_SET[27..24] - (RW) INDIUM management frame control
                                     0: set more bit to 0
                                     1: set more bit to 1 if packet is management frame
                                     bit27 for BSSID3
                                     bit26 for BSSID2
                                     bit25 for BSSID1
                                     bit24 for BSSID0
    INDIUM_MORE_BIT_BSSID_SET[31..28] - (RW) INDIUM more bit control
                                     0: use inverse of more_bit
                                     1: use more-bit
                                     bit31 for BSSID3
                                     bit30 for BSSID2
                                     bit29 for BSSID1
                                     bit28 for BSSID0

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MISC2_INDIUM_MORE_BIT_BSSID_SET_ADDR   BN1_WF_RMAC_TOP_MISC2_ADDR
#define BN1_WF_RMAC_TOP_MISC2_INDIUM_MORE_BIT_BSSID_SET_MASK   0xF0000000                // INDIUM_MORE_BIT_BSSID_SET[31..28]
#define BN1_WF_RMAC_TOP_MISC2_INDIUM_MORE_BIT_BSSID_SET_SHFT   28
#define BN1_WF_RMAC_TOP_MISC2_INDIUM_MGNT_PKT_BSSID_SET_ADDR   BN1_WF_RMAC_TOP_MISC2_ADDR
#define BN1_WF_RMAC_TOP_MISC2_INDIUM_MGNT_PKT_BSSID_SET_MASK   0x0F000000                // INDIUM_MGNT_PKT_BSSID_SET[27..24]
#define BN1_WF_RMAC_TOP_MISC2_INDIUM_MGNT_PKT_BSSID_SET_SHFT   24
#define BN1_WF_RMAC_TOP_MISC2_INDIUM_DATA_PKT_BSSID_SET_ADDR   BN1_WF_RMAC_TOP_MISC2_ADDR
#define BN1_WF_RMAC_TOP_MISC2_INDIUM_DATA_PKT_BSSID_SET_MASK   0x00F00000                // INDIUM_DATA_PKT_BSSID_SET[23..20]
#define BN1_WF_RMAC_TOP_MISC2_INDIUM_DATA_PKT_BSSID_SET_SHFT   20
#define BN1_WF_RMAC_TOP_MISC2_PARTIAL_BCN_RCPI_EN_ADDR         BN1_WF_RMAC_TOP_MISC2_ADDR
#define BN1_WF_RMAC_TOP_MISC2_PARTIAL_BCN_RCPI_EN_MASK         0x00080000                // PARTIAL_BCN_RCPI_EN[19]
#define BN1_WF_RMAC_TOP_MISC2_PARTIAL_BCN_RCPI_EN_SHFT         19
#define BN1_WF_RMAC_TOP_MISC2_RXPHY_DLAY_FOR_TXOPPS_DIS_ADDR   BN1_WF_RMAC_TOP_MISC2_ADDR
#define BN1_WF_RMAC_TOP_MISC2_RXPHY_DLAY_FOR_TXOPPS_DIS_MASK   0x00020000                // RXPHY_DLAY_FOR_TXOPPS_DIS[17]
#define BN1_WF_RMAC_TOP_MISC2_RXPHY_DLAY_FOR_TXOPPS_DIS_SHFT   17
#define BN1_WF_RMAC_TOP_MISC2_SMPS_TYPE_MGMT_EN_ADDR           BN1_WF_RMAC_TOP_MISC2_ADDR
#define BN1_WF_RMAC_TOP_MISC2_SMPS_TYPE_MGMT_EN_MASK           0x00010000                // SMPS_TYPE_MGMT_EN[16]
#define BN1_WF_RMAC_TOP_MISC2_SMPS_TYPE_MGMT_EN_SHFT           16
#define BN1_WF_RMAC_TOP_MISC2_ZHF_SUPPORT_ADDR                 BN1_WF_RMAC_TOP_MISC2_ADDR
#define BN1_WF_RMAC_TOP_MISC2_ZHF_SUPPORT_MASK                 0x00004000                // ZHF_SUPPORT[14]
#define BN1_WF_RMAC_TOP_MISC2_ZHF_SUPPORT_SHFT                 14
#define BN1_WF_RMAC_TOP_MISC2_DOT11VHTPROBEDELAY_ADDR          BN1_WF_RMAC_TOP_MISC2_ADDR
#define BN1_WF_RMAC_TOP_MISC2_DOT11VHTPROBEDELAY_MASK          0x000003FF                // DOT11VHTPROBEDELAY[9..0]
#define BN1_WF_RMAC_TOP_MISC2_DOT11VHTPROBEDELAY_SHFT          0

/* =====================================================================================

  ---MISC3 (0x820f5000 + 0x618)---

    DIS_RX_CTRL_CNT_FCS_OK[0]    - (RW) Count Control frame type into FCS OK MIB counter or not
                                     0 : If Rx a FCS OK MPDU with TYPE = Control, increment the MIB FCS OK count.
                                     1 : If Rx a FCS OK MPDU with TYPE = Control, DON'T increment the MIB FCS OK count.
    DIS_RX_MGMT_CNT_FCS_OK[1]    - (RW) Count Management frame type into FCS OK MIB counter or not
                                     0 : If Rx a FCS OK MPDU with TYPE = Management, increment the MIB FCS OK count.
                                     1 : If Rx a FCS OK MPDU with TYPE = Management, DON'T increment the MIB FCS OK count.
    DIS_RX_DATA_CNT_FCS_OK[2]    - (RW) Count Data frame type into FCS OK MIB counter or not
                                     0 : If Rx a FCS OK MPDU with TYPE = Data increment the MIB FCS OK count.
                                     1 : If Rx a FCS OK MPDU with TYPE = Data, DON'T increment the MIB FCS OK count.
    RXVEC1_SET_WIDX_EN[3]        - (RW) Rx Vector 1 Set Addr Index Control
                                     0 : Don't update the RxVector 1 Addr Index while Vector 1 Started.
                                     1 : Update the RxVector1 Addr Index while RxVector1 Started.
    RST_V1IDX_IF_NO_WAIT_RSP[4]  - (RW) Rx Vector 1 Addr Index Reset Control (Only active if RXVEC1_SET_WIDX_EN = 1)
                                     0 : Always use AGG previded Index as RxVector 1 Addr Index.
                                     1 : If TMAC is not wating for a response packet, reset the RxVector 1 Addr Index to 0xFF.
    RX_HOLD_FOR_BCN_BTIM_CHK[5]  - (RW) Hold Rx MAC-PHY ACK for Beacon/TIM Broadcast check. (Used for parsing high rate Beacon/TIM Broadcast)
                                     0 : Don't hold the rxd_ack for any Rx packets.
                                     1 : Hold the rxd_ack each PPDU to meet Beacon parser 4T timing until : 
                                       a. Rx packet is A-MPDU
                                       b. Rx packet is less than 32 byte.
                                       c. Rx packet is not My BSSID's Beacon/TIM Broadcast
    NDPA_UC_AID_MATCH_EN[6]      - (RW) Check for unicasted VHT NDPA's AID match
                                     0 : If the VHT NDPA is unicasted to me. Don't check the STA_INFO.AID and directly latch the STA_INFO.
                                     1 : If the VHT NDPA is unicasted to me. Still need to check the STA_INFO.AID.
    CTS_RESP_TXHOLDER_EN[7]      - (RW) Respond CTS when receive TXOP holder's RTS even when NAV is not zero.
                                     0 : When Rx RTS and NAV is not zero, don't respond CTS.
                                     1 : When Rx RTS and NAV is not zero, if the source is TXOP holder, respond CTS.
    VLD_DLMT_MPDULEN[14..8]      - (RW) Required MPDU Byte length for delimiter sub-field parsing. 
                                     Valid when VLD_DLMT_MPDULEN_EN = 1.
    VLD_DLMT_MPDULEN_EN[15]      - (RW) De-aggregate A-MPDU for reasonable delimiter's MPDU length.
                                     0 : Validate MPDU if the delimiter CRC is pass. Don't check the MPDU length.
                                     1 : Validate MPDU if delimiter CRC and the MPDU length sub-filed is greater than VLD_DLMT_MPDULEN. 
                                     Otherwise, treat as demiliter mismatch.
    TMR_PHY_ABORT_TOD_EN[16]     - (RW) TMR TOD calculation can be terminated by PHY tmr_abort signal.
                                     0 : PHY tmr_abort only terminate TOA calculation but won't terminate TOD calculation.
                                     1 : PHY tmr terminate TOA and TOD calculation.
    RCPI_CMP_SEL_MAX_EN[17]      - (RW) RCPI selection option for RCPI_THR_DROP filter.
                                     0 : Use RxV.RCPI ant0 for comparision.
                                     1 : Use max RCPI in the RxV for comparison
    A3_PAT_TRI_EN[18]            - (RW) DAWN Rx Addr3 comparison enable.
                                     0 : Disable 
                                     1 : Enable Rx Data frame Addr3 comparison with SCONN_DA_COMP_PAT(default compare bit[23:0]), if match and the WLAN IDX is within A3_PAT_CMP_WIDX_OFST to A3_PAT_CMP_WIDX_OFST + 15, trigger interrupt and set corresponding WLAN Index bitmap in RICMRx CR.
    A3_PAT_CMP_B47_24_EN[19]     - (RW) DAWN Rx Addr3 comparison enable. Only valid when A3_PAT_TRI_EN = 1.
                                     0 : Don't compare Addr3 [47:24]
                                     1 : Compare addr3[47:0]  with pattern {A3_COMP_PAT_b47_24, SCONN_DA_COMP_PAT}
    A3_PAT_CMP_WIDX_OFST[27..20] - (RW) The WTBL offset of continuous 16 entries to perform Trigger detection
                                     Note: valid range is from 0 to [Max number of WTBL - 16]
                                     For configuring starting WLAN index to compare Rx Addr3. Only the WLAN index which is >= A3_PAT_CMP_WIDX_OFST and <= (A3_PAT_CMP_WIDX_OFST+15) would trigger interrupt.
    RESERVED28[28]               - (RO) Reserved bits
    DIS_BTIM_TSF_SET[29]         - (RW) Disable BTIM TSF_SET pusle to LP module
                                     1'b0: TSF_SET pusle when BTIM
                                     1'b1: No TSF_SET pulse when BTIM
    BSSID_FOR_UNWANTRD[30]       - (RW) BDDIS enable for unwanted packet
    PPDU_QOSD_ACTRL_EN[31]       - (RW) RMAC Latch ACTRL field with FIRST valid FCS MPDU, thie control bit force RMAC latch ACTRL field with QOSD frame. 
                                     1'b1 : enable 
                                     1'b0: diable

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MISC3_PPDU_QOSD_ACTRL_EN_ADDR          BN1_WF_RMAC_TOP_MISC3_ADDR
#define BN1_WF_RMAC_TOP_MISC3_PPDU_QOSD_ACTRL_EN_MASK          0x80000000                // PPDU_QOSD_ACTRL_EN[31]
#define BN1_WF_RMAC_TOP_MISC3_PPDU_QOSD_ACTRL_EN_SHFT          31
#define BN1_WF_RMAC_TOP_MISC3_BSSID_FOR_UNWANTRD_ADDR          BN1_WF_RMAC_TOP_MISC3_ADDR
#define BN1_WF_RMAC_TOP_MISC3_BSSID_FOR_UNWANTRD_MASK          0x40000000                // BSSID_FOR_UNWANTRD[30]
#define BN1_WF_RMAC_TOP_MISC3_BSSID_FOR_UNWANTRD_SHFT          30
#define BN1_WF_RMAC_TOP_MISC3_DIS_BTIM_TSF_SET_ADDR            BN1_WF_RMAC_TOP_MISC3_ADDR
#define BN1_WF_RMAC_TOP_MISC3_DIS_BTIM_TSF_SET_MASK            0x20000000                // DIS_BTIM_TSF_SET[29]
#define BN1_WF_RMAC_TOP_MISC3_DIS_BTIM_TSF_SET_SHFT            29
#define BN1_WF_RMAC_TOP_MISC3_A3_PAT_CMP_WIDX_OFST_ADDR        BN1_WF_RMAC_TOP_MISC3_ADDR
#define BN1_WF_RMAC_TOP_MISC3_A3_PAT_CMP_WIDX_OFST_MASK        0x0FF00000                // A3_PAT_CMP_WIDX_OFST[27..20]
#define BN1_WF_RMAC_TOP_MISC3_A3_PAT_CMP_WIDX_OFST_SHFT        20
#define BN1_WF_RMAC_TOP_MISC3_A3_PAT_CMP_B47_24_EN_ADDR        BN1_WF_RMAC_TOP_MISC3_ADDR
#define BN1_WF_RMAC_TOP_MISC3_A3_PAT_CMP_B47_24_EN_MASK        0x00080000                // A3_PAT_CMP_B47_24_EN[19]
#define BN1_WF_RMAC_TOP_MISC3_A3_PAT_CMP_B47_24_EN_SHFT        19
#define BN1_WF_RMAC_TOP_MISC3_A3_PAT_TRI_EN_ADDR               BN1_WF_RMAC_TOP_MISC3_ADDR
#define BN1_WF_RMAC_TOP_MISC3_A3_PAT_TRI_EN_MASK               0x00040000                // A3_PAT_TRI_EN[18]
#define BN1_WF_RMAC_TOP_MISC3_A3_PAT_TRI_EN_SHFT               18
#define BN1_WF_RMAC_TOP_MISC3_RCPI_CMP_SEL_MAX_EN_ADDR         BN1_WF_RMAC_TOP_MISC3_ADDR
#define BN1_WF_RMAC_TOP_MISC3_RCPI_CMP_SEL_MAX_EN_MASK         0x00020000                // RCPI_CMP_SEL_MAX_EN[17]
#define BN1_WF_RMAC_TOP_MISC3_RCPI_CMP_SEL_MAX_EN_SHFT         17
#define BN1_WF_RMAC_TOP_MISC3_TMR_PHY_ABORT_TOD_EN_ADDR        BN1_WF_RMAC_TOP_MISC3_ADDR
#define BN1_WF_RMAC_TOP_MISC3_TMR_PHY_ABORT_TOD_EN_MASK        0x00010000                // TMR_PHY_ABORT_TOD_EN[16]
#define BN1_WF_RMAC_TOP_MISC3_TMR_PHY_ABORT_TOD_EN_SHFT        16
#define BN1_WF_RMAC_TOP_MISC3_VLD_DLMT_MPDULEN_EN_ADDR         BN1_WF_RMAC_TOP_MISC3_ADDR
#define BN1_WF_RMAC_TOP_MISC3_VLD_DLMT_MPDULEN_EN_MASK         0x00008000                // VLD_DLMT_MPDULEN_EN[15]
#define BN1_WF_RMAC_TOP_MISC3_VLD_DLMT_MPDULEN_EN_SHFT         15
#define BN1_WF_RMAC_TOP_MISC3_VLD_DLMT_MPDULEN_ADDR            BN1_WF_RMAC_TOP_MISC3_ADDR
#define BN1_WF_RMAC_TOP_MISC3_VLD_DLMT_MPDULEN_MASK            0x00007F00                // VLD_DLMT_MPDULEN[14..8]
#define BN1_WF_RMAC_TOP_MISC3_VLD_DLMT_MPDULEN_SHFT            8
#define BN1_WF_RMAC_TOP_MISC3_CTS_RESP_TXHOLDER_EN_ADDR        BN1_WF_RMAC_TOP_MISC3_ADDR
#define BN1_WF_RMAC_TOP_MISC3_CTS_RESP_TXHOLDER_EN_MASK        0x00000080                // CTS_RESP_TXHOLDER_EN[7]
#define BN1_WF_RMAC_TOP_MISC3_CTS_RESP_TXHOLDER_EN_SHFT        7
#define BN1_WF_RMAC_TOP_MISC3_NDPA_UC_AID_MATCH_EN_ADDR        BN1_WF_RMAC_TOP_MISC3_ADDR
#define BN1_WF_RMAC_TOP_MISC3_NDPA_UC_AID_MATCH_EN_MASK        0x00000040                // NDPA_UC_AID_MATCH_EN[6]
#define BN1_WF_RMAC_TOP_MISC3_NDPA_UC_AID_MATCH_EN_SHFT        6
#define BN1_WF_RMAC_TOP_MISC3_RX_HOLD_FOR_BCN_BTIM_CHK_ADDR    BN1_WF_RMAC_TOP_MISC3_ADDR
#define BN1_WF_RMAC_TOP_MISC3_RX_HOLD_FOR_BCN_BTIM_CHK_MASK    0x00000020                // RX_HOLD_FOR_BCN_BTIM_CHK[5]
#define BN1_WF_RMAC_TOP_MISC3_RX_HOLD_FOR_BCN_BTIM_CHK_SHFT    5
#define BN1_WF_RMAC_TOP_MISC3_RST_V1IDX_IF_NO_WAIT_RSP_ADDR    BN1_WF_RMAC_TOP_MISC3_ADDR
#define BN1_WF_RMAC_TOP_MISC3_RST_V1IDX_IF_NO_WAIT_RSP_MASK    0x00000010                // RST_V1IDX_IF_NO_WAIT_RSP[4]
#define BN1_WF_RMAC_TOP_MISC3_RST_V1IDX_IF_NO_WAIT_RSP_SHFT    4
#define BN1_WF_RMAC_TOP_MISC3_RXVEC1_SET_WIDX_EN_ADDR          BN1_WF_RMAC_TOP_MISC3_ADDR
#define BN1_WF_RMAC_TOP_MISC3_RXVEC1_SET_WIDX_EN_MASK          0x00000008                // RXVEC1_SET_WIDX_EN[3]
#define BN1_WF_RMAC_TOP_MISC3_RXVEC1_SET_WIDX_EN_SHFT          3
#define BN1_WF_RMAC_TOP_MISC3_DIS_RX_DATA_CNT_FCS_OK_ADDR      BN1_WF_RMAC_TOP_MISC3_ADDR
#define BN1_WF_RMAC_TOP_MISC3_DIS_RX_DATA_CNT_FCS_OK_MASK      0x00000004                // DIS_RX_DATA_CNT_FCS_OK[2]
#define BN1_WF_RMAC_TOP_MISC3_DIS_RX_DATA_CNT_FCS_OK_SHFT      2
#define BN1_WF_RMAC_TOP_MISC3_DIS_RX_MGMT_CNT_FCS_OK_ADDR      BN1_WF_RMAC_TOP_MISC3_ADDR
#define BN1_WF_RMAC_TOP_MISC3_DIS_RX_MGMT_CNT_FCS_OK_MASK      0x00000002                // DIS_RX_MGMT_CNT_FCS_OK[1]
#define BN1_WF_RMAC_TOP_MISC3_DIS_RX_MGMT_CNT_FCS_OK_SHFT      1
#define BN1_WF_RMAC_TOP_MISC3_DIS_RX_CTRL_CNT_FCS_OK_ADDR      BN1_WF_RMAC_TOP_MISC3_ADDR
#define BN1_WF_RMAC_TOP_MISC3_DIS_RX_CTRL_CNT_FCS_OK_MASK      0x00000001                // DIS_RX_CTRL_CNT_FCS_OK[0]
#define BN1_WF_RMAC_TOP_MISC3_DIS_RX_CTRL_CNT_FCS_OK_SHFT      0

/* =====================================================================================

  ---MISC4 (0x820f5000 + 0x61C)---

    MDP_MYADDR_SRCH_DLY[3..0]    - (RW) RX MDP MY address search delay
    RXB_ALLOC_USR_CHK_DIS[4]     - (RW) Bypass RX allocate buffer total  user check disable
                                     1'b0: check  
                                     1'b1: disable check
    RESERVED5[5]                 - (RO) Reserved bits
    TRB_FULL_WLEVEL[7..6]        - (RW) TRB FIFO mode
                                     2'b00: TRB FULL, Drop MPDU
                                     2'b01: Half PHYRXSRAM Drop MPDU
                                     2'b10: PHYRXSRAM Full Drop MPDU
                                     2'b11: TRB FULL, Not Drop MPDU
    RXV_NDP_IND_EN[8]            - (RW) RX NDP check RXV NDP_IND flag
                                     1'b0: Disable
                                     1'b1: Enable
    SR_RST_MAC2PHY_RX[9]         - (RW) Spitail Reuse reset PHY by diable mac2phy_rx
    FORCE_RXV_VLD[10]            - (RW) Force Pre-USER RXV_VLD valiad
                                     1'b0: Check RXV_VLD bit
                                     1'b1: Disable check RXV_VLD bit
    DIS_MEM_WEP[11]              - (RW) Disable Mamagement packet security payload skip
    TRBW_FIFO_WLEVEL[14..12]     - (RW) RX TRBW_FIFO water level, if FIFO FULL will stop PHY2MAC SRAM access
    TRBW_FIFO_CLR_RB[15]         - (RW) TRBW FIFO clear pre PPDU rollback
    RXD_MDRDY_FALL_TO[20..16]    - (RW) RX PHY2MAC_MDRDY falling timeout, it will reset PHY2MAC SRAM to stop RX.
                                     Default 10usec.
    MIB_UC2ME_DATA_NSS[23..21]   - (RW) RX UC2ME data NSS count by BSSIDx for MIB counter
                                     3'd0: Nss1
                                     3'd1: Nss2
                                     etc.
                                     3'd7: Nss8
    UL_MU_RXB_ALLC_AVG[24]       - (RW) HETB UL MU TRB RXB buffer allocation average allocate enable
    BA_DIS_SMPDU[25]             - (RW) Disable SMDPU and RESP_ACK when RESP_BA detect
    RXD_ACK_WAIT_EN[26]          - (RW) RXD ACK wait TRB buffer allocation done
                                     1'b1: enable
                                     1'b0: Disable
    PPDU_RECOV_RESP_DIS[27]      - (RW) When PPDU recovery, MAC not response ACK/BA, and control by overflow
                                     1'b0: disable
                                     1'b1: enable
    MIB_UC2ME_DATA_STBC[28]      - (RW) RX UC2ME data STBC enable and NSS count by BSSIDx for MIB counter
    TRBW_FIFO_RST[29]            - (RW) Reset TRBW FIFO
    MDRDY_RXDIS_EN[30]           - (RW) RX_DIS reset MDRDY enable control
    PHY2MAC_RESET[31]            - (WC) Reset PHY2MAC RXD interface

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MISC4_PHY2MAC_RESET_ADDR               BN1_WF_RMAC_TOP_MISC4_ADDR
#define BN1_WF_RMAC_TOP_MISC4_PHY2MAC_RESET_MASK               0x80000000                // PHY2MAC_RESET[31]
#define BN1_WF_RMAC_TOP_MISC4_PHY2MAC_RESET_SHFT               31
#define BN1_WF_RMAC_TOP_MISC4_MDRDY_RXDIS_EN_ADDR              BN1_WF_RMAC_TOP_MISC4_ADDR
#define BN1_WF_RMAC_TOP_MISC4_MDRDY_RXDIS_EN_MASK              0x40000000                // MDRDY_RXDIS_EN[30]
#define BN1_WF_RMAC_TOP_MISC4_MDRDY_RXDIS_EN_SHFT              30
#define BN1_WF_RMAC_TOP_MISC4_TRBW_FIFO_RST_ADDR               BN1_WF_RMAC_TOP_MISC4_ADDR
#define BN1_WF_RMAC_TOP_MISC4_TRBW_FIFO_RST_MASK               0x20000000                // TRBW_FIFO_RST[29]
#define BN1_WF_RMAC_TOP_MISC4_TRBW_FIFO_RST_SHFT               29
#define BN1_WF_RMAC_TOP_MISC4_MIB_UC2ME_DATA_STBC_ADDR         BN1_WF_RMAC_TOP_MISC4_ADDR
#define BN1_WF_RMAC_TOP_MISC4_MIB_UC2ME_DATA_STBC_MASK         0x10000000                // MIB_UC2ME_DATA_STBC[28]
#define BN1_WF_RMAC_TOP_MISC4_MIB_UC2ME_DATA_STBC_SHFT         28
#define BN1_WF_RMAC_TOP_MISC4_PPDU_RECOV_RESP_DIS_ADDR         BN1_WF_RMAC_TOP_MISC4_ADDR
#define BN1_WF_RMAC_TOP_MISC4_PPDU_RECOV_RESP_DIS_MASK         0x08000000                // PPDU_RECOV_RESP_DIS[27]
#define BN1_WF_RMAC_TOP_MISC4_PPDU_RECOV_RESP_DIS_SHFT         27
#define BN1_WF_RMAC_TOP_MISC4_RXD_ACK_WAIT_EN_ADDR             BN1_WF_RMAC_TOP_MISC4_ADDR
#define BN1_WF_RMAC_TOP_MISC4_RXD_ACK_WAIT_EN_MASK             0x04000000                // RXD_ACK_WAIT_EN[26]
#define BN1_WF_RMAC_TOP_MISC4_RXD_ACK_WAIT_EN_SHFT             26
#define BN1_WF_RMAC_TOP_MISC4_BA_DIS_SMPDU_ADDR                BN1_WF_RMAC_TOP_MISC4_ADDR
#define BN1_WF_RMAC_TOP_MISC4_BA_DIS_SMPDU_MASK                0x02000000                // BA_DIS_SMPDU[25]
#define BN1_WF_RMAC_TOP_MISC4_BA_DIS_SMPDU_SHFT                25
#define BN1_WF_RMAC_TOP_MISC4_UL_MU_RXB_ALLC_AVG_ADDR          BN1_WF_RMAC_TOP_MISC4_ADDR
#define BN1_WF_RMAC_TOP_MISC4_UL_MU_RXB_ALLC_AVG_MASK          0x01000000                // UL_MU_RXB_ALLC_AVG[24]
#define BN1_WF_RMAC_TOP_MISC4_UL_MU_RXB_ALLC_AVG_SHFT          24
#define BN1_WF_RMAC_TOP_MISC4_MIB_UC2ME_DATA_NSS_ADDR          BN1_WF_RMAC_TOP_MISC4_ADDR
#define BN1_WF_RMAC_TOP_MISC4_MIB_UC2ME_DATA_NSS_MASK          0x00E00000                // MIB_UC2ME_DATA_NSS[23..21]
#define BN1_WF_RMAC_TOP_MISC4_MIB_UC2ME_DATA_NSS_SHFT          21
#define BN1_WF_RMAC_TOP_MISC4_RXD_MDRDY_FALL_TO_ADDR           BN1_WF_RMAC_TOP_MISC4_ADDR
#define BN1_WF_RMAC_TOP_MISC4_RXD_MDRDY_FALL_TO_MASK           0x001F0000                // RXD_MDRDY_FALL_TO[20..16]
#define BN1_WF_RMAC_TOP_MISC4_RXD_MDRDY_FALL_TO_SHFT           16
#define BN1_WF_RMAC_TOP_MISC4_TRBW_FIFO_CLR_RB_ADDR            BN1_WF_RMAC_TOP_MISC4_ADDR
#define BN1_WF_RMAC_TOP_MISC4_TRBW_FIFO_CLR_RB_MASK            0x00008000                // TRBW_FIFO_CLR_RB[15]
#define BN1_WF_RMAC_TOP_MISC4_TRBW_FIFO_CLR_RB_SHFT            15
#define BN1_WF_RMAC_TOP_MISC4_TRBW_FIFO_WLEVEL_ADDR            BN1_WF_RMAC_TOP_MISC4_ADDR
#define BN1_WF_RMAC_TOP_MISC4_TRBW_FIFO_WLEVEL_MASK            0x00007000                // TRBW_FIFO_WLEVEL[14..12]
#define BN1_WF_RMAC_TOP_MISC4_TRBW_FIFO_WLEVEL_SHFT            12
#define BN1_WF_RMAC_TOP_MISC4_DIS_MEM_WEP_ADDR                 BN1_WF_RMAC_TOP_MISC4_ADDR
#define BN1_WF_RMAC_TOP_MISC4_DIS_MEM_WEP_MASK                 0x00000800                // DIS_MEM_WEP[11]
#define BN1_WF_RMAC_TOP_MISC4_DIS_MEM_WEP_SHFT                 11
#define BN1_WF_RMAC_TOP_MISC4_FORCE_RXV_VLD_ADDR               BN1_WF_RMAC_TOP_MISC4_ADDR
#define BN1_WF_RMAC_TOP_MISC4_FORCE_RXV_VLD_MASK               0x00000400                // FORCE_RXV_VLD[10]
#define BN1_WF_RMAC_TOP_MISC4_FORCE_RXV_VLD_SHFT               10
#define BN1_WF_RMAC_TOP_MISC4_SR_RST_MAC2PHY_RX_ADDR           BN1_WF_RMAC_TOP_MISC4_ADDR
#define BN1_WF_RMAC_TOP_MISC4_SR_RST_MAC2PHY_RX_MASK           0x00000200                // SR_RST_MAC2PHY_RX[9]
#define BN1_WF_RMAC_TOP_MISC4_SR_RST_MAC2PHY_RX_SHFT           9
#define BN1_WF_RMAC_TOP_MISC4_RXV_NDP_IND_EN_ADDR              BN1_WF_RMAC_TOP_MISC4_ADDR
#define BN1_WF_RMAC_TOP_MISC4_RXV_NDP_IND_EN_MASK              0x00000100                // RXV_NDP_IND_EN[8]
#define BN1_WF_RMAC_TOP_MISC4_RXV_NDP_IND_EN_SHFT              8
#define BN1_WF_RMAC_TOP_MISC4_TRB_FULL_WLEVEL_ADDR             BN1_WF_RMAC_TOP_MISC4_ADDR
#define BN1_WF_RMAC_TOP_MISC4_TRB_FULL_WLEVEL_MASK             0x000000C0                // TRB_FULL_WLEVEL[7..6]
#define BN1_WF_RMAC_TOP_MISC4_TRB_FULL_WLEVEL_SHFT             6
#define BN1_WF_RMAC_TOP_MISC4_RXB_ALLOC_USR_CHK_DIS_ADDR       BN1_WF_RMAC_TOP_MISC4_ADDR
#define BN1_WF_RMAC_TOP_MISC4_RXB_ALLOC_USR_CHK_DIS_MASK       0x00000010                // RXB_ALLOC_USR_CHK_DIS[4]
#define BN1_WF_RMAC_TOP_MISC4_RXB_ALLOC_USR_CHK_DIS_SHFT       4
#define BN1_WF_RMAC_TOP_MISC4_MDP_MYADDR_SRCH_DLY_ADDR         BN1_WF_RMAC_TOP_MISC4_ADDR
#define BN1_WF_RMAC_TOP_MISC4_MDP_MYADDR_SRCH_DLY_MASK         0x0000000F                // MDP_MYADDR_SRCH_DLY[3..0]
#define BN1_WF_RMAC_TOP_MISC4_MDP_MYADDR_SRCH_DLY_SHFT         0

/* =====================================================================================

  ---MISC5 (0x820f5000 + 0x620)---

    PPDU_ADDR_SRCH_EN[0]         - (RW) PPDU address search reduce 
                                     1'b0: disable
                                     1'b1: enable
    RX_HOLD_BCNBTIM_FORCE_EN[1]  - (RW) RX Hold force bypass BCN/BTIM
                                     1'b0: disable
                                     1'b1: enable
    TRBW_SKIP_USR_STS_EN[2]      - (RW) TRBW FIFO Skip TRB user buffer status, TRB need set early full for this
                                     1'b0: disable
                                     1'b1: enable
    RECOVERY_PPDU_BLK_TRB_EN[3]  - (RW) When PPDU recovery event, block TRB write
                                     1'b0: disable
                                     1'b1: enable
    BBP_PPDU_UC2ME[4]            - (RW) mac2phy_rx_ppdu_tome UC to ME condition check
                                     1'b0: disable
                                     1'b1: enable
    BBP_PPDU_BCMC[5]             - (RW) mac2phy_rx_ppdu_tome BCMC condition check
                                     1'b0: disable
                                     1'b1: enable
    TRBW_SKIP_COM_STS_EN[6]      - (RW) TRBW FIFO Skip TRB COMMON buffer status, TRB need set early full for this
                                     1'b0: disable
                                     1'b1: enable
    RX_EXTD_RESP_START[7]        - (RW) when mac2phy_rx_extd valid, to TMAC response start change to airend 
                                     1'b0: mdrdy falling
                                     1'b1: To Airend condition
    RXV1_ERR_CHK_EN[11..8]       - (RW) RXV1 Error check condition enable 
                                     bit0: EXV type error or CRXV1 UID error
                                     bit1: User number =0
                                     bit2: PRXV1 UID over range
                                     bit3: No valid PRXV1
    RX_PPDU_TOME_CHK_EN[15..12]  - (RW) For mac2phy_rx_extd rx_ppdu_tome condtion enable
                                     bit0: check UC to me  BSSID match or not
                                     bit1: Enable UC to me condition
                                     bit2: check BCMC BSSID match or not
                                     bit3: Enable BCMC condition
    BBP_PPDU_BSSID_SEL[21..16]   - (RW) mac2phy_rx_ppdu_tome BSSID match select
                                     bit5: for disable bypass BSSID match
                                     bit4-0 for BSSID 0x0~0x1f
    RESERVED22[23..22]           - (RO) Reserved bits
    BIPN_CHK_BSSID_EN[27..24]    - (RW) BIPN per BSSID enable bit
                                     bit0: BSSID0
                                     bit1: BSSID1
                                     bit2: BSSID2
                                     bit3: BSSID3
    RX_MBSS_CTRL_MSBA[28]        - (RW) Enable RX MBSS CTRL MSBA frame
                                     1'b0: disable
                                     1'b1: enable
    RX_MBSS_CTRL_NDPA[29]        - (RW) Enable RX MBSS CTRL NDPA frame
                                     1'b0: disable
                                     1'b1: enable
    RX_MBSS_CTRL_TF[30]          - (RW) Enable RX MBSS CTRL TF frame
                                     1'b0: disable
                                     1'b1: enable
    RX_MBSS_CTRL[31]             - (RW) Enable RX MBSS ALL CTRL frame
                                     1'b0: disable
                                     1'b1: enable

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MISC5_RX_MBSS_CTRL_ADDR                BN1_WF_RMAC_TOP_MISC5_ADDR
#define BN1_WF_RMAC_TOP_MISC5_RX_MBSS_CTRL_MASK                0x80000000                // RX_MBSS_CTRL[31]
#define BN1_WF_RMAC_TOP_MISC5_RX_MBSS_CTRL_SHFT                31
#define BN1_WF_RMAC_TOP_MISC5_RX_MBSS_CTRL_TF_ADDR             BN1_WF_RMAC_TOP_MISC5_ADDR
#define BN1_WF_RMAC_TOP_MISC5_RX_MBSS_CTRL_TF_MASK             0x40000000                // RX_MBSS_CTRL_TF[30]
#define BN1_WF_RMAC_TOP_MISC5_RX_MBSS_CTRL_TF_SHFT             30
#define BN1_WF_RMAC_TOP_MISC5_RX_MBSS_CTRL_NDPA_ADDR           BN1_WF_RMAC_TOP_MISC5_ADDR
#define BN1_WF_RMAC_TOP_MISC5_RX_MBSS_CTRL_NDPA_MASK           0x20000000                // RX_MBSS_CTRL_NDPA[29]
#define BN1_WF_RMAC_TOP_MISC5_RX_MBSS_CTRL_NDPA_SHFT           29
#define BN1_WF_RMAC_TOP_MISC5_RX_MBSS_CTRL_MSBA_ADDR           BN1_WF_RMAC_TOP_MISC5_ADDR
#define BN1_WF_RMAC_TOP_MISC5_RX_MBSS_CTRL_MSBA_MASK           0x10000000                // RX_MBSS_CTRL_MSBA[28]
#define BN1_WF_RMAC_TOP_MISC5_RX_MBSS_CTRL_MSBA_SHFT           28
#define BN1_WF_RMAC_TOP_MISC5_BIPN_CHK_BSSID_EN_ADDR           BN1_WF_RMAC_TOP_MISC5_ADDR
#define BN1_WF_RMAC_TOP_MISC5_BIPN_CHK_BSSID_EN_MASK           0x0F000000                // BIPN_CHK_BSSID_EN[27..24]
#define BN1_WF_RMAC_TOP_MISC5_BIPN_CHK_BSSID_EN_SHFT           24
#define BN1_WF_RMAC_TOP_MISC5_BBP_PPDU_BSSID_SEL_ADDR          BN1_WF_RMAC_TOP_MISC5_ADDR
#define BN1_WF_RMAC_TOP_MISC5_BBP_PPDU_BSSID_SEL_MASK          0x003F0000                // BBP_PPDU_BSSID_SEL[21..16]
#define BN1_WF_RMAC_TOP_MISC5_BBP_PPDU_BSSID_SEL_SHFT          16
#define BN1_WF_RMAC_TOP_MISC5_RX_PPDU_TOME_CHK_EN_ADDR         BN1_WF_RMAC_TOP_MISC5_ADDR
#define BN1_WF_RMAC_TOP_MISC5_RX_PPDU_TOME_CHK_EN_MASK         0x0000F000                // RX_PPDU_TOME_CHK_EN[15..12]
#define BN1_WF_RMAC_TOP_MISC5_RX_PPDU_TOME_CHK_EN_SHFT         12
#define BN1_WF_RMAC_TOP_MISC5_RXV1_ERR_CHK_EN_ADDR             BN1_WF_RMAC_TOP_MISC5_ADDR
#define BN1_WF_RMAC_TOP_MISC5_RXV1_ERR_CHK_EN_MASK             0x00000F00                // RXV1_ERR_CHK_EN[11..8]
#define BN1_WF_RMAC_TOP_MISC5_RXV1_ERR_CHK_EN_SHFT             8
#define BN1_WF_RMAC_TOP_MISC5_RX_EXTD_RESP_START_ADDR          BN1_WF_RMAC_TOP_MISC5_ADDR
#define BN1_WF_RMAC_TOP_MISC5_RX_EXTD_RESP_START_MASK          0x00000080                // RX_EXTD_RESP_START[7]
#define BN1_WF_RMAC_TOP_MISC5_RX_EXTD_RESP_START_SHFT          7
#define BN1_WF_RMAC_TOP_MISC5_TRBW_SKIP_COM_STS_EN_ADDR        BN1_WF_RMAC_TOP_MISC5_ADDR
#define BN1_WF_RMAC_TOP_MISC5_TRBW_SKIP_COM_STS_EN_MASK        0x00000040                // TRBW_SKIP_COM_STS_EN[6]
#define BN1_WF_RMAC_TOP_MISC5_TRBW_SKIP_COM_STS_EN_SHFT        6
#define BN1_WF_RMAC_TOP_MISC5_BBP_PPDU_BCMC_ADDR               BN1_WF_RMAC_TOP_MISC5_ADDR
#define BN1_WF_RMAC_TOP_MISC5_BBP_PPDU_BCMC_MASK               0x00000020                // BBP_PPDU_BCMC[5]
#define BN1_WF_RMAC_TOP_MISC5_BBP_PPDU_BCMC_SHFT               5
#define BN1_WF_RMAC_TOP_MISC5_BBP_PPDU_UC2ME_ADDR              BN1_WF_RMAC_TOP_MISC5_ADDR
#define BN1_WF_RMAC_TOP_MISC5_BBP_PPDU_UC2ME_MASK              0x00000010                // BBP_PPDU_UC2ME[4]
#define BN1_WF_RMAC_TOP_MISC5_BBP_PPDU_UC2ME_SHFT              4
#define BN1_WF_RMAC_TOP_MISC5_RECOVERY_PPDU_BLK_TRB_EN_ADDR    BN1_WF_RMAC_TOP_MISC5_ADDR
#define BN1_WF_RMAC_TOP_MISC5_RECOVERY_PPDU_BLK_TRB_EN_MASK    0x00000008                // RECOVERY_PPDU_BLK_TRB_EN[3]
#define BN1_WF_RMAC_TOP_MISC5_RECOVERY_PPDU_BLK_TRB_EN_SHFT    3
#define BN1_WF_RMAC_TOP_MISC5_TRBW_SKIP_USR_STS_EN_ADDR        BN1_WF_RMAC_TOP_MISC5_ADDR
#define BN1_WF_RMAC_TOP_MISC5_TRBW_SKIP_USR_STS_EN_MASK        0x00000004                // TRBW_SKIP_USR_STS_EN[2]
#define BN1_WF_RMAC_TOP_MISC5_TRBW_SKIP_USR_STS_EN_SHFT        2
#define BN1_WF_RMAC_TOP_MISC5_RX_HOLD_BCNBTIM_FORCE_EN_ADDR    BN1_WF_RMAC_TOP_MISC5_ADDR
#define BN1_WF_RMAC_TOP_MISC5_RX_HOLD_BCNBTIM_FORCE_EN_MASK    0x00000002                // RX_HOLD_BCNBTIM_FORCE_EN[1]
#define BN1_WF_RMAC_TOP_MISC5_RX_HOLD_BCNBTIM_FORCE_EN_SHFT    1
#define BN1_WF_RMAC_TOP_MISC5_PPDU_ADDR_SRCH_EN_ADDR           BN1_WF_RMAC_TOP_MISC5_ADDR
#define BN1_WF_RMAC_TOP_MISC5_PPDU_ADDR_SRCH_EN_MASK           0x00000001                // PPDU_ADDR_SRCH_EN[0]
#define BN1_WF_RMAC_TOP_MISC5_PPDU_ADDR_SRCH_EN_SHFT           0

/* =====================================================================================

  ---PCIL1SS (0x820f5000 + 0x62c)---

    NAV_CNTDOWN_TH[11..0]        - (RW) RX NAV count down less than thredhold for PCI L1 SS control
    RESERVED12[13..12]           - (RO) Reserved bits
    INTRA_NAV_CNTDOWN_EN[14]     - (RW) Intra NAV count down enable for PCI L1 SS control
    INTER_NAV_CNTDOWN_EN[15]     - (RW) Inter NAV count down enable for PCI L1 SS control
    TOME_PPDULEN_TH[27..16]      - (RW) To me by PASS RX filter and PPDU length bigger than thredhold check (Unit: 128 byte)
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_PCIL1SS_TOME_PPDULEN_TH_ADDR           BN1_WF_RMAC_TOP_PCIL1SS_ADDR
#define BN1_WF_RMAC_TOP_PCIL1SS_TOME_PPDULEN_TH_MASK           0x0FFF0000                // TOME_PPDULEN_TH[27..16]
#define BN1_WF_RMAC_TOP_PCIL1SS_TOME_PPDULEN_TH_SHFT           16
#define BN1_WF_RMAC_TOP_PCIL1SS_INTER_NAV_CNTDOWN_EN_ADDR      BN1_WF_RMAC_TOP_PCIL1SS_ADDR
#define BN1_WF_RMAC_TOP_PCIL1SS_INTER_NAV_CNTDOWN_EN_MASK      0x00008000                // INTER_NAV_CNTDOWN_EN[15]
#define BN1_WF_RMAC_TOP_PCIL1SS_INTER_NAV_CNTDOWN_EN_SHFT      15
#define BN1_WF_RMAC_TOP_PCIL1SS_INTRA_NAV_CNTDOWN_EN_ADDR      BN1_WF_RMAC_TOP_PCIL1SS_ADDR
#define BN1_WF_RMAC_TOP_PCIL1SS_INTRA_NAV_CNTDOWN_EN_MASK      0x00004000                // INTRA_NAV_CNTDOWN_EN[14]
#define BN1_WF_RMAC_TOP_PCIL1SS_INTRA_NAV_CNTDOWN_EN_SHFT      14
#define BN1_WF_RMAC_TOP_PCIL1SS_NAV_CNTDOWN_TH_ADDR            BN1_WF_RMAC_TOP_PCIL1SS_ADDR
#define BN1_WF_RMAC_TOP_PCIL1SS_NAV_CNTDOWN_TH_MASK            0x00000FFF                // NAV_CNTDOWN_TH[11..0]
#define BN1_WF_RMAC_TOP_PCIL1SS_NAV_CNTDOWN_TH_SHFT            0

/* =====================================================================================

  ---RXCOEX (0x820f5000 + 0x630)---

    RX_DOZE_THR[7..0]            - (RW) RX decode and doze RCPI thr value
    RESERVED8[11..8]             - (RO) Reserved bits
    RX_DOZE_RCPI_SEL[13..12]     - (RW) RX decode and doze RCPI source select
    RX_DOZE_RCPI_CHK[14]         - (RW) RX doze RCPI check enable
    RESERVED15[15]               - (RO) Reserved bits
    RX_DECODE_MASK_EN[16]        - (RW) wf2bt_rx_decode signal mask enable
                                     0 : Don't mask the wf2bt_rx_decode signal and the signal will assert at WIFI Rx detection and de-assert when Rx is not my packet.
                                     1 : Mask the wf2bt_rx_decode signal , the signal will always = 0.
    RX_DECODE_DEASRT_AT_A1[17]   - (RW) wf2bt_rx_decode signal behavior option for Rx PPDU
                                     0 : The wf2bt_rx_decode won't early de-assert until MPDU FCS check done
                                     1 : The wf2bt_rx_decode can early deassert when RMAC parsing Addr1 done and the A1 is neither BCMC nor unicasted to ownmac.
    RX_DECODE_CHK_BMC[18]        - (RW) RX decode deasert check BMC packet
    RX_DECODE_CHK_OBSS[19]       - (RW) RX decode deasert check HE OBSS match
    RX_DECODE_CHK_RXVALID[20]    - (RW) RX decode deasert check Pre-User RXV valid
    RX_DECODE_CHK_INTRAPS[21]    - (RW) RX decode deasert check Intra PPDU PowerSaving
    RESERVED22[27..22]           - (RO) Reserved bits
    RX_EX_TIME_VLD_SEL[28]       - (RW) RX Execute valid time select.
                                     1'b0: From CRXV1 RX finish
                                     1'b1: From RX_DECODE falling
    RX_COEX_STATE_VLD_SEL[29]    - (RW) RX Coex state valid trigger souce selec
                                     1'b0: MAC header end
                                     1'b1: MAC FCS check
    RESERVED30[31..30]           - (RO) Reserved bits

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RXCOEX_RX_COEX_STATE_VLD_SEL_ADDR      BN1_WF_RMAC_TOP_RXCOEX_ADDR
#define BN1_WF_RMAC_TOP_RXCOEX_RX_COEX_STATE_VLD_SEL_MASK      0x20000000                // RX_COEX_STATE_VLD_SEL[29]
#define BN1_WF_RMAC_TOP_RXCOEX_RX_COEX_STATE_VLD_SEL_SHFT      29
#define BN1_WF_RMAC_TOP_RXCOEX_RX_EX_TIME_VLD_SEL_ADDR         BN1_WF_RMAC_TOP_RXCOEX_ADDR
#define BN1_WF_RMAC_TOP_RXCOEX_RX_EX_TIME_VLD_SEL_MASK         0x10000000                // RX_EX_TIME_VLD_SEL[28]
#define BN1_WF_RMAC_TOP_RXCOEX_RX_EX_TIME_VLD_SEL_SHFT         28
#define BN1_WF_RMAC_TOP_RXCOEX_RX_DECODE_CHK_INTRAPS_ADDR      BN1_WF_RMAC_TOP_RXCOEX_ADDR
#define BN1_WF_RMAC_TOP_RXCOEX_RX_DECODE_CHK_INTRAPS_MASK      0x00200000                // RX_DECODE_CHK_INTRAPS[21]
#define BN1_WF_RMAC_TOP_RXCOEX_RX_DECODE_CHK_INTRAPS_SHFT      21
#define BN1_WF_RMAC_TOP_RXCOEX_RX_DECODE_CHK_RXVALID_ADDR      BN1_WF_RMAC_TOP_RXCOEX_ADDR
#define BN1_WF_RMAC_TOP_RXCOEX_RX_DECODE_CHK_RXVALID_MASK      0x00100000                // RX_DECODE_CHK_RXVALID[20]
#define BN1_WF_RMAC_TOP_RXCOEX_RX_DECODE_CHK_RXVALID_SHFT      20
#define BN1_WF_RMAC_TOP_RXCOEX_RX_DECODE_CHK_OBSS_ADDR         BN1_WF_RMAC_TOP_RXCOEX_ADDR
#define BN1_WF_RMAC_TOP_RXCOEX_RX_DECODE_CHK_OBSS_MASK         0x00080000                // RX_DECODE_CHK_OBSS[19]
#define BN1_WF_RMAC_TOP_RXCOEX_RX_DECODE_CHK_OBSS_SHFT         19
#define BN1_WF_RMAC_TOP_RXCOEX_RX_DECODE_CHK_BMC_ADDR          BN1_WF_RMAC_TOP_RXCOEX_ADDR
#define BN1_WF_RMAC_TOP_RXCOEX_RX_DECODE_CHK_BMC_MASK          0x00040000                // RX_DECODE_CHK_BMC[18]
#define BN1_WF_RMAC_TOP_RXCOEX_RX_DECODE_CHK_BMC_SHFT          18
#define BN1_WF_RMAC_TOP_RXCOEX_RX_DECODE_DEASRT_AT_A1_ADDR     BN1_WF_RMAC_TOP_RXCOEX_ADDR
#define BN1_WF_RMAC_TOP_RXCOEX_RX_DECODE_DEASRT_AT_A1_MASK     0x00020000                // RX_DECODE_DEASRT_AT_A1[17]
#define BN1_WF_RMAC_TOP_RXCOEX_RX_DECODE_DEASRT_AT_A1_SHFT     17
#define BN1_WF_RMAC_TOP_RXCOEX_RX_DECODE_MASK_EN_ADDR          BN1_WF_RMAC_TOP_RXCOEX_ADDR
#define BN1_WF_RMAC_TOP_RXCOEX_RX_DECODE_MASK_EN_MASK          0x00010000                // RX_DECODE_MASK_EN[16]
#define BN1_WF_RMAC_TOP_RXCOEX_RX_DECODE_MASK_EN_SHFT          16
#define BN1_WF_RMAC_TOP_RXCOEX_RX_DOZE_RCPI_CHK_ADDR           BN1_WF_RMAC_TOP_RXCOEX_ADDR
#define BN1_WF_RMAC_TOP_RXCOEX_RX_DOZE_RCPI_CHK_MASK           0x00004000                // RX_DOZE_RCPI_CHK[14]
#define BN1_WF_RMAC_TOP_RXCOEX_RX_DOZE_RCPI_CHK_SHFT           14
#define BN1_WF_RMAC_TOP_RXCOEX_RX_DOZE_RCPI_SEL_ADDR           BN1_WF_RMAC_TOP_RXCOEX_ADDR
#define BN1_WF_RMAC_TOP_RXCOEX_RX_DOZE_RCPI_SEL_MASK           0x00003000                // RX_DOZE_RCPI_SEL[13..12]
#define BN1_WF_RMAC_TOP_RXCOEX_RX_DOZE_RCPI_SEL_SHFT           12
#define BN1_WF_RMAC_TOP_RXCOEX_RX_DOZE_THR_ADDR                BN1_WF_RMAC_TOP_RXCOEX_ADDR
#define BN1_WF_RMAC_TOP_RXCOEX_RX_DOZE_THR_MASK                0x000000FF                // RX_DOZE_THR[7..0]
#define BN1_WF_RMAC_TOP_RXCOEX_RX_DOZE_THR_SHFT                0

/* =====================================================================================

  ---MAXMINLEN (0x820f5000 + 0x634)---

    MAXLEN[22..0]                - (RW) The length indicated in RXVECTOR1 more than MAXLEN will drop by RMAC.
    RESERVED23[23]               - (RO) Reserved bits
    MINLEN[31..24]               - (RW) The length indicated in RXVECTOR1 less than MINLEN will drop by RMAC.

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_MAXMINLEN_MINLEN_ADDR                  BN1_WF_RMAC_TOP_MAXMINLEN_ADDR
#define BN1_WF_RMAC_TOP_MAXMINLEN_MINLEN_MASK                  0xFF000000                // MINLEN[31..24]
#define BN1_WF_RMAC_TOP_MAXMINLEN_MINLEN_SHFT                  24
#define BN1_WF_RMAC_TOP_MAXMINLEN_MAXLEN_ADDR                  BN1_WF_RMAC_TOP_MAXMINLEN_ADDR
#define BN1_WF_RMAC_TOP_MAXMINLEN_MAXLEN_MASK                  0x007FFFFF                // MAXLEN[22..0]
#define BN1_WF_RMAC_TOP_MAXMINLEN_MAXLEN_SHFT                  0

/* =====================================================================================

  ---DBGCTRL (0x820f5000 + 0x6A0)---

    DBG_USR[3..0]                - (RW) Debug port user select
    DBG_SWITCH[4]                - (RW) Debug port Switch
    RESERVED5[7..5]              - (RO) Reserved bits
    RXV_DUMP_SEL[15..8]          - (RW) RXV DDW dump select
    MIB_USR[19..16]              - (RW) Debug MIB user select
    RESERVED20[23..20]           - (RO) Reserved bits
    RXD_PHYACK_TO[28..24]        - (RW) MAC2PHY RXD ACK timeout value 
                                     unit: u-sec
    RXD_PHYACK_TO_EN[29]         - (RW) MAC2PHY RXD ACK timeout enable
    DBG_STS_CTRL[31..30]         - (RW) RX Debug status control
                                     2'b00: Not reset
                                     2'b01: reset at MDRDY rising
                                     2'b10: Latch one when error
                                     2'b11: Reset Status

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_DBGCTRL_DBG_STS_CTRL_ADDR              BN1_WF_RMAC_TOP_DBGCTRL_ADDR
#define BN1_WF_RMAC_TOP_DBGCTRL_DBG_STS_CTRL_MASK              0xC0000000                // DBG_STS_CTRL[31..30]
#define BN1_WF_RMAC_TOP_DBGCTRL_DBG_STS_CTRL_SHFT              30
#define BN1_WF_RMAC_TOP_DBGCTRL_RXD_PHYACK_TO_EN_ADDR          BN1_WF_RMAC_TOP_DBGCTRL_ADDR
#define BN1_WF_RMAC_TOP_DBGCTRL_RXD_PHYACK_TO_EN_MASK          0x20000000                // RXD_PHYACK_TO_EN[29]
#define BN1_WF_RMAC_TOP_DBGCTRL_RXD_PHYACK_TO_EN_SHFT          29
#define BN1_WF_RMAC_TOP_DBGCTRL_RXD_PHYACK_TO_ADDR             BN1_WF_RMAC_TOP_DBGCTRL_ADDR
#define BN1_WF_RMAC_TOP_DBGCTRL_RXD_PHYACK_TO_MASK             0x1F000000                // RXD_PHYACK_TO[28..24]
#define BN1_WF_RMAC_TOP_DBGCTRL_RXD_PHYACK_TO_SHFT             24
#define BN1_WF_RMAC_TOP_DBGCTRL_MIB_USR_ADDR                   BN1_WF_RMAC_TOP_DBGCTRL_ADDR
#define BN1_WF_RMAC_TOP_DBGCTRL_MIB_USR_MASK                   0x000F0000                // MIB_USR[19..16]
#define BN1_WF_RMAC_TOP_DBGCTRL_MIB_USR_SHFT                   16
#define BN1_WF_RMAC_TOP_DBGCTRL_RXV_DUMP_SEL_ADDR              BN1_WF_RMAC_TOP_DBGCTRL_ADDR
#define BN1_WF_RMAC_TOP_DBGCTRL_RXV_DUMP_SEL_MASK              0x0000FF00                // RXV_DUMP_SEL[15..8]
#define BN1_WF_RMAC_TOP_DBGCTRL_RXV_DUMP_SEL_SHFT              8
#define BN1_WF_RMAC_TOP_DBGCTRL_DBG_SWITCH_ADDR                BN1_WF_RMAC_TOP_DBGCTRL_ADDR
#define BN1_WF_RMAC_TOP_DBGCTRL_DBG_SWITCH_MASK                0x00000010                // DBG_SWITCH[4]
#define BN1_WF_RMAC_TOP_DBGCTRL_DBG_SWITCH_SHFT                4
#define BN1_WF_RMAC_TOP_DBGCTRL_DBG_USR_ADDR                   BN1_WF_RMAC_TOP_DBGCTRL_ADDR
#define BN1_WF_RMAC_TOP_DBGCTRL_DBG_USR_MASK                   0x0000000F                // DBG_USR[3..0]
#define BN1_WF_RMAC_TOP_DBGCTRL_DBG_USR_SHFT                   0

/* =====================================================================================

  ---DBGMIB (0x820f5000 + 0x6A4)---

    MIB_USR_ENB[15..0]           - (RW) RX MIB counter Total User trigger count enable bit mask
                                     For MIB(MPDU, FCS_OK, FCS_ERR, RXLEN_MISMATCH) counter enable
                                     16'h0001 for Enable User0
                                     16'h0003 for Enable User0 and User1
                                     16'hFFFF for Enable User0~User15
    MIB_DBG_SEL[19..16]          - (RW) RX RMAC MIB debug counter select
    MIB_DBG_MODE[20]             - (RW) RX RMAC MIB debug counter mode
                                     1'b0: use normal MIB
                                     1'b1: use RMAC local MIB
    MIB_BYPASS_BUSY[21]          - (RW) RMAC bypass request busy condition
    RESERVED22[27..22]           - (RO) Reserved bits
    MIBCNT_BSSID_EN[31..28]      - (RW) MIB counter Pre BSSID enable
                                     4'b1111: ALL BSSID valid, disable BSSID check
                                     bit0: for BSSID0
                                     bit1: for BSSID1
                                     bit2: for BSSID2
                                     bit3: for BSSID3

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_DBGMIB_MIBCNT_BSSID_EN_ADDR            BN1_WF_RMAC_TOP_DBGMIB_ADDR
#define BN1_WF_RMAC_TOP_DBGMIB_MIBCNT_BSSID_EN_MASK            0xF0000000                // MIBCNT_BSSID_EN[31..28]
#define BN1_WF_RMAC_TOP_DBGMIB_MIBCNT_BSSID_EN_SHFT            28
#define BN1_WF_RMAC_TOP_DBGMIB_MIB_BYPASS_BUSY_ADDR            BN1_WF_RMAC_TOP_DBGMIB_ADDR
#define BN1_WF_RMAC_TOP_DBGMIB_MIB_BYPASS_BUSY_MASK            0x00200000                // MIB_BYPASS_BUSY[21]
#define BN1_WF_RMAC_TOP_DBGMIB_MIB_BYPASS_BUSY_SHFT            21
#define BN1_WF_RMAC_TOP_DBGMIB_MIB_DBG_MODE_ADDR               BN1_WF_RMAC_TOP_DBGMIB_ADDR
#define BN1_WF_RMAC_TOP_DBGMIB_MIB_DBG_MODE_MASK               0x00100000                // MIB_DBG_MODE[20]
#define BN1_WF_RMAC_TOP_DBGMIB_MIB_DBG_MODE_SHFT               20
#define BN1_WF_RMAC_TOP_DBGMIB_MIB_DBG_SEL_ADDR                BN1_WF_RMAC_TOP_DBGMIB_ADDR
#define BN1_WF_RMAC_TOP_DBGMIB_MIB_DBG_SEL_MASK                0x000F0000                // MIB_DBG_SEL[19..16]
#define BN1_WF_RMAC_TOP_DBGMIB_MIB_DBG_SEL_SHFT                16
#define BN1_WF_RMAC_TOP_DBGMIB_MIB_USR_ENB_ADDR                BN1_WF_RMAC_TOP_DBGMIB_ADDR
#define BN1_WF_RMAC_TOP_DBGMIB_MIB_USR_ENB_MASK                0x0000FFFF                // MIB_USR_ENB[15..0]
#define BN1_WF_RMAC_TOP_DBGMIB_MIB_USR_ENB_SHFT                0

/* =====================================================================================

  ---DBGMIB_RD (0x820f5000 + 0x6A8)---

    DBGMIB_RD[31..0]             - (RW) RMAC local MIB count read value

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_DBGMIB_RD_DBGMIB_RD_ADDR               BN1_WF_RMAC_TOP_DBGMIB_RD_ADDR
#define BN1_WF_RMAC_TOP_DBGMIB_RD_DBGMIB_RD_MASK               0xFFFFFFFF                // DBGMIB_RD[31..0]
#define BN1_WF_RMAC_TOP_DBGMIB_RD_DBGMIB_RD_SHFT               0

/* =====================================================================================

  ---RXV_DUMP0 (0x820f5000 + 0x6B0)---

    RXV_DW0[31..0]               - (RO) RXV Dump DW0

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RXV_DUMP0_RXV_DW0_ADDR                 BN1_WF_RMAC_TOP_RXV_DUMP0_ADDR
#define BN1_WF_RMAC_TOP_RXV_DUMP0_RXV_DW0_MASK                 0xFFFFFFFF                // RXV_DW0[31..0]
#define BN1_WF_RMAC_TOP_RXV_DUMP0_RXV_DW0_SHFT                 0

/* =====================================================================================

  ---RXV_DUMP1 (0x820f5000 + 0x6B4)---

    RXV_DW1[31..0]               - (RO) RXV Dump DW1

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RXV_DUMP1_RXV_DW1_ADDR                 BN1_WF_RMAC_TOP_RXV_DUMP1_ADDR
#define BN1_WF_RMAC_TOP_RXV_DUMP1_RXV_DW1_MASK                 0xFFFFFFFF                // RXV_DW1[31..0]
#define BN1_WF_RMAC_TOP_RXV_DUMP1_RXV_DW1_SHFT                 0

/* =====================================================================================

  ---RX_STS0 (0x820f5000 + 0x6C0)---

    RXV_STS[15..0]               - (RO) RXV Status dump
    RXD_STS[31..16]              - (RO) RXD Status dump

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RX_STS0_RXD_STS_ADDR                   BN1_WF_RMAC_TOP_RX_STS0_ADDR
#define BN1_WF_RMAC_TOP_RX_STS0_RXD_STS_MASK                   0xFFFF0000                // RXD_STS[31..16]
#define BN1_WF_RMAC_TOP_RX_STS0_RXD_STS_SHFT                   16
#define BN1_WF_RMAC_TOP_RX_STS0_RXV_STS_ADDR                   BN1_WF_RMAC_TOP_RX_STS0_ADDR
#define BN1_WF_RMAC_TOP_RX_STS0_RXV_STS_MASK                   0x0000FFFF                // RXV_STS[15..0]
#define BN1_WF_RMAC_TOP_RX_STS0_RXV_STS_SHFT                   0

/* =====================================================================================

  ---RX_STS2 (0x820f5000 + 0x6C4)---

    TFP_STS[31..0]               - (RO) RX Trigger Frame Parser status Dump

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RX_STS2_TFP_STS_ADDR                   BN1_WF_RMAC_TOP_RX_STS2_ADDR
#define BN1_WF_RMAC_TOP_RX_STS2_TFP_STS_MASK                   0xFFFFFFFF                // TFP_STS[31..0]
#define BN1_WF_RMAC_TOP_RX_STS2_TFP_STS_SHFT                   0

/* =====================================================================================

  ---RX_STS3 (0x820f5000 + 0x6C8)---

    RDP_STS[31..0]               - (RO) RX RDP status dump

 =====================================================================================*/
#define BN1_WF_RMAC_TOP_RX_STS3_RDP_STS_ADDR                   BN1_WF_RMAC_TOP_RX_STS3_ADDR
#define BN1_WF_RMAC_TOP_RX_STS3_RDP_STS_MASK                   0xFFFFFFFF                // RDP_STS[31..0]
#define BN1_WF_RMAC_TOP_RX_STS3_RDP_STS_SHFT                   0

#ifdef __cplusplus
}
#endif

#endif // __BN1_WF_RMAC_TOP_REGS_H__
