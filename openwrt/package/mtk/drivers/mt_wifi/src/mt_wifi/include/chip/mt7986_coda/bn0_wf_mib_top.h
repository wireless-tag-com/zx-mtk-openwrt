//[File]            : bn0_wf_mib_top.h
//[Revision time]   : Fri Sep 25 23:20:53 2020
//[Description]     : This file is auto generated by CODA
//[Copyright]       : Copyright (C) 2020 Mediatek Incorportion. All rights reserved.

#ifndef __BN0_WF_MIB_TOP_REGS_H__
#define __BN0_WF_MIB_TOP_REGS_H__

#include "hal_common.h"

#ifdef __cplusplus
extern "C" {
#endif


//****************************************************************************
//
//                     BN0_WF_MIB_TOP CR Definitions                     
//
//****************************************************************************

#define BN0_WF_MIB_TOP_BASE                                    0x820ED000

#define BN0_WF_MIB_TOP_M0SCR0_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x000) // D000
#define BN0_WF_MIB_TOP_M0SCR1_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x004) // D004
#define BN0_WF_MIB_TOP_M0SCR2_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x008) // D008
#define BN0_WF_MIB_TOP_M0MISCCR_ADDR                           (BN0_WF_MIB_TOP_BASE + 0x010) // D010
#define BN0_WF_MIB_TOP_MCR_ADDR                                (BN0_WF_MIB_TOP_BASE + 0x01C) // D01C
#define BN0_WF_MIB_TOP_M0SDR6_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x020) // D020
#define BN0_WF_MIB_TOP_M0SDR9_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x024) // D024
#define BN0_WF_MIB_TOP_MNCR_ADDR                               (BN0_WF_MIB_TOP_BASE + 0x028) // D028
#define BN0_WF_MIB_TOP_M0SDR18_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x030) // D030
#define BN0_WF_MIB_TOP_M0SDR59_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x034) // D034
#define BN0_WF_MIB_TOP_M0SDR35_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x040) // D040
#define BN0_WF_MIB_TOP_M2PITCR_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x044) // D044
#define BN0_WF_MIB_TOP_M0SDR45_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x048) // D048
#define BN0_WF_MIB_TOP_M0SDR44_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x04C) // D04C
#define BN0_WF_MIB_TOP_M0SDR36_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x050) // D050
#define BN0_WF_MIB_TOP_MAR1_ADDR                               (BN0_WF_MIB_TOP_BASE + 0x054) // D054
#define BN0_WF_MIB_TOP_M0SDR37_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x058) // D058
#define BN0_WF_MIB_TOP_MAR3_ADDR                               (BN0_WF_MIB_TOP_BASE + 0x05C) // D05C
#define BN0_WF_MIB_TOP_M0SDR46_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x060) // D060
#define BN0_WF_MIB_TOP_M0SDR47_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x064) // D064
#define BN0_WF_MIB_TOP_M0SDR48_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x068) // D068
#define BN0_WF_MIB_TOP_TXOPC0_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x070) // D070
#define BN0_WF_MIB_TOP_TXOPC1_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x074) // D074
#define BN0_WF_MIB_TOP_TXOPC2_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x078) // D078
#define BN0_WF_MIB_TOP_M0SDR27_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x080) // D080
#define BN0_WF_MIB_TOP_M0SDR28_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x084) // D084
#define BN0_WF_MIB_TOP_M0SDR66_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x08C) // D08C
#define BN0_WF_MIB_TOP_M0CABT0_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x090) // D090
#define BN0_WF_MIB_TOP_M0CABT1_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x094) // D094
#define BN0_WF_MIB_TOP_M0TABT0_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x0A0) // D0A0
#define BN0_WF_MIB_TOP_M0TABT1_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x0A4) // D0A4
#define BN0_WF_MIB_TOP_M0TABT2_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x0A8) // D0A8
#define BN0_WF_MIB_TOP_M0TABT3_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x0AC) // D0AC
#define BN0_WF_MIB_TOP_M0ARNG0_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x0B0) // D0B0
#define BN0_WF_MIB_TOP_M0ARNG1_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x0B4) // D0B4
#define BN0_WF_MIB_TOP_M0ARNG2_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x0B8) // D0B8
#define BN0_WF_MIB_TOP_M0ARNG3_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x0BC) // D0BC
#define BN0_WF_MIB_TOP_MMCR_ADDR                               (BN0_WF_MIB_TOP_BASE + 0x0F0) // D0F0
#define BN0_WF_MIB_TOP_BTOCR_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x400) // D400
#define BN0_WF_MIB_TOP_BTBCR_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x428) // D428
#define BN0_WF_MIB_TOP_BTMRCR_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x478) // D478
#define BN0_WF_MIB_TOP_BTDRCR_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x4A0) // D4A0
#define BN0_WF_MIB_TOP_BTCCR_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x4C8) // D4C8
#define BN0_WF_MIB_TOP_BTDCR_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x4F0) // D4F0
#define BN0_WF_MIB_TOP_BTCR_ADDR                               (BN0_WF_MIB_TOP_BASE + 0x4F8) // D4F8
#define BN0_WF_MIB_TOP_BTFCR_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x500) // D500
#define BN0_WF_MIB_TOP_BFTCR_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x508) // D508
#define BN0_WF_MIB_TOP_BFTFCR_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x510) // D510
#define BN0_WF_MIB_TOP_BSDR2_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x518) // D518
#define BN0_WF_MIB_TOP_BSDR3_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x520) // D520
#define BN0_WF_MIB_TOP_BSDR4_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x528) // D528
#define BN0_WF_MIB_TOP_BSDR5_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x530) // D530
#define BN0_WF_MIB_TOP_BSDR6_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x538) // D538
#define BN0_WF_MIB_TOP_ATCR_ADDR                               (BN0_WF_MIB_TOP_BASE + 0x540) // D540
#define BN0_WF_MIB_TOP_ATRCR_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x548) // D548
#define BN0_WF_MIB_TOP_ATDCR_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x550) // D550
#define BN0_WF_MIB_TOP_M0SDR12_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x558) // D558
#define BN0_WF_MIB_TOP_M0SDR31_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x55C) // D55C
#define BN0_WF_MIB_TOP_M0SDR13_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x560) // D560
#define BN0_WF_MIB_TOP_M0SDR14_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x564) // D564
#define BN0_WF_MIB_TOP_M0SDR15_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x568) // D568
#define BN0_WF_MIB_TOP_M0DR8_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x56C) // D56C
#define BN0_WF_MIB_TOP_M0DR9_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x570) // D570
#define BN0_WF_MIB_TOP_M0DR11_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x574) // D574
#define BN0_WF_MIB_TOP_M0DR10_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x578) // D578
#define BN0_WF_MIB_TOP_SRC0_ADDR                               (BN0_WF_MIB_TOP_BASE + 0x57C) // D57C
#define BN0_WF_MIB_TOP_SRC1_ADDR                               (BN0_WF_MIB_TOP_BASE + 0x580) // D580
#define BN0_WF_MIB_TOP_M0SDR50_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x590) // D590
#define BN0_WF_MIB_TOP_M0DR0_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x594) // D594
#define BN0_WF_MIB_TOP_M0DR1_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x598) // D598
#define BN0_WF_MIB_TOP_M0SDR56_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x59C) // D59C
#define BN0_WF_MIB_TOP_M0DROPSR00_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x5A0) // D5A0
#define BN0_WF_MIB_TOP_M0DROPSR01_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x5A4) // D5A4
#define BN0_WF_MIB_TOP_M0SDR7_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x5A8) // D5A8
#define BN0_WF_MIB_TOP_M0SDR19_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x5AC) // D5AC
#define BN0_WF_MIB_TOP_M0SDR20_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x5B0) // D5B0
#define BN0_WF_MIB_TOP_M0SDR21_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x5B4) // D5B4
#define BN0_WF_MIB_TOP_BROCR_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x5B8) // D5B8
#define BN0_WF_MIB_TOP_BRBCR_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x5E0) // D5E0
#define BN0_WF_MIB_TOP_BRDCR_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x630) // D630
#define BN0_WF_MIB_TOP_BRMCR_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x638) // D638
#define BN0_WF_MIB_TOP_BPFCR_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x640) // D640
#define BN0_WF_MIB_TOP_ARCR_ADDR                               (BN0_WF_MIB_TOP_BASE + 0x648) // D648
#define BN0_WF_MIB_TOP_M0SDR29_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x650) // D650
#define BN0_WF_MIB_TOP_M0DR12_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x654) // D654
#define BN0_WF_MIB_TOP_M0DR6_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x658) // D658
#define BN0_WF_MIB_TOP_M0DR7_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x65C) // D65C
#define BN0_WF_MIB_TOP_RUTCR_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x660) // D660
#define BN0_WF_MIB_TOP_TCSR0_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x674) // D674
#define BN0_WF_MIB_TOP_TCSR1_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x678) // D678
#define BN0_WF_MIB_TOP_TCSR2_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x67C) // D67C
#define BN0_WF_MIB_TOP_TCSR3_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x680) // D680
#define BN0_WF_MIB_TOP_TCSR4_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x684) // D684
#define BN0_WF_MIB_TOP_BSDR0_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x688) // D688
#define BN0_WF_MIB_TOP_BSDR1_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x690) // D690
#define BN0_WF_MIB_TOP_M0SDR3_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x698) // D698
#define BN0_WF_MIB_TOP_M0NSS1MCS0_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x69C) // D69C
#define BN0_WF_MIB_TOP_M0NSS1MCS1_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x6A0) // D6A0
#define BN0_WF_MIB_TOP_M0NSS1MCS2_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x6A4) // D6A4
#define BN0_WF_MIB_TOP_M0NSS1MCS3_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x6A8) // D6A8
#define BN0_WF_MIB_TOP_M0NSS1MCS4_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x6AC) // D6AC
#define BN0_WF_MIB_TOP_M0NSS1MCS5_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x6B0) // D6B0
#define BN0_WF_MIB_TOP_M0NSS1MCS6_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x6B4) // D6B4
#define BN0_WF_MIB_TOP_M0NSS1MCS7_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x6B8) // D6B8
#define BN0_WF_MIB_TOP_M0NSS1MCS8_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x6BC) // D6BC
#define BN0_WF_MIB_TOP_M0NSS1MCS9_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x6C0) // D6C0
#define BN0_WF_MIB_TOP_M0NSS2MCS0_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x6C4) // D6C4
#define BN0_WF_MIB_TOP_M0NSS2MCS1_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x6C8) // D6C8
#define BN0_WF_MIB_TOP_M0NSS2MCS2_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x6CC) // D6CC
#define BN0_WF_MIB_TOP_M0NSS2MCS3_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x6D0) // D6D0
#define BN0_WF_MIB_TOP_M0NSS2MCS4_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x6D4) // D6D4
#define BN0_WF_MIB_TOP_M0NSS2MCS5_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x6D8) // D6D8
#define BN0_WF_MIB_TOP_M0NSS2MCS6_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x6DC) // D6DC
#define BN0_WF_MIB_TOP_M0NSS2MCS7_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x6E0) // D6E0
#define BN0_WF_MIB_TOP_M0NSS2MCS8_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x6E4) // D6E4
#define BN0_WF_MIB_TOP_M0NSS2MCS9_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x6E8) // D6E8
#define BN0_WF_MIB_TOP_M0NSS3MCS0_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x6EC) // D6EC
#define BN0_WF_MIB_TOP_M0NSS3MCS1_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x6F0) // D6F0
#define BN0_WF_MIB_TOP_M0NSS3MCS2_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x6F4) // D6F4
#define BN0_WF_MIB_TOP_M0NSS3MCS3_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x6F8) // D6F8
#define BN0_WF_MIB_TOP_M0NSS3MCS4_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x6FC) // D6FC
#define BN0_WF_MIB_TOP_M0NSS3MCS5_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x700) // D700
#define BN0_WF_MIB_TOP_M0NSS3MCS6_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x704) // D704
#define BN0_WF_MIB_TOP_M0NSS3MCS7_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x708) // D708
#define BN0_WF_MIB_TOP_M0NSS3MCS8_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x70C) // D70C
#define BN0_WF_MIB_TOP_M0NSS3MCS9_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x710) // D710
#define BN0_WF_MIB_TOP_M0NSS4MCS0_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x714) // D714
#define BN0_WF_MIB_TOP_M0NSS4MCS1_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x718) // D718
#define BN0_WF_MIB_TOP_M0NSS4MCS2_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x71C) // D71C
#define BN0_WF_MIB_TOP_M0NSS4MCS3_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x720) // D720
#define BN0_WF_MIB_TOP_M0NSS4MCS4_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x724) // D724
#define BN0_WF_MIB_TOP_M0NSS4MCS5_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x728) // D728
#define BN0_WF_MIB_TOP_M0NSS4MCS6_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x72C) // D72C
#define BN0_WF_MIB_TOP_M0NSS4MCS7_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x730) // D730
#define BN0_WF_MIB_TOP_M0NSS4MCS8_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x734) // D734
#define BN0_WF_MIB_TOP_M0NSS4MCS9_ADDR                         (BN0_WF_MIB_TOP_BASE + 0x738) // D738
#define BN0_WF_MIB_TOP_M0SDR52_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x73C) // D73C
#define BN0_WF_MIB_TOP_M0SDR53_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x740) // D740
#define BN0_WF_MIB_TOP_M0SDR60_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x744) // D744
#define BN0_WF_MIB_TOP_M0SDR61_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x748) // D748
#define BN0_WF_MIB_TOP_M0SDR42_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x74C) // D74C
#define BN0_WF_MIB_TOP_M0SDR43_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x750) // D750
#define BN0_WF_MIB_TOP_M0SDR49_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x754) // D754
#define BN0_WF_MIB_TOP_M0SDR67_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x758) // D758
#define BN0_WF_MIB_TOP_M0SDR62_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x75C) // D75C
#define BN0_WF_MIB_TOP_M0SDR63_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x760) // D760
#define BN0_WF_MIB_TOP_M0SDR64_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x764) // D764
#define BN0_WF_MIB_TOP_M0SDR65_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x768) // D768
#define BN0_WF_MIB_TOP_M0SDR10_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x76C) // D76C
#define BN0_WF_MIB_TOP_M0SDR22_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x770) // D770
#define BN0_WF_MIB_TOP_M0SDR23_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x774) // D774
#define BN0_WF_MIB_TOP_M0SDR24_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x778) // D778
#define BN0_WF_MIB_TOP_M0SDR25_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x77C) // D77C
#define BN0_WF_MIB_TOP_M0SDR5_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x780) // D780
#define BN0_WF_MIB_TOP_M0SDR41_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x784) // D784
#define BN0_WF_MIB_TOP_M0SDR4_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x788) // D788
#define BN0_WF_MIB_TOP_M0SDR8_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x78C) // D78C
#define BN0_WF_MIB_TOP_M0SDR11_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x790) // D790
#define BN0_WF_MIB_TOP_M0SDR26_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x794) // D794
#define BN0_WF_MIB_TOP_SRVCR_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x798) // D798
#define BN0_WF_MIB_TOP_SRCPVCR_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x79C) // D79C
#define BN0_WF_MIB_TOP_SRTRCR_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x7A0) // D7A0
#define BN0_WF_MIB_TOP_OPCR_ADDR                               (BN0_WF_MIB_TOP_BASE + 0x7A4) // D7A4
#define BN0_WF_MIB_TOP_M0SDR32_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x7A8) // D7A8
#define BN0_WF_MIB_TOP_M0SDR33_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x7AC) // D7AC
#define BN0_WF_MIB_TOP_BFCR0_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x7B0) // D7B0
#define BN0_WF_MIB_TOP_BFCR1_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x7B4) // D7B4
#define BN0_WF_MIB_TOP_BFCR2_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x7B8) // D7B8
#define BN0_WF_MIB_TOP_BFCR3_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x7BC) // D7BC
#define BN0_WF_MIB_TOP_BFCR4_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x7C0) // D7C0
#define BN0_WF_MIB_TOP_BFCR5_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x7C4) // D7C4
#define BN0_WF_MIB_TOP_BFCR6_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x7C8) // D7C8
#define BN0_WF_MIB_TOP_BFCR7_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x7CC) // D7CC
#define BN0_WF_MIB_TOP_M0SDR58_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x7D0) // D7D0
#define BN0_WF_MIB_TOP_BFCR8_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x7D4) // D7D4
#define BN0_WF_MIB_TOP_M0SDR0_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x7D8) // D7D8
#define BN0_WF_MIB_TOP_M0DR2_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x7DC) // D7DC
#define BN0_WF_MIB_TOP_M0DR3_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x7E0) // D7E0
#define BN0_WF_MIB_TOP_M0DR4_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x7E4) // D7E4
#define BN0_WF_MIB_TOP_M0DR5_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x7E8) // D7E8
#define BN0_WF_MIB_TOP_M0DR13_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x7EC) // D7EC
#define BN0_WF_MIB_TOP_M0DR14_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x7F0) // D7F0
#define BN0_WF_MIB_TOP_M0DR15_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x7F4) // D7F4
#define BN0_WF_MIB_TOP_M0DR16_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x7F8) // D7F8
#define BN0_WF_MIB_TOP_M0SDR16_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x7FC) // D7FC
#define BN0_WF_MIB_TOP_M0SDR17_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x800) // D800
#define BN0_WF_MIB_TOP_MCTR0_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x804) // D804
#define BN0_WF_MIB_TOP_MCTR1_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x808) // D808
#define BN0_WF_MIB_TOP_MCTR2_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x80C) // D80C
#define BN0_WF_MIB_TOP_MCTR3_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x810) // D810
#define BN0_WF_MIB_TOP_MCS2TR0_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x814) // D814
#define BN0_WF_MIB_TOP_MCS2TR1_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x818) // D818
#define BN0_WF_MIB_TOP_MCS2TR2_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x81C) // D81C
#define BN0_WF_MIB_TOP_MCS2TR3_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x820) // D820
#define BN0_WF_MIB_TOP_MCS2TR4_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x824) // D824
#define BN0_WF_MIB_TOP_MCS2TR5_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x828) // D828
#define BN0_WF_MIB_TOP_MCS2TR6_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x82C) // D82C
#define BN0_WF_MIB_TOP_MCS2TR7_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x830) // D830
#define BN0_WF_MIB_TOP_BRIPCR0_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x834) // D834
#define BN0_WF_MIB_TOP_BRIPCR1_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x83C) // D83C
#define BN0_WF_MIB_TOP_BRIPCR2_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x844) // D844
#define BN0_WF_MIB_TOP_BRIPCR3_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x84C) // D84C
#define BN0_WF_MIB_TOP_BRIPCR4_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x854) // D854




/* =====================================================================================

  ---M0SCR0 (0x820ED000 + 0x000)---

    RESERVED0[2..0]              - (RO) Reserved bits
    CHANNEL_IDLE_COUNT_EN[3]     - (RW) Enable Channel idle count
    RESERVED4[10..4]             - (RO) Reserved bits
    PSCCA_TIME_EN[13..11]        - (RW) Enable PSCCA time count
    CCA_NAV_TX_TIME_EN[16..14]   - (RW) Enable CCA NAV TX time count
    RESERVED17[17]               - (RO) Reserved bits
    ARB_TX_RWP_COUNT_EN[18]      - (RW) Enable ARB TX remaining windows count
    RESERVED19[24..19]           - (RO) Reserved bits
    OFDM_CCK_MDRDY_TIME_EN[27..25] - (RW) Enable OFDM CCK MDRDY time count
    PED_TIME_EN[30..28]          - (RW) Enable Primary ED time count
    MIB_COUNTER_RD_CONTROL[31]   - (RW) Control the read clear function for all MIB counters, including.

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SCR0_MIB_COUNTER_RD_CONTROL_ADDR      BN0_WF_MIB_TOP_M0SCR0_ADDR
#define BN0_WF_MIB_TOP_M0SCR0_MIB_COUNTER_RD_CONTROL_MASK      0x80000000                // MIB_COUNTER_RD_CONTROL[31]
#define BN0_WF_MIB_TOP_M0SCR0_MIB_COUNTER_RD_CONTROL_SHFT      31
#define BN0_WF_MIB_TOP_M0SCR0_PED_TIME_EN_ADDR                 BN0_WF_MIB_TOP_M0SCR0_ADDR
#define BN0_WF_MIB_TOP_M0SCR0_PED_TIME_EN_MASK                 0x70000000                // PED_TIME_EN[30..28]
#define BN0_WF_MIB_TOP_M0SCR0_PED_TIME_EN_SHFT                 28
#define BN0_WF_MIB_TOP_M0SCR0_OFDM_CCK_MDRDY_TIME_EN_ADDR      BN0_WF_MIB_TOP_M0SCR0_ADDR
#define BN0_WF_MIB_TOP_M0SCR0_OFDM_CCK_MDRDY_TIME_EN_MASK      0x0E000000                // OFDM_CCK_MDRDY_TIME_EN[27..25]
#define BN0_WF_MIB_TOP_M0SCR0_OFDM_CCK_MDRDY_TIME_EN_SHFT      25
#define BN0_WF_MIB_TOP_M0SCR0_ARB_TX_RWP_COUNT_EN_ADDR         BN0_WF_MIB_TOP_M0SCR0_ADDR
#define BN0_WF_MIB_TOP_M0SCR0_ARB_TX_RWP_COUNT_EN_MASK         0x00040000                // ARB_TX_RWP_COUNT_EN[18]
#define BN0_WF_MIB_TOP_M0SCR0_ARB_TX_RWP_COUNT_EN_SHFT         18
#define BN0_WF_MIB_TOP_M0SCR0_CCA_NAV_TX_TIME_EN_ADDR          BN0_WF_MIB_TOP_M0SCR0_ADDR
#define BN0_WF_MIB_TOP_M0SCR0_CCA_NAV_TX_TIME_EN_MASK          0x0001C000                // CCA_NAV_TX_TIME_EN[16..14]
#define BN0_WF_MIB_TOP_M0SCR0_CCA_NAV_TX_TIME_EN_SHFT          14
#define BN0_WF_MIB_TOP_M0SCR0_PSCCA_TIME_EN_ADDR               BN0_WF_MIB_TOP_M0SCR0_ADDR
#define BN0_WF_MIB_TOP_M0SCR0_PSCCA_TIME_EN_MASK               0x00003800                // PSCCA_TIME_EN[13..11]
#define BN0_WF_MIB_TOP_M0SCR0_PSCCA_TIME_EN_SHFT               11
#define BN0_WF_MIB_TOP_M0SCR0_CHANNEL_IDLE_COUNT_EN_ADDR       BN0_WF_MIB_TOP_M0SCR0_ADDR
#define BN0_WF_MIB_TOP_M0SCR0_CHANNEL_IDLE_COUNT_EN_MASK       0x00000008                // CHANNEL_IDLE_COUNT_EN[3]
#define BN0_WF_MIB_TOP_M0SCR0_CHANNEL_IDLE_COUNT_EN_SHFT       3

/* =====================================================================================

  ---M0SCR1 (0x820ED000 + 0x004)---

    RESERVED0[3..0]              - (RO) Reserved bits
    MAC2PHY_TIME_EN[4]           - (RW) Enable MAC2PHY TX/idle time count
    RESERVED5[7..5]              - (RO) Reserved bits
    TXDUR_EN[8]                  - (RW) Enable TXDUR count
    RXDUR_EN[9]                  - (RW) Enable RXDUR count
    RESERVED10[13..10]           - (RO) Reserved bits
    TXOP_STATUS_COUNT_EN[14]     - (RW) Enable TXOP Status Counters
    EIFS_SLOT_COUNT_EN[15]       - (RW) Enable EIFS SLOT Counters
    NON_ED_EN[16]                - (RW) Invert the primary ED source
    RESERVED17[18..17]           - (RO) Reserved bits
    MOZART_ED_TRIG_COUNT_EN[19]  - (RW) Enable Energy detection trigger counter
    TX_TIME_COUNT_EN[20]         - (RW) Enable transmission time counter
    OPPO_PS_RX_DIS_COUNT_EN[21]  - (RW) Enable OPPO power save counter
    OPPO_PS_RX_DIS_TIME_COUNT_EN[22] - (RW) Enable OPPO power save time counter
    OPPO_SX_OFF_COUNT_EN[23]     - (RW) Enable SX power off counter
    RESERVED24[26..24]           - (RO) Reserved bits
    EIFS_OFDM_COUNT_EN[27]       - (RW) Enable EIFS OFDM Counters
    EIFS_CCK_COUNT_EN[28]        - (RW) Enable EIFS CCK Counters
    RESERVED29[31..29]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SCR1_EIFS_CCK_COUNT_EN_ADDR           BN0_WF_MIB_TOP_M0SCR1_ADDR
#define BN0_WF_MIB_TOP_M0SCR1_EIFS_CCK_COUNT_EN_MASK           0x10000000                // EIFS_CCK_COUNT_EN[28]
#define BN0_WF_MIB_TOP_M0SCR1_EIFS_CCK_COUNT_EN_SHFT           28
#define BN0_WF_MIB_TOP_M0SCR1_EIFS_OFDM_COUNT_EN_ADDR          BN0_WF_MIB_TOP_M0SCR1_ADDR
#define BN0_WF_MIB_TOP_M0SCR1_EIFS_OFDM_COUNT_EN_MASK          0x08000000                // EIFS_OFDM_COUNT_EN[27]
#define BN0_WF_MIB_TOP_M0SCR1_EIFS_OFDM_COUNT_EN_SHFT          27
#define BN0_WF_MIB_TOP_M0SCR1_OPPO_SX_OFF_COUNT_EN_ADDR        BN0_WF_MIB_TOP_M0SCR1_ADDR
#define BN0_WF_MIB_TOP_M0SCR1_OPPO_SX_OFF_COUNT_EN_MASK        0x00800000                // OPPO_SX_OFF_COUNT_EN[23]
#define BN0_WF_MIB_TOP_M0SCR1_OPPO_SX_OFF_COUNT_EN_SHFT        23
#define BN0_WF_MIB_TOP_M0SCR1_OPPO_PS_RX_DIS_TIME_COUNT_EN_ADDR BN0_WF_MIB_TOP_M0SCR1_ADDR
#define BN0_WF_MIB_TOP_M0SCR1_OPPO_PS_RX_DIS_TIME_COUNT_EN_MASK 0x00400000                // OPPO_PS_RX_DIS_TIME_COUNT_EN[22]
#define BN0_WF_MIB_TOP_M0SCR1_OPPO_PS_RX_DIS_TIME_COUNT_EN_SHFT 22
#define BN0_WF_MIB_TOP_M0SCR1_OPPO_PS_RX_DIS_COUNT_EN_ADDR     BN0_WF_MIB_TOP_M0SCR1_ADDR
#define BN0_WF_MIB_TOP_M0SCR1_OPPO_PS_RX_DIS_COUNT_EN_MASK     0x00200000                // OPPO_PS_RX_DIS_COUNT_EN[21]
#define BN0_WF_MIB_TOP_M0SCR1_OPPO_PS_RX_DIS_COUNT_EN_SHFT     21
#define BN0_WF_MIB_TOP_M0SCR1_TX_TIME_COUNT_EN_ADDR            BN0_WF_MIB_TOP_M0SCR1_ADDR
#define BN0_WF_MIB_TOP_M0SCR1_TX_TIME_COUNT_EN_MASK            0x00100000                // TX_TIME_COUNT_EN[20]
#define BN0_WF_MIB_TOP_M0SCR1_TX_TIME_COUNT_EN_SHFT            20
#define BN0_WF_MIB_TOP_M0SCR1_MOZART_ED_TRIG_COUNT_EN_ADDR     BN0_WF_MIB_TOP_M0SCR1_ADDR
#define BN0_WF_MIB_TOP_M0SCR1_MOZART_ED_TRIG_COUNT_EN_MASK     0x00080000                // MOZART_ED_TRIG_COUNT_EN[19]
#define BN0_WF_MIB_TOP_M0SCR1_MOZART_ED_TRIG_COUNT_EN_SHFT     19
#define BN0_WF_MIB_TOP_M0SCR1_NON_ED_EN_ADDR                   BN0_WF_MIB_TOP_M0SCR1_ADDR
#define BN0_WF_MIB_TOP_M0SCR1_NON_ED_EN_MASK                   0x00010000                // NON_ED_EN[16]
#define BN0_WF_MIB_TOP_M0SCR1_NON_ED_EN_SHFT                   16
#define BN0_WF_MIB_TOP_M0SCR1_EIFS_SLOT_COUNT_EN_ADDR          BN0_WF_MIB_TOP_M0SCR1_ADDR
#define BN0_WF_MIB_TOP_M0SCR1_EIFS_SLOT_COUNT_EN_MASK          0x00008000                // EIFS_SLOT_COUNT_EN[15]
#define BN0_WF_MIB_TOP_M0SCR1_EIFS_SLOT_COUNT_EN_SHFT          15
#define BN0_WF_MIB_TOP_M0SCR1_TXOP_STATUS_COUNT_EN_ADDR        BN0_WF_MIB_TOP_M0SCR1_ADDR
#define BN0_WF_MIB_TOP_M0SCR1_TXOP_STATUS_COUNT_EN_MASK        0x00004000                // TXOP_STATUS_COUNT_EN[14]
#define BN0_WF_MIB_TOP_M0SCR1_TXOP_STATUS_COUNT_EN_SHFT        14
#define BN0_WF_MIB_TOP_M0SCR1_RXDUR_EN_ADDR                    BN0_WF_MIB_TOP_M0SCR1_ADDR
#define BN0_WF_MIB_TOP_M0SCR1_RXDUR_EN_MASK                    0x00000200                // RXDUR_EN[9]
#define BN0_WF_MIB_TOP_M0SCR1_RXDUR_EN_SHFT                    9
#define BN0_WF_MIB_TOP_M0SCR1_TXDUR_EN_ADDR                    BN0_WF_MIB_TOP_M0SCR1_ADDR
#define BN0_WF_MIB_TOP_M0SCR1_TXDUR_EN_MASK                    0x00000100                // TXDUR_EN[8]
#define BN0_WF_MIB_TOP_M0SCR1_TXDUR_EN_SHFT                    8
#define BN0_WF_MIB_TOP_M0SCR1_MAC2PHY_TIME_EN_ADDR             BN0_WF_MIB_TOP_M0SCR1_ADDR
#define BN0_WF_MIB_TOP_M0SCR1_MAC2PHY_TIME_EN_MASK             0x00000010                // MAC2PHY_TIME_EN[4]
#define BN0_WF_MIB_TOP_M0SCR1_MAC2PHY_TIME_EN_SHFT             4

/* =====================================================================================

  ---M0SCR2 (0x820ED000 + 0x008)---

    NAV_SOURCE[1..0]             - (RW) select source for NAV, the setting is applied to CCA_NAV_TX_TIME and NAV_TIME
    OFDM_NON_GREEN_MDRDY_SOURCE[4..2] - (RW) select source of OFDM_LG_MIXED_VHT_MDRDY_TIME
    RESERVED5[11..5]             - (RO) Reserved bits
    ARB_TXCMD_UL_TXOK_COUNT_EN[12] - (RW) Enable ARB TXCMD uplink packet TX ok count
    MIB_UC2ME_DATA_NSS[15..13]   - (RW) RX UC2ME data NSS count by BSSIDx for MIB counter
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SCR2_MIB_UC2ME_DATA_NSS_ADDR          BN0_WF_MIB_TOP_M0SCR2_ADDR
#define BN0_WF_MIB_TOP_M0SCR2_MIB_UC2ME_DATA_NSS_MASK          0x0000E000                // MIB_UC2ME_DATA_NSS[15..13]
#define BN0_WF_MIB_TOP_M0SCR2_MIB_UC2ME_DATA_NSS_SHFT          13
#define BN0_WF_MIB_TOP_M0SCR2_ARB_TXCMD_UL_TXOK_COUNT_EN_ADDR  BN0_WF_MIB_TOP_M0SCR2_ADDR
#define BN0_WF_MIB_TOP_M0SCR2_ARB_TXCMD_UL_TXOK_COUNT_EN_MASK  0x00001000                // ARB_TXCMD_UL_TXOK_COUNT_EN[12]
#define BN0_WF_MIB_TOP_M0SCR2_ARB_TXCMD_UL_TXOK_COUNT_EN_SHFT  12
#define BN0_WF_MIB_TOP_M0SCR2_OFDM_NON_GREEN_MDRDY_SOURCE_ADDR BN0_WF_MIB_TOP_M0SCR2_ADDR
#define BN0_WF_MIB_TOP_M0SCR2_OFDM_NON_GREEN_MDRDY_SOURCE_MASK 0x0000001C                // OFDM_NON_GREEN_MDRDY_SOURCE[4..2]
#define BN0_WF_MIB_TOP_M0SCR2_OFDM_NON_GREEN_MDRDY_SOURCE_SHFT 2
#define BN0_WF_MIB_TOP_M0SCR2_NAV_SOURCE_ADDR                  BN0_WF_MIB_TOP_M0SCR2_ADDR
#define BN0_WF_MIB_TOP_M0SCR2_NAV_SOURCE_MASK                  0x00000003                // NAV_SOURCE[1..0]
#define BN0_WF_MIB_TOP_M0SCR2_NAV_SOURCE_SHFT                  0

/* =====================================================================================

  ---M0MISCCR (0x820ED000 + 0x010)---

    RESERVED0[4..0]              - (RO) Reserved bits
    TRX_ARNG_MODE[6..5]          - (RW) There are 16 AGG Range Counters that are shared for TX and RX Aggregation, which supports 3 modes:
                                      2'b00: RX AGG disabled
                                      2'b01: TX AGG uses 8 counters and RX AGG uses 8 counters
                                      2'b10: TX AGG disabled
    RESERVED7[7]                 - (RO) Reserved bits
    SEC_CS_ED_SEL[13..8]         - (RW) select Secondary CS or ED Sources: 20MHz, 40MHz or 80MHz for S_CCA_TIME
    PRIM_CS_ED_SEL[15..14]       - (RW) select primary CS or ED Sources for P_CCA_TIME
    S20BW_CS_ED_SEL[17..16]      - (RW) select secondary CS or ED Sources for S_20BW_CCA_TIME
    S40BW_CS_ED_SEL[19..18]      - (RW) select secondary CS or ED Sources for S_40BW_CCA_TIME
    S80BW_CS_ED_SEL[21..20]      - (RW) select secondary CS or ED Sources for S_80BW_CCA_TIME
    RESERVED22[23..22]           - (RO) Reserved bits
    CS_ED_SEL[31..24]            - (RW) select primary/secondary CS or ED Sources for CCA_TIME

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0MISCCR_CS_ED_SEL_ADDR                 BN0_WF_MIB_TOP_M0MISCCR_ADDR
#define BN0_WF_MIB_TOP_M0MISCCR_CS_ED_SEL_MASK                 0xFF000000                // CS_ED_SEL[31..24]
#define BN0_WF_MIB_TOP_M0MISCCR_CS_ED_SEL_SHFT                 24
#define BN0_WF_MIB_TOP_M0MISCCR_S80BW_CS_ED_SEL_ADDR           BN0_WF_MIB_TOP_M0MISCCR_ADDR
#define BN0_WF_MIB_TOP_M0MISCCR_S80BW_CS_ED_SEL_MASK           0x00300000                // S80BW_CS_ED_SEL[21..20]
#define BN0_WF_MIB_TOP_M0MISCCR_S80BW_CS_ED_SEL_SHFT           20
#define BN0_WF_MIB_TOP_M0MISCCR_S40BW_CS_ED_SEL_ADDR           BN0_WF_MIB_TOP_M0MISCCR_ADDR
#define BN0_WF_MIB_TOP_M0MISCCR_S40BW_CS_ED_SEL_MASK           0x000C0000                // S40BW_CS_ED_SEL[19..18]
#define BN0_WF_MIB_TOP_M0MISCCR_S40BW_CS_ED_SEL_SHFT           18
#define BN0_WF_MIB_TOP_M0MISCCR_S20BW_CS_ED_SEL_ADDR           BN0_WF_MIB_TOP_M0MISCCR_ADDR
#define BN0_WF_MIB_TOP_M0MISCCR_S20BW_CS_ED_SEL_MASK           0x00030000                // S20BW_CS_ED_SEL[17..16]
#define BN0_WF_MIB_TOP_M0MISCCR_S20BW_CS_ED_SEL_SHFT           16
#define BN0_WF_MIB_TOP_M0MISCCR_PRIM_CS_ED_SEL_ADDR            BN0_WF_MIB_TOP_M0MISCCR_ADDR
#define BN0_WF_MIB_TOP_M0MISCCR_PRIM_CS_ED_SEL_MASK            0x0000C000                // PRIM_CS_ED_SEL[15..14]
#define BN0_WF_MIB_TOP_M0MISCCR_PRIM_CS_ED_SEL_SHFT            14
#define BN0_WF_MIB_TOP_M0MISCCR_SEC_CS_ED_SEL_ADDR             BN0_WF_MIB_TOP_M0MISCCR_ADDR
#define BN0_WF_MIB_TOP_M0MISCCR_SEC_CS_ED_SEL_MASK             0x00003F00                // SEC_CS_ED_SEL[13..8]
#define BN0_WF_MIB_TOP_M0MISCCR_SEC_CS_ED_SEL_SHFT             8
#define BN0_WF_MIB_TOP_M0MISCCR_TRX_ARNG_MODE_ADDR             BN0_WF_MIB_TOP_M0MISCCR_ADDR
#define BN0_WF_MIB_TOP_M0MISCCR_TRX_ARNG_MODE_MASK             0x00000060                // TRX_ARNG_MODE[6..5]
#define BN0_WF_MIB_TOP_M0MISCCR_TRX_ARNG_MODE_SHFT             5

/* =====================================================================================

  ---MCR (0x820ED000 + 0x01C)---

    MBSS_2_BSS0[0]               - (RW) recognize MBSS(bssid = 0x11-0x1F) as BSS0(bssid0) and sums its counter to BSS0 (BSS-only counters get affected)
                                     *If This counters have MBSS part, this function is not applied
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCR_MBSS_2_BSS0_ADDR                    BN0_WF_MIB_TOP_MCR_ADDR
#define BN0_WF_MIB_TOP_MCR_MBSS_2_BSS0_MASK                    0x00000001                // MBSS_2_BSS0[0]
#define BN0_WF_MIB_TOP_MCR_MBSS_2_BSS0_SHFT                    0

/* =====================================================================================

  ---M0SDR6 (0x820ED000 + 0x020)---

    CHANNEL_IDLE_COUNT[15..0]    - (RW) This counter will be added 1 at every slot boundary if the channel is idle.
                                     Enable when CHANNEL_IDLE_COUNT_EN = 1
                                     (unit: slot)
    EIFS_SLOT_COUNT[31..16]      - (RW) This counter will be added 1 at every slot boundary if the backoff counter was blocked by EIFS period.
                                     Enable when EIFS_SLOT_COUNT_EN = 1
                                     (unit: slot)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR6_EIFS_SLOT_COUNT_ADDR             BN0_WF_MIB_TOP_M0SDR6_ADDR
#define BN0_WF_MIB_TOP_M0SDR6_EIFS_SLOT_COUNT_MASK             0xFFFF0000                // EIFS_SLOT_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0SDR6_EIFS_SLOT_COUNT_SHFT             16
#define BN0_WF_MIB_TOP_M0SDR6_CHANNEL_IDLE_COUNT_ADDR          BN0_WF_MIB_TOP_M0SDR6_ADDR
#define BN0_WF_MIB_TOP_M0SDR6_CHANNEL_IDLE_COUNT_MASK          0x0000FFFF                // CHANNEL_IDLE_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR6_CHANNEL_IDLE_COUNT_SHFT          0

/* =====================================================================================

  ---M0SDR9 (0x820ED000 + 0x024)---

    CCA_NAV_TX_TIME[23..0]       - (RW) This is used for Measurement. (channel busy time), PRIM_CCA | NAV | TX_TIME
                                     Enable when CCA_NAV_TX_TIME_EN = target BSS
                                     The source of NAV is selected by NAV_SOURCE
                                     (unit: 1.024us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR9_CCA_NAV_TX_TIME_ADDR             BN0_WF_MIB_TOP_M0SDR9_ADDR
#define BN0_WF_MIB_TOP_M0SDR9_CCA_NAV_TX_TIME_MASK             0x00FFFFFF                // CCA_NAV_TX_TIME[23..0]
#define BN0_WF_MIB_TOP_M0SDR9_CCA_NAV_TX_TIME_SHFT             0

/* =====================================================================================

  ---MNCR (0x820ED000 + 0x028)---

    NAV_TIME[23..0]              - (RW) This counter is increased when NAV is not zero
                                     The source of NAV is selected by NAV_SOURCE
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MNCR_NAV_TIME_ADDR                      BN0_WF_MIB_TOP_MNCR_ADDR
#define BN0_WF_MIB_TOP_MNCR_NAV_TIME_MASK                      0x00FFFFFF                // NAV_TIME[23..0]
#define BN0_WF_MIB_TOP_MNCR_NAV_TIME_SHFT                      0

/* =====================================================================================

  ---M0SDR18 (0x820ED000 + 0x030)---

    P_ED_TIME[23..0]             - (RW) This counter measures primary ED. This counter is saturated mode.
                                     Enable when PED_TIME_EN = target BSS
                                     The source is selected by NON_ED_EN
                                     (unit: 1.024us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR18_P_ED_TIME_ADDR                  BN0_WF_MIB_TOP_M0SDR18_ADDR
#define BN0_WF_MIB_TOP_M0SDR18_P_ED_TIME_MASK                  0x00FFFFFF                // P_ED_TIME[23..0]
#define BN0_WF_MIB_TOP_M0SDR18_P_ED_TIME_SHFT                  0

/* =====================================================================================

  ---M0SDR59 (0x820ED000 + 0x034)---

    EIFS_OFDM_COUNT[15..0]       - (RW) EIFS CCK count in unit of OFDM EIFS occurrence. This counter will be added 1 at every OFDM EIFS occurrence.
                                     Enable when EIFS_OFDM_COUNT_EN = 1
                                     (unit: event)
    EIFS_CCK_COUNT[31..16]       - (RW) EIFS CCK count in unit of CCK EIFS occurrence. This counter will be added 1 at every CCK EIFS occurrence.
                                     Enable when EIFS_CCK_COUNT_EN = 1
                                     (unit: event)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR59_EIFS_CCK_COUNT_ADDR             BN0_WF_MIB_TOP_M0SDR59_ADDR
#define BN0_WF_MIB_TOP_M0SDR59_EIFS_CCK_COUNT_MASK             0xFFFF0000                // EIFS_CCK_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0SDR59_EIFS_CCK_COUNT_SHFT             16
#define BN0_WF_MIB_TOP_M0SDR59_EIFS_OFDM_COUNT_ADDR            BN0_WF_MIB_TOP_M0SDR59_ADDR
#define BN0_WF_MIB_TOP_M0SDR59_EIFS_OFDM_COUNT_MASK            0x0000FFFF                // EIFS_OFDM_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR59_EIFS_OFDM_COUNT_SHFT            0

/* =====================================================================================

  ---M0SDR35 (0x820ED000 + 0x040)---

    MAC2PHY_TX_TIME[23..0]       - (RW) mac2phy_tx assert time for ap background scan 
                                     Enable when MAC2PHY_TX_TIME_EN = 1
                                     (unit: 1us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR35_MAC2PHY_TX_TIME_ADDR            BN0_WF_MIB_TOP_M0SDR35_ADDR
#define BN0_WF_MIB_TOP_M0SDR35_MAC2PHY_TX_TIME_MASK            0x00FFFFFF                // MAC2PHY_TX_TIME[23..0]
#define BN0_WF_MIB_TOP_M0SDR35_MAC2PHY_TX_TIME_SHFT            0

/* =====================================================================================

  ---M2PITCR (0x820ED000 + 0x044)---

    MAC2PHY_IDLE_TIME[23..0]     - (RW) mac2phy idle time, this counter is increased when both mac2phy_tx & mac2phy_rx is not rose
                                     (unit: 1us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M2PITCR_MAC2PHY_IDLE_TIME_ADDR          BN0_WF_MIB_TOP_M2PITCR_ADDR
#define BN0_WF_MIB_TOP_M2PITCR_MAC2PHY_IDLE_TIME_MASK          0x00FFFFFF                // MAC2PHY_IDLE_TIME[23..0]
#define BN0_WF_MIB_TOP_M2PITCR_MAC2PHY_IDLE_TIME_SHFT          0

/* =====================================================================================

  ---M0SDR45 (0x820ED000 + 0x048)---

    TX_TIME_COUNT[15..0]         - (RW) This counter is started on transmission state, used for measurement.
                                     Enable when TX_TIME_COUNT_EN = 1
                                     (unit: 1us)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR45_TX_TIME_COUNT_ADDR              BN0_WF_MIB_TOP_M0SDR45_ADDR
#define BN0_WF_MIB_TOP_M0SDR45_TX_TIME_COUNT_MASK              0x0000FFFF                // TX_TIME_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR45_TX_TIME_COUNT_SHFT              0

/* =====================================================================================

  ---M0SDR44 (0x820ED000 + 0x04C)---

    ED_LISTEN_ABOVE_COUNT[15..0] - (RW) This counter is started on listen state with energy >= threshold, used for measurement.
                                     Enable when MOZART_ED_TRIG_COUNT_EN = 1
                                     (unit: 1us)
    ED_LISTEN_BELOW_COUNT[31..16] - (RW) This counter is started on listen state with energy < threshold, used for measurement.
                                     Enable when MOZART_ED_TRIG_COUNT_EN = 1
                                     (unit: 1us)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR44_ED_LISTEN_BELOW_COUNT_ADDR      BN0_WF_MIB_TOP_M0SDR44_ADDR
#define BN0_WF_MIB_TOP_M0SDR44_ED_LISTEN_BELOW_COUNT_MASK      0xFFFF0000                // ED_LISTEN_BELOW_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0SDR44_ED_LISTEN_BELOW_COUNT_SHFT      16
#define BN0_WF_MIB_TOP_M0SDR44_ED_LISTEN_ABOVE_COUNT_ADDR      BN0_WF_MIB_TOP_M0SDR44_ADDR
#define BN0_WF_MIB_TOP_M0SDR44_ED_LISTEN_ABOVE_COUNT_MASK      0x0000FFFF                // ED_LISTEN_ABOVE_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR44_ED_LISTEN_ABOVE_COUNT_SHFT      0

/* =====================================================================================

  ---M0SDR36 (0x820ED000 + 0x050)---

    TXDUR_AIRTIME[23..0]         - (RW) TX duration airtime (FES airtime)
                                     Enable when TXDUR_EN = 1
                                     (unit: 1.024us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR36_TXDUR_AIRTIME_ADDR              BN0_WF_MIB_TOP_M0SDR36_ADDR
#define BN0_WF_MIB_TOP_M0SDR36_TXDUR_AIRTIME_MASK              0x00FFFFFF                // TXDUR_AIRTIME[23..0]
#define BN0_WF_MIB_TOP_M0SDR36_TXDUR_AIRTIME_SHFT              0

/* =====================================================================================

  ---MAR1 (0x820ED000 + 0x054)---

    TXDUR_BACKOFF_TIME[23..0]    - (RW) TX duration backoff time
                                     Enable when TXDUR_EN = 1
                                     (unit: 1.024us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MAR1_TXDUR_BACKOFF_TIME_ADDR            BN0_WF_MIB_TOP_MAR1_ADDR
#define BN0_WF_MIB_TOP_MAR1_TXDUR_BACKOFF_TIME_MASK            0x00FFFFFF                // TXDUR_BACKOFF_TIME[23..0]
#define BN0_WF_MIB_TOP_MAR1_TXDUR_BACKOFF_TIME_SHFT            0

/* =====================================================================================

  ---M0SDR37 (0x820ED000 + 0x058)---

    RXDUR_AIRTIME[23..0]         - (RW) RX duration airtime (FES airtime)
                                     Enable when RXDUR_EN = 1
                                     (unit: 1.024us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR37_RXDUR_AIRTIME_ADDR              BN0_WF_MIB_TOP_M0SDR37_ADDR
#define BN0_WF_MIB_TOP_M0SDR37_RXDUR_AIRTIME_MASK              0x00FFFFFF                // RXDUR_AIRTIME[23..0]
#define BN0_WF_MIB_TOP_M0SDR37_RXDUR_AIRTIME_SHFT              0

/* =====================================================================================

  ---MAR3 (0x820ED000 + 0x05C)---

    RXDUR_BACKOFF_TIME[23..0]    - (RW) RX duration backoff time
                                     Enable when RXDUR_EN = 1
                                     (unit: 1.024us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MAR3_RXDUR_BACKOFF_TIME_ADDR            BN0_WF_MIB_TOP_MAR3_ADDR
#define BN0_WF_MIB_TOP_MAR3_RXDUR_BACKOFF_TIME_MASK            0x00FFFFFF                // RXDUR_BACKOFF_TIME[23..0]
#define BN0_WF_MIB_TOP_MAR3_RXDUR_BACKOFF_TIME_SHFT            0

/* =====================================================================================

  ---M0SDR46 (0x820ED000 + 0x060)---

    OPPO_PS_RX_DIS_COUNT[15..0]  - (RW) This counter is increased when PPDUs dropped by the oppo_ps_rx_dis mechanism
                                     Enable when OPPO_PS_RX_DIS_COUNT_EN = 1
                                     (unit : PPDU)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR46_OPPO_PS_RX_DIS_COUNT_ADDR       BN0_WF_MIB_TOP_M0SDR46_ADDR
#define BN0_WF_MIB_TOP_M0SDR46_OPPO_PS_RX_DIS_COUNT_MASK       0x0000FFFF                // OPPO_PS_RX_DIS_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR46_OPPO_PS_RX_DIS_COUNT_SHFT       0

/* =====================================================================================

  ---M0SDR47 (0x820ED000 + 0x064)---

    OPPO_PS_RX_DIS_TIME_COUNT[25..0] - (RW) This counter is in unit of us. This counter is start on oppo_ps_rx_dis state, used for measurement
                                     Enable when OPPO_PS_RX_DIS_TIME_COUNT_EN = 1
                                     (unit : 1us)
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR47_OPPO_PS_RX_DIS_TIME_COUNT_ADDR  BN0_WF_MIB_TOP_M0SDR47_ADDR
#define BN0_WF_MIB_TOP_M0SDR47_OPPO_PS_RX_DIS_TIME_COUNT_MASK  0x03FFFFFF                // OPPO_PS_RX_DIS_TIME_COUNT[25..0]
#define BN0_WF_MIB_TOP_M0SDR47_OPPO_PS_RX_DIS_TIME_COUNT_SHFT  0

/* =====================================================================================

  ---M0SDR48 (0x820ED000 + 0x068)---

    OPPO_SX_OFF_COUNT[15..0]     - (RW) This counter is increased when SX power off (OPPO_PS_WINDOW terminate)
                                     Enable when OPPO_SX_OFF_COUNT_EN = 1
                                     (unit : event)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR48_OPPO_SX_OFF_COUNT_ADDR          BN0_WF_MIB_TOP_M0SDR48_ADDR
#define BN0_WF_MIB_TOP_M0SDR48_OPPO_SX_OFF_COUNT_MASK          0x0000FFFF                // OPPO_SX_OFF_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR48_OPPO_SX_OFF_COUNT_SHFT          0

/* =====================================================================================

  ---TXOPC0 (0x820ED000 + 0x070)---

    TXOP_INIT_COUNT[15..0]       - (RW) This counter counts when PPDU is TXOP initiator
                                     Enable when TXOP_STATUS_COUNT_EN = 1
                                     (unit : PPDU)
    TXOP_BURST_COUNT[31..16]     - (RW) This counter counts when PPDU is burst TX during TXOP 
                                     Enable when TXOP_STATUS_COUNT_EN = 1
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TXOPC0_TXOP_BURST_COUNT_ADDR            BN0_WF_MIB_TOP_TXOPC0_ADDR
#define BN0_WF_MIB_TOP_TXOPC0_TXOP_BURST_COUNT_MASK            0xFFFF0000                // TXOP_BURST_COUNT[31..16]
#define BN0_WF_MIB_TOP_TXOPC0_TXOP_BURST_COUNT_SHFT            16
#define BN0_WF_MIB_TOP_TXOPC0_TXOP_INIT_COUNT_ADDR             BN0_WF_MIB_TOP_TXOPC0_ADDR
#define BN0_WF_MIB_TOP_TXOPC0_TXOP_INIT_COUNT_MASK             0x0000FFFF                // TXOP_INIT_COUNT[15..0]
#define BN0_WF_MIB_TOP_TXOPC0_TXOP_INIT_COUNT_SHFT             0

/* =====================================================================================

  ---TXOPC1 (0x820ED000 + 0x074)---

    TXOP_EXCEED_COUNT[15..0]     - (RW) This counter counts when PPDU TX time exceed TXOP 
                                     Enable when TXOP_STATUS_COUNT_EN = 1
                                     (unit : PPDU)
    TXOP_TXV_TOUT_COUNT[31..16]  - (RW) This counter counts when PPDU is TX vector timeout
                                     Enable when TXOP_STATUS_COUNT_EN = 1
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TXOPC1_TXOP_TXV_TOUT_COUNT_ADDR         BN0_WF_MIB_TOP_TXOPC1_ADDR
#define BN0_WF_MIB_TOP_TXOPC1_TXOP_TXV_TOUT_COUNT_MASK         0xFFFF0000                // TXOP_TXV_TOUT_COUNT[31..16]
#define BN0_WF_MIB_TOP_TXOPC1_TXOP_TXV_TOUT_COUNT_SHFT         16
#define BN0_WF_MIB_TOP_TXOPC1_TXOP_EXCEED_COUNT_ADDR           BN0_WF_MIB_TOP_TXOPC1_ADDR
#define BN0_WF_MIB_TOP_TXOPC1_TXOP_EXCEED_COUNT_MASK           0x0000FFFF                // TXOP_EXCEED_COUNT[15..0]
#define BN0_WF_MIB_TOP_TXOPC1_TXOP_EXCEED_COUNT_SHFT           0

/* =====================================================================================

  ---TXOPC2 (0x820ED000 + 0x078)---

    TXOP_TRUNC_COUNT[15..0]      - (RW) This counter counts when TXOP truncation
                                     Enable when TXOP_STATUS_COUNT_EN = 1
                                     (unit : PPDU)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TXOPC2_TXOP_TRUNC_COUNT_ADDR            BN0_WF_MIB_TOP_TXOPC2_ADDR
#define BN0_WF_MIB_TOP_TXOPC2_TXOP_TRUNC_COUNT_MASK            0x0000FFFF                // TXOP_TRUNC_COUNT[15..0]
#define BN0_WF_MIB_TOP_TXOPC2_TXOP_TRUNC_COUNT_SHFT            0

/* =====================================================================================

  ---M0SDR27 (0x820ED000 + 0x080)---

    ARB_TX_RWP_FAIL_COUNT[15..0] - (RW) This counter is increased when remaining windows protected package not send
                                     (unit : PPDU)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR27_ARB_TX_RWP_FAIL_COUNT_ADDR      BN0_WF_MIB_TOP_M0SDR27_ADDR
#define BN0_WF_MIB_TOP_M0SDR27_ARB_TX_RWP_FAIL_COUNT_MASK      0x0000FFFF                // ARB_TX_RWP_FAIL_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR27_ARB_TX_RWP_FAIL_COUNT_SHFT      0

/* =====================================================================================

  ---M0SDR28 (0x820ED000 + 0x084)---

    ARB_TX_RWP_NEED_COUNT[15..0] - (RW) This counter is increased when remaining windows protected package should send
                                     (unit : PPDU)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR28_ARB_TX_RWP_NEED_COUNT_ADDR      BN0_WF_MIB_TOP_M0SDR28_ADDR
#define BN0_WF_MIB_TOP_M0SDR28_ARB_TX_RWP_NEED_COUNT_MASK      0x0000FFFF                // ARB_TX_RWP_NEED_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR28_ARB_TX_RWP_NEED_COUNT_SHFT      0

/* =====================================================================================

  ---M0SDR66 (0x820ED000 + 0x08C)---

    ARB_TXCMD_UL_TXOK_COUNT[15..0] - (RW) This counter is increased when TXCMD ul packet sent for all AC queue
                                     (unit : PPDU)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR66_ARB_TXCMD_UL_TXOK_COUNT_ADDR    BN0_WF_MIB_TOP_M0SDR66_ADDR
#define BN0_WF_MIB_TOP_M0SDR66_ARB_TXCMD_UL_TXOK_COUNT_MASK    0x0000FFFF                // ARB_TXCMD_UL_TXOK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR66_ARB_TXCMD_UL_TXOK_COUNT_SHFT    0

/* =====================================================================================

  ---M0CABT0 (0x820ED000 + 0x090)---

    TX_ABORT_SRC_SEL_0[6..0]     - (RW) Select the source of TX Abort from AGG, TMAC and ARB HW modules
    TX_ABORT_EN_0[7]             - (RW) Enable or disable TX Abort Counting
    TX_ABORT_SRC_SEL_1[14..8]    - (RW) Select the source of TX Abort from AGG, TMAC and ARB HW modules
    TX_ABORT_EN_1[15]            - (RW) Enable or disable TX Abort Counting
    TX_ABORT_SRC_SEL_2[22..16]   - (RW) Select the source of TX Abort from AGG, TMAC and ARB HW modules
    TX_ABORT_EN_2[23]            - (RW) Enable or disable TX Abort Counting
    TX_ABORT_SRC_SEL_3[30..24]   - (RW) "Select the source of TX Abort from AGG, TMAC and ARB HW modules:
                                     set it to 127 to select the all abort source - OR all of AGG/ARB/TMAC abort sources
                                     set it to 126 to select the all abort source - OR all of AGG abort sources
                                     set it to 125 to select the all abort source - OR all of TMAC abort sources
                                     set it to 124 to select the all abort source - OR all of ARB abort sources
                                     set it to 60 to select the abort source - agg_tx_end to ARB   : Use tx_abort instead of CF end 
                                     set it to 59 to select the abort source - agg_tx_end to ARB   : request time out when prime user enter pdupre state for MU 
                                     set it to 58 to select the abort source - agg_tx_end to ARB   : Hif Error of TXD
                                     set it to 57 to select the abort source - agg_tx_end to ARB   : TMAC cannot support CF end during when agg_dynbw_sreq
                                     set it to 56 to select the abort source - agg_tx_end to ARB   : arb_tx_start but agg_ch is not idle
                                     set it to 55 to select the abort source - agg_tx_end to ARB   : PTA Packet TX Done
                                     set it to 54 to select the abort source - agg_tx_end to ARB   : Do nothing and back to idle 
                                     set it to 52 to select the abort source - agg_tx_end to ARB   : arb_tx_start but agg is not idle 
                                     set it to 50 to select the abort source - agg_tx_end to ARB   : Last BW change error 
                                     set it to 48 to select the abort source - agg_tx_end to ARB   : agg mu extra tx end 
                                     set it to 46 to select the abort source - agg_tx_end to ARB   : agg delay 1t extra tx end
                                     set it to 45 to select the abort source - tmac_abort to RMAC  : TOD abort
                                     set it to 44 to select the abort source - tmac_abort to RMAC  : TOA abort
                                     set it to 43 to select the abort source - tmac_abort to ARB/TMAC : tfsm receive RDG packet, cannot get WTBL matching before TXV_TOUT //TBD
                                     set it to 42 to select the abort source - tmac_abort to ARB/TMAC : PTA abort
                                     set it to 41 to select the abort source - tmac_abort to ARB/TMAC : tfsm no ack (TX packet and didn't receive ACK)
                                     set it to 40 to select the abort source - tmac_abort to ARB/TMAC : tfsm mixed mode/vht mode legacy legnth overflow
                                     set it to 39 to select the abort source - tmac_abort to ARB/TMAC : tfsm pkt dur>max psdu dur
                                     set it to 38 to select the abort source - tmac_abort to ARB/TMAC : tfsm edcca stop TXOP, edcca stop RDG responder
                                     set it to 37 to select the abort source - tmac_abort to ARB/TMAC : tfsm etxbf_abort (ETXBF send BFEE packet, and Tx/RX happened the same time)
                                     set it to 36 to select the abort source - tmac_abort to ARB/TMAC : tfsm edcf win clear before tx_fsm_cs return to idle
                                     set it to 35 to select the abort source - tmac_abort to ARB/TMAC : tfsm arb keep txop, but txop clear condition happened 
                                     set it to 34 to select the abort source - tmac_abort to ARB/TMAC : tfsm rts fail (TX RTS and didn't RX CTS)
                                     set it to 33 to select the abort source - tmac_abort to ARB/TMAC : tfsm rx_busy when I2T check
                                     set it to 32 to select the abort source - tmac_abort to ARB/TMAC : tfsm tx_err_rise (PHY underrun)
                                     set it to 31 to select the abort source - tmac_abort to ARB/TMAC : tfsm rst_TX (TMAC TX is disabled by ARB or LP)
                                     set it to 30 to select the abort source - tmac_abort to ARB   : mdrdy rise at I2T (When I2T check, MDRDY rise)
                                     set it to 29 to select the abort source - tmac_abort to ARB   : TX predownload abort (cca or mdrdy at predownload)
                                     set it to 28 to select the abort source - tmac_abort to TMAC   : tfsm zero handoff but drop response packet or RDG responder
                                     set it to 27 to select the abort source - tmac_abort to TMAC   : tfsm CTS response but stop
                                     set it to 26 to select the abort source - tmac_abort to TMAC   : tfsm arb_tmac_abort
                                     set it to 25 to select the abort source - tmac_abort to ARB  : or (tmac_abort_cond1, tmac_abort_cond2)
                                     set it to 24 to select the abort source - tmac_abort to TMAC   : internal tfsm OR (tmac_abort_cond1, tmac_abort_cond3_g1)
                                     set it to 23 to select the abort source - tmac_abort to TMAC   : internal tfsm OR (tmac_abort_cond1, tmac_abort_cond3_g2)+O194
                                     set it to 22 to select the abort source - tmac_abort to ETXBF  : abort to ETXBF module
                                     set it to 21 to select the abort source - arb_abort       : TMAC_TXOP_FALL
                                     set it to 20 to select the abort source - arb_abort       : ARB_TXHANG_TO
                                     set it to 19 to select the abort source - arb_abort       : ALWAYS_TMAC_ARB_ABORT
                                     set it to 18 to select the abort source - arb_abort       : TXBCN_END
                                     set it to 17 to select the abort source - arb_abort       : TXBCN_START
                                     set it to 16 to select the abort source - arb_abort       : RW_PROT_FAIL
                                     set it to 15 to select the abort source - arb_abort       : NULL_PSOFF
                                     set it to 14 to select the abort source - arb_abort       : NULL_PSON
                                     set it to 13 to select the abort source - arb_abort       : PTA_CFEND
                                     set it to 12 to select the abort source - arb_abort       : NULL_TRAP : LP Trap that causes abort at specific TSF time in LP if a packet of specific queue is being transmitted.
                                     set it to 11 to select the abort source - arb_abort       : LP_AC_DIS : thermal admission control
                                     set it to 10 to select the abort source - arb_abort       : ARB_TX_SX_ABORT: Synthesizer not ready
                                     set it to 09 to select the abort source - arb_abort       : PTA CTS2SELF: cts2self reissue aborts TXOP
                                     set it to 08 to select the abort source - arb_abort       : PTA_RX_REQ_ABORT : RX is not granted by PTA.
                                     set it to 07 to select the abort source - arb_abort       : PTA_TX_REQ_ABORT : TX is not granted by PTA.
                                     set it to 06 to select the abort source - arb_abort       : AGG_TX_END
                                     set it to 05 to select the abort source - arb_abort       : TMAC_ARB_ABORT : tfsm arb_tmac_abort
                                     set it to 04 to select the abort source - arb_abort       : LP Quiet Phase: The packet being transmitted will be aborted if the TSF time in LP matches the quiet phase.
                                     set it to 03 to select the abort source - arb_abort       : Trap: LP Trap that causes abort at specific TSF time in LP if a packet of specific queue is being transmitted.
                                     set it to 02 to select the abort source - arb_abort       : TX Entry: The packet being transmitted will be aborted if the entry address is equal to WLAN index.
                                     set it to 01 to select the abort source - arb_abort       : Queue Flush: The packet being transmitted will be aborted due to queue flush.
                                     set it to 00 to select the abort source - arb_abort       : Queue Stop: The packet being transmitted will be aborted due to queue stop."
    TX_ABORT_EN_3[31]            - (RW) Enable or disable TX Abort Counting

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_EN_3_ADDR              BN0_WF_MIB_TOP_M0CABT0_ADDR
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_EN_3_MASK              0x80000000                // TX_ABORT_EN_3[31]
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_EN_3_SHFT              31
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_SRC_SEL_3_ADDR         BN0_WF_MIB_TOP_M0CABT0_ADDR
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_SRC_SEL_3_MASK         0x7F000000                // TX_ABORT_SRC_SEL_3[30..24]
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_SRC_SEL_3_SHFT         24
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_EN_2_ADDR              BN0_WF_MIB_TOP_M0CABT0_ADDR
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_EN_2_MASK              0x00800000                // TX_ABORT_EN_2[23]
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_EN_2_SHFT              23
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_SRC_SEL_2_ADDR         BN0_WF_MIB_TOP_M0CABT0_ADDR
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_SRC_SEL_2_MASK         0x007F0000                // TX_ABORT_SRC_SEL_2[22..16]
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_SRC_SEL_2_SHFT         16
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_EN_1_ADDR              BN0_WF_MIB_TOP_M0CABT0_ADDR
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_EN_1_MASK              0x00008000                // TX_ABORT_EN_1[15]
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_EN_1_SHFT              15
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_SRC_SEL_1_ADDR         BN0_WF_MIB_TOP_M0CABT0_ADDR
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_SRC_SEL_1_MASK         0x00007F00                // TX_ABORT_SRC_SEL_1[14..8]
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_SRC_SEL_1_SHFT         8
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_EN_0_ADDR              BN0_WF_MIB_TOP_M0CABT0_ADDR
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_EN_0_MASK              0x00000080                // TX_ABORT_EN_0[7]
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_EN_0_SHFT              7
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_SRC_SEL_0_ADDR         BN0_WF_MIB_TOP_M0CABT0_ADDR
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_SRC_SEL_0_MASK         0x0000007F                // TX_ABORT_SRC_SEL_0[6..0]
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_SRC_SEL_0_SHFT         0

/* =====================================================================================

  ---M0CABT1 (0x820ED000 + 0x094)---

    TX_ABORT_SRC_SEL_4[6..0]     - (RW) Select the source of TX Abort from AGG, TMAC and ARB HW modules
    TX_ABORT_EN_4[7]             - (RW) Enable or disable TX Abort Counting
    TX_ABORT_SRC_SEL_5[14..8]    - (RW) Select the source of TX Abort from AGG, TMAC and ARB HW modules
    TX_ABORT_EN_5[15]            - (RW) Enable or disable TX Abort Counting
    TX_ABORT_SRC_SEL_6[22..16]   - (RW) Select the source of TX Abort from AGG, TMAC and ARB HW modules
    TX_ABORT_EN_6[23]            - (RW) Enable or disable TX Abort Counting
    TX_ABORT_SRC_SEL_7[30..24]   - (RW) Select the source of TX Abort from AGG, TMAC and ARB HW modules
    TX_ABORT_EN_7[31]            - (RW) Enable or disable TX Abort Counting

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_EN_7_ADDR              BN0_WF_MIB_TOP_M0CABT1_ADDR
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_EN_7_MASK              0x80000000                // TX_ABORT_EN_7[31]
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_EN_7_SHFT              31
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_SRC_SEL_7_ADDR         BN0_WF_MIB_TOP_M0CABT1_ADDR
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_SRC_SEL_7_MASK         0x7F000000                // TX_ABORT_SRC_SEL_7[30..24]
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_SRC_SEL_7_SHFT         24
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_EN_6_ADDR              BN0_WF_MIB_TOP_M0CABT1_ADDR
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_EN_6_MASK              0x00800000                // TX_ABORT_EN_6[23]
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_EN_6_SHFT              23
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_SRC_SEL_6_ADDR         BN0_WF_MIB_TOP_M0CABT1_ADDR
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_SRC_SEL_6_MASK         0x007F0000                // TX_ABORT_SRC_SEL_6[22..16]
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_SRC_SEL_6_SHFT         16
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_EN_5_ADDR              BN0_WF_MIB_TOP_M0CABT1_ADDR
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_EN_5_MASK              0x00008000                // TX_ABORT_EN_5[15]
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_EN_5_SHFT              15
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_SRC_SEL_5_ADDR         BN0_WF_MIB_TOP_M0CABT1_ADDR
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_SRC_SEL_5_MASK         0x00007F00                // TX_ABORT_SRC_SEL_5[14..8]
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_SRC_SEL_5_SHFT         8
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_EN_4_ADDR              BN0_WF_MIB_TOP_M0CABT1_ADDR
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_EN_4_MASK              0x00000080                // TX_ABORT_EN_4[7]
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_EN_4_SHFT              7
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_SRC_SEL_4_ADDR         BN0_WF_MIB_TOP_M0CABT1_ADDR
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_SRC_SEL_4_MASK         0x0000007F                // TX_ABORT_SRC_SEL_4[6..0]
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_SRC_SEL_4_SHFT         0

/* =====================================================================================

  ---M0TABT0 (0x820ED000 + 0x0A0)---

    TX_ABORT_COUNTER_0[15..0]    - (RW) This counter is increased when the abort source selected by CABT0[7:0] occurs
                                     (unit : event)
    TX_ABORT_COUNTER_1[31..16]   - (RW) This counter is increased when the abort source selected by CABT0[15:8] occurs
                                     (unit : event)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0TABT0_TX_ABORT_COUNTER_1_ADDR         BN0_WF_MIB_TOP_M0TABT0_ADDR
#define BN0_WF_MIB_TOP_M0TABT0_TX_ABORT_COUNTER_1_MASK         0xFFFF0000                // TX_ABORT_COUNTER_1[31..16]
#define BN0_WF_MIB_TOP_M0TABT0_TX_ABORT_COUNTER_1_SHFT         16
#define BN0_WF_MIB_TOP_M0TABT0_TX_ABORT_COUNTER_0_ADDR         BN0_WF_MIB_TOP_M0TABT0_ADDR
#define BN0_WF_MIB_TOP_M0TABT0_TX_ABORT_COUNTER_0_MASK         0x0000FFFF                // TX_ABORT_COUNTER_0[15..0]
#define BN0_WF_MIB_TOP_M0TABT0_TX_ABORT_COUNTER_0_SHFT         0

/* =====================================================================================

  ---M0TABT1 (0x820ED000 + 0x0A4)---

    TX_ABORT_COUNTER_2[15..0]    - (RW) This counter is increased when the abort source selected by CABT0[23:16] occurs
                                     (unit : event)
    TX_ABORT_COUNTER_3[31..16]   - (RW) This counter is increased when the abort source selected by CABT0[31:24] occurs
                                     (unit : event)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0TABT1_TX_ABORT_COUNTER_3_ADDR         BN0_WF_MIB_TOP_M0TABT1_ADDR
#define BN0_WF_MIB_TOP_M0TABT1_TX_ABORT_COUNTER_3_MASK         0xFFFF0000                // TX_ABORT_COUNTER_3[31..16]
#define BN0_WF_MIB_TOP_M0TABT1_TX_ABORT_COUNTER_3_SHFT         16
#define BN0_WF_MIB_TOP_M0TABT1_TX_ABORT_COUNTER_2_ADDR         BN0_WF_MIB_TOP_M0TABT1_ADDR
#define BN0_WF_MIB_TOP_M0TABT1_TX_ABORT_COUNTER_2_MASK         0x0000FFFF                // TX_ABORT_COUNTER_2[15..0]
#define BN0_WF_MIB_TOP_M0TABT1_TX_ABORT_COUNTER_2_SHFT         0

/* =====================================================================================

  ---M0TABT2 (0x820ED000 + 0x0A8)---

    TX_ABORT_COUNTER_4[15..0]    - (RW) This counter is increased when the abort source selected by CABT1[7:0] occurs
                                     (unit : event)
    TX_ABORT_COUNTER_5[31..16]   - (RW) This counter is increased when the abort source selected by CABT1[15:8] occurs
                                     (unit : event)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0TABT2_TX_ABORT_COUNTER_5_ADDR         BN0_WF_MIB_TOP_M0TABT2_ADDR
#define BN0_WF_MIB_TOP_M0TABT2_TX_ABORT_COUNTER_5_MASK         0xFFFF0000                // TX_ABORT_COUNTER_5[31..16]
#define BN0_WF_MIB_TOP_M0TABT2_TX_ABORT_COUNTER_5_SHFT         16
#define BN0_WF_MIB_TOP_M0TABT2_TX_ABORT_COUNTER_4_ADDR         BN0_WF_MIB_TOP_M0TABT2_ADDR
#define BN0_WF_MIB_TOP_M0TABT2_TX_ABORT_COUNTER_4_MASK         0x0000FFFF                // TX_ABORT_COUNTER_4[15..0]
#define BN0_WF_MIB_TOP_M0TABT2_TX_ABORT_COUNTER_4_SHFT         0

/* =====================================================================================

  ---M0TABT3 (0x820ED000 + 0x0AC)---

    TX_ABORT_COUNTER_6[15..0]    - (RW) This counter is increased when the abort source selected by CABT1[23:16] occurs
                                     (unit : event)
    TX_ABORT_COUNTER_7[31..16]   - (RW) This counter is increased when the abort source selected by CABT1[31:24] occurs
                                     (unit : event)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0TABT3_TX_ABORT_COUNTER_7_ADDR         BN0_WF_MIB_TOP_M0TABT3_ADDR
#define BN0_WF_MIB_TOP_M0TABT3_TX_ABORT_COUNTER_7_MASK         0xFFFF0000                // TX_ABORT_COUNTER_7[31..16]
#define BN0_WF_MIB_TOP_M0TABT3_TX_ABORT_COUNTER_7_SHFT         16
#define BN0_WF_MIB_TOP_M0TABT3_TX_ABORT_COUNTER_6_ADDR         BN0_WF_MIB_TOP_M0TABT3_ADDR
#define BN0_WF_MIB_TOP_M0TABT3_TX_ABORT_COUNTER_6_MASK         0x0000FFFF                // TX_ABORT_COUNTER_6[15..0]
#define BN0_WF_MIB_TOP_M0TABT3_TX_ABORT_COUNTER_6_SHFT         0

/* =====================================================================================

  ---M0ARNG0 (0x820ED000 + 0x0B0)---

    AGG_RANG_SEL_0[7..0]         - (RW) when TRX_ARNG_MODE = 2'b01,
                                       increase TRX_AGG_RANGE0_COUNT  when AGG_RANGE_SEL_0  >= TX_AGG_COUNT   
                                       increase TRX_AGG_RANGE1_COUNT  when AGG_RANGE_SEL_1  >= TX_AGG_COUNT > AGG_RANGE_SEL_0 
                                       increase TRX_AGG_RANGE2_COUNT  when AGG_RANGE_SEL_2  >= TX_AGG_COUNT > AGG_RANGE_SEL_1 
                                       increase TRX_AGG_RANGE3_COUNT  when AGG_RANGE_SEL_3  >= TX_AGG_COUNT > AGG_RANGE_SEL_2 
                                       increase TRX_AGG_RANGE4_COUNT  when AGG_RANGE_SEL_4  >= TX_AGG_COUNT > AGG_RANGE_SEL_3 
                                       increase TRX_AGG_RANGE5_COUNT  when AGG_RANGE_SEL_5  >= TX_AGG_COUNT > AGG_RANGE_SEL_4 
                                       increase TRX_AGG_RANGE6_COUNT  when AGG_RANGE_SEL_6  >= TX_AGG_COUNT > AGG_RANGE_SEL_5 
                                       increase TRX_AGG_RANGE7_COUNT  when                                            TX_AGG_COUNT > AGG_RANGE_SEL_6 
                                     
                                       increase TRX_AGG_RANGE8_COUNT   when AGG_RANGE_SEL_8   >= RX_AGG_COUNT                
                                       increase TRX_AGG_RANGE9_COUNT   when AGG_RANGE_SEL_9   >= RX_AGG_COUNT > AGG_RANGE_SEL_8
                                       increase TRX_AGG_RANGE10_COUNT when AGG_RANGE_SEL_10 >= RX_AGG_COUNT > AGG_RANGE_SEL_9 
                                       increase TRX_AGG_RANGE11_COUNT when AGG_RANGE_SEL_11 >= RX_AGG_COUNT > AGG_RANGE_SEL_10 
                                       increase TRX_AGG_RANGE12_COUNT when AGG_RANGE_SEL_12 >= RX_AGG_COUNT > AGG_RANGE_SEL_11 
                                       increase TRX_AGG_RANGE13_COUNT when AGG_RANGE_SEL_13 >= RX_AGG_COUNT > AGG_RANGE_SEL_12
                                       increase TRX_AGG_RANGE14_COUNT when AGG_RANGE_SEL_14 >= RX_AGG_COUNT > AGG_RANGE_SEL_13
                                       increase TRX_AGG_RANGE15_COUNT when                                             RX_AGG_COUNT > AGG_RANGE_SEL_14
                                     
                                       Note: AGG_RANGE_SEL_7 is not used
                                     
                                     when TRX_ARNG_MODE = 2'b00 or 2'b10:
                                       increase TRX_AGG_RANGE0_COUNT  when AGG_RANGE_SEL_0  >= TRX_AGG_COUNT   
                                       increase TRX_AGG_RANGE1_COUNT  when AGG_RANGE_SEL_1  >= TRX_AGG_COUNT > AGG_RANGE_SEL_0 
                                       increase TRX_AGG_RANGE2_COUNT  when AGG_RANGE_SEL_2  >= TRX_AGG_COUNT > AGG_RANGE_SEL_1 
                                       increase TRX_AGG_RANGE3_COUNT  when AGG_RANGE_SEL_3  >= TRX_AGG_COUNT > AGG_RANGE_SEL_2 
                                       increase TRX_AGG_RANGE4_COUNT  when AGG_RANGE_SEL_4  >= TRX_AGG_COUNT > AGG_RANGE_SEL_3 
                                       increase TRX_AGG_RANGE5_COUNT  when AGG_RANGE_SEL_5  >= TRX_AGG_COUNT > AGG_RANGE_SEL_4 
                                       increase TRX_AGG_RANGE6_COUNT  when AGG_RANGE_SEL_6  >= TRX_AGG_COUNT > AGG_RANGE_SEL_5 
                                       increase TRX_AGG_RANGE7_COUNT  when AGG_RANGE_SEL_7  >= TRX_AGG_COUNT > AGG_RANGE_SEL_6 
                                       increase TRX_AGG_RANGE8_COUNT  when AGG_RANGE_SEL_8  >= TRX_AGG_COUNT > AGG_RANGE_SEL_7 
                                       increase TRX_AGG_RANGE9_COUNT  when AGG_RANGE_SEL_9  >= TRX_AGG_COUNT > AGG_RANGE_SEL_8 
                                       increase TRX_AGG_RANGE10_COUNT when AGG_RANGE_SEL_10 >= TRX_AGG_COUNT > AGG_RANGE_SEL_9 
                                       increase TRX_AGG_RANGE11_COUNT when AGG_RANGE_SEL_11 >= TRX_AGG_COUNT > AGG_RANGE_SEL_10 
                                       increase TRX_AGG_RANGE12_COUNT when AGG_RANGE_SEL_12 >= TRX_AGG_COUNT > AGG_RANGE_SEL_11
                                       increase TRX_AGG_RANGE13_COUNT when AGG_RANGE_SEL_13 >= TRX_AGG_COUNT > AGG_RANGE_SEL_12
                                       increase TRX_AGG_RANGE14_COUNT when AGG_RANGE_SEL_14 >= TRX_AGG_COUNT > AGG_RANGE_SEL_13
                                       increase TRX_AGG_RANGE15_COUNT when                                             TRX_AGG_COUNT > AGG_RANGE_SEL_14
    AGG_RANG_SEL_1[15..8]        - (RW) see the description of AGG_RANGE_SEL_0
    AGG_RANG_SEL_2[23..16]       - (RW) see the description of AGG_RANGE_SEL_0
    AGG_RANG_SEL_3[31..24]       - (RW) see the description of AGG_RANGE_SEL_0

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0ARNG0_AGG_RANG_SEL_3_ADDR             BN0_WF_MIB_TOP_M0ARNG0_ADDR
#define BN0_WF_MIB_TOP_M0ARNG0_AGG_RANG_SEL_3_MASK             0xFF000000                // AGG_RANG_SEL_3[31..24]
#define BN0_WF_MIB_TOP_M0ARNG0_AGG_RANG_SEL_3_SHFT             24
#define BN0_WF_MIB_TOP_M0ARNG0_AGG_RANG_SEL_2_ADDR             BN0_WF_MIB_TOP_M0ARNG0_ADDR
#define BN0_WF_MIB_TOP_M0ARNG0_AGG_RANG_SEL_2_MASK             0x00FF0000                // AGG_RANG_SEL_2[23..16]
#define BN0_WF_MIB_TOP_M0ARNG0_AGG_RANG_SEL_2_SHFT             16
#define BN0_WF_MIB_TOP_M0ARNG0_AGG_RANG_SEL_1_ADDR             BN0_WF_MIB_TOP_M0ARNG0_ADDR
#define BN0_WF_MIB_TOP_M0ARNG0_AGG_RANG_SEL_1_MASK             0x0000FF00                // AGG_RANG_SEL_1[15..8]
#define BN0_WF_MIB_TOP_M0ARNG0_AGG_RANG_SEL_1_SHFT             8
#define BN0_WF_MIB_TOP_M0ARNG0_AGG_RANG_SEL_0_ADDR             BN0_WF_MIB_TOP_M0ARNG0_ADDR
#define BN0_WF_MIB_TOP_M0ARNG0_AGG_RANG_SEL_0_MASK             0x000000FF                // AGG_RANG_SEL_0[7..0]
#define BN0_WF_MIB_TOP_M0ARNG0_AGG_RANG_SEL_0_SHFT             0

/* =====================================================================================

  ---M0ARNG1 (0x820ED000 + 0x0B4)---

    AGG_RANG_SEL_4[7..0]         - (RW) see the description of AGG_RANGE_SEL_0
    AGG_RANG_SEL_5[15..8]        - (RW) see the description of AGG_RANGE_SEL_0
    AGG_RANG_SEL_6[23..16]       - (RW) see the description of AGG_RANGE_SEL_0
    AGG_RANG_SEL_7[31..24]       - (RW) see the description of AGG_RANGE_SEL_0

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0ARNG1_AGG_RANG_SEL_7_ADDR             BN0_WF_MIB_TOP_M0ARNG1_ADDR
#define BN0_WF_MIB_TOP_M0ARNG1_AGG_RANG_SEL_7_MASK             0xFF000000                // AGG_RANG_SEL_7[31..24]
#define BN0_WF_MIB_TOP_M0ARNG1_AGG_RANG_SEL_7_SHFT             24
#define BN0_WF_MIB_TOP_M0ARNG1_AGG_RANG_SEL_6_ADDR             BN0_WF_MIB_TOP_M0ARNG1_ADDR
#define BN0_WF_MIB_TOP_M0ARNG1_AGG_RANG_SEL_6_MASK             0x00FF0000                // AGG_RANG_SEL_6[23..16]
#define BN0_WF_MIB_TOP_M0ARNG1_AGG_RANG_SEL_6_SHFT             16
#define BN0_WF_MIB_TOP_M0ARNG1_AGG_RANG_SEL_5_ADDR             BN0_WF_MIB_TOP_M0ARNG1_ADDR
#define BN0_WF_MIB_TOP_M0ARNG1_AGG_RANG_SEL_5_MASK             0x0000FF00                // AGG_RANG_SEL_5[15..8]
#define BN0_WF_MIB_TOP_M0ARNG1_AGG_RANG_SEL_5_SHFT             8
#define BN0_WF_MIB_TOP_M0ARNG1_AGG_RANG_SEL_4_ADDR             BN0_WF_MIB_TOP_M0ARNG1_ADDR
#define BN0_WF_MIB_TOP_M0ARNG1_AGG_RANG_SEL_4_MASK             0x000000FF                // AGG_RANG_SEL_4[7..0]
#define BN0_WF_MIB_TOP_M0ARNG1_AGG_RANG_SEL_4_SHFT             0

/* =====================================================================================

  ---M0ARNG2 (0x820ED000 + 0x0B8)---

    AGG_RANG_SEL_8[7..0]         - (RW) see the description of AGG_RANGE_SEL_0
    AGG_RANG_SEL_9[15..8]        - (RW) see the description of AGG_RANGE_SEL_0
    AGG_RANG_SEL_10[23..16]      - (RW) see the description of AGG_RANGE_SEL_0
    AGG_RANG_SEL_11[31..24]      - (RW) see the description of AGG_RANGE_SEL_0

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0ARNG2_AGG_RANG_SEL_11_ADDR            BN0_WF_MIB_TOP_M0ARNG2_ADDR
#define BN0_WF_MIB_TOP_M0ARNG2_AGG_RANG_SEL_11_MASK            0xFF000000                // AGG_RANG_SEL_11[31..24]
#define BN0_WF_MIB_TOP_M0ARNG2_AGG_RANG_SEL_11_SHFT            24
#define BN0_WF_MIB_TOP_M0ARNG2_AGG_RANG_SEL_10_ADDR            BN0_WF_MIB_TOP_M0ARNG2_ADDR
#define BN0_WF_MIB_TOP_M0ARNG2_AGG_RANG_SEL_10_MASK            0x00FF0000                // AGG_RANG_SEL_10[23..16]
#define BN0_WF_MIB_TOP_M0ARNG2_AGG_RANG_SEL_10_SHFT            16
#define BN0_WF_MIB_TOP_M0ARNG2_AGG_RANG_SEL_9_ADDR             BN0_WF_MIB_TOP_M0ARNG2_ADDR
#define BN0_WF_MIB_TOP_M0ARNG2_AGG_RANG_SEL_9_MASK             0x0000FF00                // AGG_RANG_SEL_9[15..8]
#define BN0_WF_MIB_TOP_M0ARNG2_AGG_RANG_SEL_9_SHFT             8
#define BN0_WF_MIB_TOP_M0ARNG2_AGG_RANG_SEL_8_ADDR             BN0_WF_MIB_TOP_M0ARNG2_ADDR
#define BN0_WF_MIB_TOP_M0ARNG2_AGG_RANG_SEL_8_MASK             0x000000FF                // AGG_RANG_SEL_8[7..0]
#define BN0_WF_MIB_TOP_M0ARNG2_AGG_RANG_SEL_8_SHFT             0

/* =====================================================================================

  ---M0ARNG3 (0x820ED000 + 0x0BC)---

    AGG_RANG_SEL_12[7..0]        - (RW) see the description of AGG_RANGE_SEL_0
    AGG_RANG_SEL_13[15..8]       - (RW) see the description of AGG_RANGE_SEL_0
    AGG_RANG_SEL_14[23..16]      - (RW) see the description of AGG_RANGE_SEL_0
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0ARNG3_AGG_RANG_SEL_14_ADDR            BN0_WF_MIB_TOP_M0ARNG3_ADDR
#define BN0_WF_MIB_TOP_M0ARNG3_AGG_RANG_SEL_14_MASK            0x00FF0000                // AGG_RANG_SEL_14[23..16]
#define BN0_WF_MIB_TOP_M0ARNG3_AGG_RANG_SEL_14_SHFT            16
#define BN0_WF_MIB_TOP_M0ARNG3_AGG_RANG_SEL_13_ADDR            BN0_WF_MIB_TOP_M0ARNG3_ADDR
#define BN0_WF_MIB_TOP_M0ARNG3_AGG_RANG_SEL_13_MASK            0x0000FF00                // AGG_RANG_SEL_13[15..8]
#define BN0_WF_MIB_TOP_M0ARNG3_AGG_RANG_SEL_13_SHFT            8
#define BN0_WF_MIB_TOP_M0ARNG3_AGG_RANG_SEL_12_ADDR            BN0_WF_MIB_TOP_M0ARNG3_ADDR
#define BN0_WF_MIB_TOP_M0ARNG3_AGG_RANG_SEL_12_MASK            0x000000FF                // AGG_RANG_SEL_12[7..0]
#define BN0_WF_MIB_TOP_M0ARNG3_AGG_RANG_SEL_12_SHFT            0

/* =====================================================================================

  ---MMCR (0x820ED000 + 0x0F0)---

    RESET[0]                     - (WC) Reset all counter in memory, MIB clears this bit when it is finished
    RESERVED1[30..1]             - (RO) Reserved bits
    MODE[31]                     - (RW) Control the read clear function for memory based MIB counter (starting from offset 0x400)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MMCR_MODE_ADDR                          BN0_WF_MIB_TOP_MMCR_ADDR
#define BN0_WF_MIB_TOP_MMCR_MODE_MASK                          0x80000000                // MODE[31]
#define BN0_WF_MIB_TOP_MMCR_MODE_SHFT                          31
#define BN0_WF_MIB_TOP_MMCR_RESET_ADDR                         BN0_WF_MIB_TOP_MMCR_ADDR
#define BN0_WF_MIB_TOP_MMCR_RESET_MASK                         0x00000001                // RESET[0]
#define BN0_WF_MIB_TOP_MMCR_RESET_SHFT                         0

/* =====================================================================================

  ---BTOCR (0x820ED000 + 0x400)---

    TX_OK_COUNT2n[15..0]         - (RW) This counter is increased for an ACKed MPDU with an individual address in the address 1 field or an MPDU with a multicast address in the address 1 field I successfully transmitted.
                                     Total set = # of BSSID+MBSSID
                                     (unit : MPDU)
    TX_OK_COUNT2np1[31..16]      - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BTOCR_TX_OK_COUNT2np1_ADDR              BN0_WF_MIB_TOP_BTOCR_ADDR
#define BN0_WF_MIB_TOP_BTOCR_TX_OK_COUNT2np1_MASK              0xFFFF0000                // TX_OK_COUNT2np1[31..16]
#define BN0_WF_MIB_TOP_BTOCR_TX_OK_COUNT2np1_SHFT              16
#define BN0_WF_MIB_TOP_BTOCR_TX_OK_COUNT2n_ADDR                BN0_WF_MIB_TOP_BTOCR_ADDR
#define BN0_WF_MIB_TOP_BTOCR_TX_OK_COUNT2n_MASK                0x0000FFFF                // TX_OK_COUNT2n[15..0]
#define BN0_WF_MIB_TOP_BTOCR_TX_OK_COUNT2n_SHFT                0

/* =====================================================================================

  ---BTBCR (0x820ED000 + 0x428)---

    TX_BYTE_COUNTn[31..0]        - (RW) This counter is increased for each successfully transmitted MPDU (802.11 payload).
                                     Total set = # of BSSID+MBSSID
                                     (unit : byte)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BTBCR_TX_BYTE_COUNTn_ADDR               BN0_WF_MIB_TOP_BTBCR_ADDR
#define BN0_WF_MIB_TOP_BTBCR_TX_BYTE_COUNTn_MASK               0xFFFFFFFF                // TX_BYTE_COUNTn[31..0]
#define BN0_WF_MIB_TOP_BTBCR_TX_BYTE_COUNTn_SHFT               0

/* =====================================================================================

  ---BTMRCR (0x820ED000 + 0x478)---

    TX_MGNT_RETRY_COUNT2n[15..0] - (RW) This counter is increased for each retry of management frame after one or more retransmissions (count only 1 time)
                                     Total set = # of BSSID+MBSSID
                                     (unit : MPDU)
    TX_MGNT_RETRY_COUNT2np1[31..16] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BTMRCR_TX_MGNT_RETRY_COUNT2np1_ADDR     BN0_WF_MIB_TOP_BTMRCR_ADDR
#define BN0_WF_MIB_TOP_BTMRCR_TX_MGNT_RETRY_COUNT2np1_MASK     0xFFFF0000                // TX_MGNT_RETRY_COUNT2np1[31..16]
#define BN0_WF_MIB_TOP_BTMRCR_TX_MGNT_RETRY_COUNT2np1_SHFT     16
#define BN0_WF_MIB_TOP_BTMRCR_TX_MGNT_RETRY_COUNT2n_ADDR       BN0_WF_MIB_TOP_BTMRCR_ADDR
#define BN0_WF_MIB_TOP_BTMRCR_TX_MGNT_RETRY_COUNT2n_MASK       0x0000FFFF                // TX_MGNT_RETRY_COUNT2n[15..0]
#define BN0_WF_MIB_TOP_BTMRCR_TX_MGNT_RETRY_COUNT2n_SHFT       0

/* =====================================================================================

  ---BTDRCR (0x820ED000 + 0x4A0)---

    TX_DATA_RETRY_COUNT2n[15..0] - (RW) This counter is increased for each retry of data frame after one or more retransmissions (count only 1 time)
                                     Total set = # of BSSID+MBSSID
                                     (unit : MPDU)
    TX_DATA_RETRY_COUNT2np1[31..16] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BTDRCR_TX_DATA_RETRY_COUNT2np1_ADDR     BN0_WF_MIB_TOP_BTDRCR_ADDR
#define BN0_WF_MIB_TOP_BTDRCR_TX_DATA_RETRY_COUNT2np1_MASK     0xFFFF0000                // TX_DATA_RETRY_COUNT2np1[31..16]
#define BN0_WF_MIB_TOP_BTDRCR_TX_DATA_RETRY_COUNT2np1_SHFT     16
#define BN0_WF_MIB_TOP_BTDRCR_TX_DATA_RETRY_COUNT2n_ADDR       BN0_WF_MIB_TOP_BTDRCR_ADDR
#define BN0_WF_MIB_TOP_BTDRCR_TX_DATA_RETRY_COUNT2n_MASK       0x0000FFFF                // TX_DATA_RETRY_COUNT2n[15..0]
#define BN0_WF_MIB_TOP_BTDRCR_TX_DATA_RETRY_COUNT2n_SHFT       0

/* =====================================================================================

  ---BTCCR (0x820ED000 + 0x4C8)---

    TX_CTRL_COUNT2n[15..0]       - (RW) This counter is increased for each successfully transmitted control frame (HW generates only)
                                     Total set = # of BSSID+MBSSID
                                     (unit : MPDU)
    TX_CTRL_COUNT2np1[31..16]    - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BTCCR_TX_CTRL_COUNT2np1_ADDR            BN0_WF_MIB_TOP_BTCCR_ADDR
#define BN0_WF_MIB_TOP_BTCCR_TX_CTRL_COUNT2np1_MASK            0xFFFF0000                // TX_CTRL_COUNT2np1[31..16]
#define BN0_WF_MIB_TOP_BTCCR_TX_CTRL_COUNT2np1_SHFT            16
#define BN0_WF_MIB_TOP_BTCCR_TX_CTRL_COUNT2n_ADDR              BN0_WF_MIB_TOP_BTCCR_ADDR
#define BN0_WF_MIB_TOP_BTCCR_TX_CTRL_COUNT2n_MASK              0x0000FFFF                // TX_CTRL_COUNT2n[15..0]
#define BN0_WF_MIB_TOP_BTCCR_TX_CTRL_COUNT2n_SHFT              0

/* =====================================================================================

  ---BTDCR (0x820ED000 + 0x4F0)---

    TX_DATA_COUNT2n[15..0]       - (RW) This counter is increased for an ACKed MPDU with an individual address in the address 1 field or an MPDU with a multicast address in the address 1 field I successfully transmitted (do not include MMPDU/NULL frame).
                                     Total set = # of BSSID
                                     (unit : MPDU)
    TX_DATA_COUNT2np1[31..16]    - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BTDCR_TX_DATA_COUNT2np1_ADDR            BN0_WF_MIB_TOP_BTDCR_ADDR
#define BN0_WF_MIB_TOP_BTDCR_TX_DATA_COUNT2np1_MASK            0xFFFF0000                // TX_DATA_COUNT2np1[31..16]
#define BN0_WF_MIB_TOP_BTDCR_TX_DATA_COUNT2np1_SHFT            16
#define BN0_WF_MIB_TOP_BTDCR_TX_DATA_COUNT2n_ADDR              BN0_WF_MIB_TOP_BTDCR_ADDR
#define BN0_WF_MIB_TOP_BTDCR_TX_DATA_COUNT2n_MASK              0x0000FFFF                // TX_DATA_COUNT2n[15..0]
#define BN0_WF_MIB_TOP_BTDCR_TX_DATA_COUNT2n_SHFT              0

/* =====================================================================================

  ---BTCR (0x820ED000 + 0x4F8)---

    TX_COUNT2n[15..0]            - (RW) This counter is increased for each successfully transmitted frame.
                                     Total set = # of BSSID
                                     (unit : MPDU)
    TX_COUNT2np1[31..16]         - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BTCR_TX_COUNT2np1_ADDR                  BN0_WF_MIB_TOP_BTCR_ADDR
#define BN0_WF_MIB_TOP_BTCR_TX_COUNT2np1_MASK                  0xFFFF0000                // TX_COUNT2np1[31..16]
#define BN0_WF_MIB_TOP_BTCR_TX_COUNT2np1_SHFT                  16
#define BN0_WF_MIB_TOP_BTCR_TX_COUNT2n_ADDR                    BN0_WF_MIB_TOP_BTCR_ADDR
#define BN0_WF_MIB_TOP_BTCR_TX_COUNT2n_MASK                    0x0000FFFF                // TX_COUNT2n[15..0]
#define BN0_WF_MIB_TOP_BTCR_TX_COUNT2n_SHFT                    0

/* =====================================================================================

  ---BTFCR (0x820ED000 + 0x500)---

    TX_FAIL_COUNT2n[15..0]       - (RW) This counter is increased for each transmitted frame failed to get a ACK
                                     Total set = # of BSSID
                                     (unit : MPDU)
    TX_FAIL_COUNT2np1[31..16]    - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BTFCR_TX_FAIL_COUNT2np1_ADDR            BN0_WF_MIB_TOP_BTFCR_ADDR
#define BN0_WF_MIB_TOP_BTFCR_TX_FAIL_COUNT2np1_MASK            0xFFFF0000                // TX_FAIL_COUNT2np1[31..16]
#define BN0_WF_MIB_TOP_BTFCR_TX_FAIL_COUNT2np1_SHFT            16
#define BN0_WF_MIB_TOP_BTFCR_TX_FAIL_COUNT2n_ADDR              BN0_WF_MIB_TOP_BTFCR_ADDR
#define BN0_WF_MIB_TOP_BTFCR_TX_FAIL_COUNT2n_MASK              0x0000FFFF                // TX_FAIL_COUNT2n[15..0]
#define BN0_WF_MIB_TOP_BTFCR_TX_FAIL_COUNT2n_SHFT              0

/* =====================================================================================

  ---BFTCR (0x820ED000 + 0x508)---

    TX_COUNT2n[15..0]            - (RW) This counter is increased for each successfully transmitted frame (in FDD RW mode)
                                     Total set = # of BSSID
                                     (unit : MPDU)
    TX_COUNT2np1[31..16]         - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BFTCR_TX_COUNT2np1_ADDR                 BN0_WF_MIB_TOP_BFTCR_ADDR
#define BN0_WF_MIB_TOP_BFTCR_TX_COUNT2np1_MASK                 0xFFFF0000                // TX_COUNT2np1[31..16]
#define BN0_WF_MIB_TOP_BFTCR_TX_COUNT2np1_SHFT                 16
#define BN0_WF_MIB_TOP_BFTCR_TX_COUNT2n_ADDR                   BN0_WF_MIB_TOP_BFTCR_ADDR
#define BN0_WF_MIB_TOP_BFTCR_TX_COUNT2n_MASK                   0x0000FFFF                // TX_COUNT2n[15..0]
#define BN0_WF_MIB_TOP_BFTCR_TX_COUNT2n_SHFT                   0

/* =====================================================================================

  ---BFTFCR (0x820ED000 + 0x510)---

    TX_FAIL_COUNT2n[15..0]       - (RW) This counter is increased for each transmitted frame failed to get a ACK (in FDD RW mode)
                                     Total set = # of BSSID
                                     (unit : MPDU)
    TX_FAIL_COUNT2np1[31..16]    - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BFTFCR_TX_FAIL_COUNT2np1_ADDR           BN0_WF_MIB_TOP_BFTFCR_ADDR
#define BN0_WF_MIB_TOP_BFTFCR_TX_FAIL_COUNT2np1_MASK           0xFFFF0000                // TX_FAIL_COUNT2np1[31..16]
#define BN0_WF_MIB_TOP_BFTFCR_TX_FAIL_COUNT2np1_SHFT           16
#define BN0_WF_MIB_TOP_BFTFCR_TX_FAIL_COUNT2n_ADDR             BN0_WF_MIB_TOP_BFTFCR_ADDR
#define BN0_WF_MIB_TOP_BFTFCR_TX_FAIL_COUNT2n_MASK             0x0000FFFF                // TX_FAIL_COUNT2n[15..0]
#define BN0_WF_MIB_TOP_BFTFCR_TX_FAIL_COUNT2n_SHFT             0

/* =====================================================================================

  ---BSDR2 (0x820ED000 + 0x518)---

    BAMISSCOUNT2n[15..0]         - (RW) This counter is increased when the expected BA is not received in response to an Implicit BAR frame.
                                     Total set = # of BSSID
                                     (unit : PPDU)
    BAMISSCOUNT2np1[31..16]      - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BSDR2_BAMISSCOUNT2np1_ADDR              BN0_WF_MIB_TOP_BSDR2_ADDR
#define BN0_WF_MIB_TOP_BSDR2_BAMISSCOUNT2np1_MASK              0xFFFF0000                // BAMISSCOUNT2np1[31..16]
#define BN0_WF_MIB_TOP_BSDR2_BAMISSCOUNT2np1_SHFT              16
#define BN0_WF_MIB_TOP_BSDR2_BAMISSCOUNT2n_ADDR                BN0_WF_MIB_TOP_BSDR2_ADDR
#define BN0_WF_MIB_TOP_BSDR2_BAMISSCOUNT2n_MASK                0x0000FFFF                // BAMISSCOUNT2n[15..0]
#define BN0_WF_MIB_TOP_BSDR2_BAMISSCOUNT2n_SHFT                0

/* =====================================================================================

  ---BSDR3 (0x820ED000 + 0x520)---

    ACKFAILCOUNT2n[15..0]        - (RW) This counter is increased when an ACK or BA is not received when expected.
                                     Total set = # of BSSID
                                     (unit : PPDU)
    ACKFAILCOUNT2np1[31..16]     - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BSDR3_ACKFAILCOUNT2np1_ADDR             BN0_WF_MIB_TOP_BSDR3_ADDR
#define BN0_WF_MIB_TOP_BSDR3_ACKFAILCOUNT2np1_MASK             0xFFFF0000                // ACKFAILCOUNT2np1[31..16]
#define BN0_WF_MIB_TOP_BSDR3_ACKFAILCOUNT2np1_SHFT             16
#define BN0_WF_MIB_TOP_BSDR3_ACKFAILCOUNT2n_ADDR               BN0_WF_MIB_TOP_BSDR3_ADDR
#define BN0_WF_MIB_TOP_BSDR3_ACKFAILCOUNT2n_MASK               0x0000FFFF                // ACKFAILCOUNT2n[15..0]
#define BN0_WF_MIB_TOP_BSDR3_ACKFAILCOUNT2n_SHFT               0

/* =====================================================================================

  ---BSDR4 (0x820ED000 + 0x528)---

    FRAMERETRYCOUNT2n[15..0]     - (RW) This counter is increased when an MPDU is successfully transmitted after 1 or more retransmissions.
                                     Total set = # of BSSID
                                     (unit : MPDU)
    FRAMERETRYCOUNT2np1[31..16]  - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BSDR4_FRAMERETRYCOUNT2np1_ADDR          BN0_WF_MIB_TOP_BSDR4_ADDR
#define BN0_WF_MIB_TOP_BSDR4_FRAMERETRYCOUNT2np1_MASK          0xFFFF0000                // FRAMERETRYCOUNT2np1[31..16]
#define BN0_WF_MIB_TOP_BSDR4_FRAMERETRYCOUNT2np1_SHFT          16
#define BN0_WF_MIB_TOP_BSDR4_FRAMERETRYCOUNT2n_ADDR            BN0_WF_MIB_TOP_BSDR4_ADDR
#define BN0_WF_MIB_TOP_BSDR4_FRAMERETRYCOUNT2n_MASK            0x0000FFFF                // FRAMERETRYCOUNT2n[15..0]
#define BN0_WF_MIB_TOP_BSDR4_FRAMERETRYCOUNT2n_SHFT            0

/* =====================================================================================

  ---BSDR5 (0x820ED000 + 0x530)---

    FRAMERETRY2COUNT2n[15..0]    - (RW) This counter is increased when an MPDU is successfully transmitted after 2 or more retransmissions.
                                     Total set = # of BSSID
                                     (unit : MPDU)
    FRAMERETRY2COUNT2np1[31..16] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BSDR5_FRAMERETRY2COUNT2np1_ADDR         BN0_WF_MIB_TOP_BSDR5_ADDR
#define BN0_WF_MIB_TOP_BSDR5_FRAMERETRY2COUNT2np1_MASK         0xFFFF0000                // FRAMERETRY2COUNT2np1[31..16]
#define BN0_WF_MIB_TOP_BSDR5_FRAMERETRY2COUNT2np1_SHFT         16
#define BN0_WF_MIB_TOP_BSDR5_FRAMERETRY2COUNT2n_ADDR           BN0_WF_MIB_TOP_BSDR5_ADDR
#define BN0_WF_MIB_TOP_BSDR5_FRAMERETRY2COUNT2n_MASK           0x0000FFFF                // FRAMERETRY2COUNT2n[15..0]
#define BN0_WF_MIB_TOP_BSDR5_FRAMERETRY2COUNT2n_SHFT           0

/* =====================================================================================

  ---BSDR6 (0x820ED000 + 0x538)---

    FRAMERETRY3COUNT2n[15..0]    - (RW) This counter is increased when an MPDU is successfully transmitted after 3 or more retransmissions.
                                     Total set = # of BSSID
                                     (unit : MPDU)
    FRAMERETRY3COUNT2np1[31..16] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BSDR6_FRAMERETRY3COUNT2np1_ADDR         BN0_WF_MIB_TOP_BSDR6_ADDR
#define BN0_WF_MIB_TOP_BSDR6_FRAMERETRY3COUNT2np1_MASK         0xFFFF0000                // FRAMERETRY3COUNT2np1[31..16]
#define BN0_WF_MIB_TOP_BSDR6_FRAMERETRY3COUNT2np1_SHFT         16
#define BN0_WF_MIB_TOP_BSDR6_FRAMERETRY3COUNT2n_ADDR           BN0_WF_MIB_TOP_BSDR6_ADDR
#define BN0_WF_MIB_TOP_BSDR6_FRAMERETRY3COUNT2n_MASK           0x0000FFFF                // FRAMERETRY3COUNT2n[15..0]
#define BN0_WF_MIB_TOP_BSDR6_FRAMERETRY3COUNT2n_SHFT           0

/* =====================================================================================

  ---ATCR (0x820ED000 + 0x540)---

    TX_COUNT_AC2n[15..0]         - (RW) This counter is increased for each successfully transmitted frame
                                     Total set = # of AC
                                     (unit : MPDU)
    TX_COUNT_AC2np1[31..16]      - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_ATCR_TX_COUNT_AC2np1_ADDR               BN0_WF_MIB_TOP_ATCR_ADDR
#define BN0_WF_MIB_TOP_ATCR_TX_COUNT_AC2np1_MASK               0xFFFF0000                // TX_COUNT_AC2np1[31..16]
#define BN0_WF_MIB_TOP_ATCR_TX_COUNT_AC2np1_SHFT               16
#define BN0_WF_MIB_TOP_ATCR_TX_COUNT_AC2n_ADDR                 BN0_WF_MIB_TOP_ATCR_ADDR
#define BN0_WF_MIB_TOP_ATCR_TX_COUNT_AC2n_MASK                 0x0000FFFF                // TX_COUNT_AC2n[15..0]
#define BN0_WF_MIB_TOP_ATCR_TX_COUNT_AC2n_SHFT                 0

/* =====================================================================================

  ---ATRCR (0x820ED000 + 0x548)---

    TX_RETRY_COUNT_AC2n[15..0]   - (RW) This counter is increased for each retry of frame after retransmissions
                                     Total set = # of AC
                                     (unit : MPDU)
    TX_RETRY_COUNT_AC2np1[31..16] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_ATRCR_TX_RETRY_COUNT_AC2np1_ADDR        BN0_WF_MIB_TOP_ATRCR_ADDR
#define BN0_WF_MIB_TOP_ATRCR_TX_RETRY_COUNT_AC2np1_MASK        0xFFFF0000                // TX_RETRY_COUNT_AC2np1[31..16]
#define BN0_WF_MIB_TOP_ATRCR_TX_RETRY_COUNT_AC2np1_SHFT        16
#define BN0_WF_MIB_TOP_ATRCR_TX_RETRY_COUNT_AC2n_ADDR          BN0_WF_MIB_TOP_ATRCR_ADDR
#define BN0_WF_MIB_TOP_ATRCR_TX_RETRY_COUNT_AC2n_MASK          0x0000FFFF                // TX_RETRY_COUNT_AC2n[15..0]
#define BN0_WF_MIB_TOP_ATRCR_TX_RETRY_COUNT_AC2n_SHFT          0

/* =====================================================================================

  ---ATDCR (0x820ED000 + 0x550)---

    TX_DROP_COUNT_AC2n[15..0]    - (RW) This counter is increased for the dropped MPDU (count only 1 time)
                                     Total set = # of AC
                                     (unit : MPDU)
    TX_DROP_COUNT_AC2np1[31..16] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_ATDCR_TX_DROP_COUNT_AC2np1_ADDR         BN0_WF_MIB_TOP_ATDCR_ADDR
#define BN0_WF_MIB_TOP_ATDCR_TX_DROP_COUNT_AC2np1_MASK         0xFFFF0000                // TX_DROP_COUNT_AC2np1[31..16]
#define BN0_WF_MIB_TOP_ATDCR_TX_DROP_COUNT_AC2np1_SHFT         16
#define BN0_WF_MIB_TOP_ATDCR_TX_DROP_COUNT_AC2n_ADDR           BN0_WF_MIB_TOP_ATDCR_ADDR
#define BN0_WF_MIB_TOP_ATDCR_TX_DROP_COUNT_AC2n_MASK           0x0000FFFF                // TX_DROP_COUNT_AC2n[15..0]
#define BN0_WF_MIB_TOP_ATDCR_TX_DROP_COUNT_AC2n_SHFT           0

/* =====================================================================================

  ---M0SDR12 (0x820ED000 + 0x558)---

    AMPDU_COUNT[31..0]           - (RW) This counter is increased when transmitting A-MPDU
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR12_AMPDU_COUNT_ADDR                BN0_WF_MIB_TOP_M0SDR12_ADDR
#define BN0_WF_MIB_TOP_M0SDR12_AMPDU_COUNT_MASK                0xFFFFFFFF                // AMPDU_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0SDR12_AMPDU_COUNT_SHFT                0

/* =====================================================================================

  ---M0SDR31 (0x820ED000 + 0x55C)---

    BA_COUNT[31..0]              - (RW) This counter is increased when RX get the BA of A-MPDU occurs
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR31_BA_COUNT_ADDR                   BN0_WF_MIB_TOP_M0SDR31_ADDR
#define BN0_WF_MIB_TOP_M0SDR31_BA_COUNT_MASK                   0xFFFFFFFF                // BA_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0SDR31_BA_COUNT_SHFT                   0

/* =====================================================================================

  ---M0SDR13 (0x820ED000 + 0x560)---

    AMPDU_EARLYSTOP_COUNT[15..0] - (RW) This counter is increased when # of MPDU in A-MPDU is not aggregated to the BA window size.
                                     (unit : PPDU)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR13_AMPDU_EARLYSTOP_COUNT_ADDR      BN0_WF_MIB_TOP_M0SDR13_ADDR
#define BN0_WF_MIB_TOP_M0SDR13_AMPDU_EARLYSTOP_COUNT_MASK      0x0000FFFF                // AMPDU_EARLYSTOP_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR13_AMPDU_EARLYSTOP_COUNT_SHFT      0

/* =====================================================================================

  ---M0SDR14 (0x820ED000 + 0x564)---

    AMPDU_MPDU_COUNT[31..0]      - (RW) This counter counts all MPDUs in A-MPDU which is successfully transmitted
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR14_AMPDU_MPDU_COUNT_ADDR           BN0_WF_MIB_TOP_M0SDR14_ADDR
#define BN0_WF_MIB_TOP_M0SDR14_AMPDU_MPDU_COUNT_MASK           0xFFFFFFFF                // AMPDU_MPDU_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0SDR14_AMPDU_MPDU_COUNT_SHFT           0

/* =====================================================================================

  ---M0SDR15 (0x820ED000 + 0x568)---

    AMPDU_ACKED_COUNT[31..0]     - (RW) This counter counts all MPDUs in A-MPDU which is successfully transmitted and got a ACK
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR15_AMPDU_ACKED_COUNT_ADDR          BN0_WF_MIB_TOP_M0SDR15_ADDR
#define BN0_WF_MIB_TOP_M0SDR15_AMPDU_ACKED_COUNT_MASK          0xFFFFFFFF                // AMPDU_ACKED_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0SDR15_AMPDU_ACKED_COUNT_SHFT          0

/* =====================================================================================

  ---M0DR8 (0x820ED000 + 0x56C)---

    MU_TX_COUNT[31..0]           - (RW) This counter is increased for each successfully transmitted frame in MU mode
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0DR8_MU_TX_COUNT_ADDR                  BN0_WF_MIB_TOP_M0DR8_ADDR
#define BN0_WF_MIB_TOP_M0DR8_MU_TX_COUNT_MASK                  0xFFFFFFFF                // MU_TX_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0DR8_MU_TX_COUNT_SHFT                  0

/* =====================================================================================

  ---M0DR9 (0x820ED000 + 0x570)---

    MU_TX_OK_COUNT[31..0]        - (RW) This counter is increased for an ACKed MPDU with an individual address in the address 1 field or an MPDU with a multicast address in the address 1 field is successfully transmitted in MU mode
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0DR9_MU_TX_OK_COUNT_ADDR               BN0_WF_MIB_TOP_M0DR9_ADDR
#define BN0_WF_MIB_TOP_M0DR9_MU_TX_OK_COUNT_MASK               0xFFFFFFFF                // MU_TX_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0DR9_MU_TX_OK_COUNT_SHFT               0

/* =====================================================================================

  ---M0DR11 (0x820ED000 + 0x574)---

    SU_TX_OK_COUNT[31..0]        - (RW) This counter is increased for an ACKed MPDU with an individual address in the address 1 field or an MPDU with a multicast address in the address 1 field is successfully transmitted in SU mode
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0DR11_SU_TX_OK_COUNT_ADDR              BN0_WF_MIB_TOP_M0DR11_ADDR
#define BN0_WF_MIB_TOP_M0DR11_SU_TX_OK_COUNT_MASK              0xFFFFFFFF                // SU_TX_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0DR11_SU_TX_OK_COUNT_SHFT              0

/* =====================================================================================

  ---M0DR10 (0x820ED000 + 0x578)---

    MU_FAIL_PPDU_COUNT[15..0]    - (RW) This counter is increased for a PPDU which is target to perform MU but fails.
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0DR10_MU_FAIL_PPDU_COUNT_ADDR          BN0_WF_MIB_TOP_M0DR10_ADDR
#define BN0_WF_MIB_TOP_M0DR10_MU_FAIL_PPDU_COUNT_MASK          0x0000FFFF                // MU_FAIL_PPDU_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0DR10_MU_FAIL_PPDU_COUNT_SHFT          0

/* =====================================================================================

  ---SRC0 (0x820ED000 + 0x57C)---

    SR_AMPDU_MPDU_COUNT[31..0]   - (RW) This counter counts all MPDUs in A-MPDU which is successfully transmitted during Spatial Reuse window
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_SRC0_SR_AMPDU_MPDU_COUNT_ADDR           BN0_WF_MIB_TOP_SRC0_ADDR
#define BN0_WF_MIB_TOP_SRC0_SR_AMPDU_MPDU_COUNT_MASK           0xFFFFFFFF                // SR_AMPDU_MPDU_COUNT[31..0]
#define BN0_WF_MIB_TOP_SRC0_SR_AMPDU_MPDU_COUNT_SHFT           0

/* =====================================================================================

  ---SRC1 (0x820ED000 + 0x580)---

    SR_AMPDU_MPDU_ACKED_COUNT[31..0] - (RW) This counter counts all MPDUs in A-MPDU which is successfully transmitted and got a ACK during Spatial Reuse window
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_SRC1_SR_AMPDU_MPDU_ACKED_COUNT_ADDR     BN0_WF_MIB_TOP_SRC1_ADDR
#define BN0_WF_MIB_TOP_SRC1_SR_AMPDU_MPDU_ACKED_COUNT_MASK     0xFFFFFFFF                // SR_AMPDU_MPDU_ACKED_COUNT[31..0]
#define BN0_WF_MIB_TOP_SRC1_SR_AMPDU_MPDU_ACKED_COUNT_SHFT     0

/* =====================================================================================

  ---M0SDR50 (0x820ED000 + 0x590)---

    DBNSS_COUNT[15..0]           - (RW) This counter is increased when using double number of space stream
                                     (unit : PPDU)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR50_DBNSS_COUNT_ADDR                BN0_WF_MIB_TOP_M0SDR50_ADDR
#define BN0_WF_MIB_TOP_M0SDR50_DBNSS_COUNT_MASK                0x0000FFFF                // DBNSS_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR50_DBNSS_COUNT_SHFT                0

/* =====================================================================================

  ---M0DR0 (0x820ED000 + 0x594)---

    TX_20MHZ_CNT[15..0]          - (RW) This counter is increased when transmitting PPDU with 20 MHz bandwidth
                                     (unit : MPDU)
    TX_40MHZ_CNT[31..16]         - (RW) This counter is increased when transmitting PPDU with 40 MHz bandwidth
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0DR0_TX_40MHZ_CNT_ADDR                 BN0_WF_MIB_TOP_M0DR0_ADDR
#define BN0_WF_MIB_TOP_M0DR0_TX_40MHZ_CNT_MASK                 0xFFFF0000                // TX_40MHZ_CNT[31..16]
#define BN0_WF_MIB_TOP_M0DR0_TX_40MHZ_CNT_SHFT                 16
#define BN0_WF_MIB_TOP_M0DR0_TX_20MHZ_CNT_ADDR                 BN0_WF_MIB_TOP_M0DR0_ADDR
#define BN0_WF_MIB_TOP_M0DR0_TX_20MHZ_CNT_MASK                 0x0000FFFF                // TX_20MHZ_CNT[15..0]
#define BN0_WF_MIB_TOP_M0DR0_TX_20MHZ_CNT_SHFT                 0

/* =====================================================================================

  ---M0DR1 (0x820ED000 + 0x598)---

    TX_80MHZ_CNT[15..0]          - (RW) This counter is increased when transmitting PPDU with 80 MHz bandwidth
                                     (unit : MPDU)
    TX_160MHZ_CNT[31..16]        - (RW) This counter is increased when transmitting PPDU with 160 MHz bandwidth
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0DR1_TX_160MHZ_CNT_ADDR                BN0_WF_MIB_TOP_M0DR1_ADDR
#define BN0_WF_MIB_TOP_M0DR1_TX_160MHZ_CNT_MASK                0xFFFF0000                // TX_160MHZ_CNT[31..16]
#define BN0_WF_MIB_TOP_M0DR1_TX_160MHZ_CNT_SHFT                16
#define BN0_WF_MIB_TOP_M0DR1_TX_80MHZ_CNT_ADDR                 BN0_WF_MIB_TOP_M0DR1_ADDR
#define BN0_WF_MIB_TOP_M0DR1_TX_80MHZ_CNT_MASK                 0x0000FFFF                // TX_80MHZ_CNT[15..0]
#define BN0_WF_MIB_TOP_M0DR1_TX_80MHZ_CNT_SHFT                 0

/* =====================================================================================

  ---M0SDR56 (0x820ED000 + 0x59C)---

    COANT_HW_FB_TX_DIM_COUNT[15..0] - (RW) Co-ANT HW fallback TX dimension counter
                                     (unit : PPDU)
    COANT_BF_SEQ_DROP_COUNT[31..16] - (RW) Co-ANT BF seq drop counter
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR56_COANT_BF_SEQ_DROP_COUNT_ADDR    BN0_WF_MIB_TOP_M0SDR56_ADDR
#define BN0_WF_MIB_TOP_M0SDR56_COANT_BF_SEQ_DROP_COUNT_MASK    0xFFFF0000                // COANT_BF_SEQ_DROP_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0SDR56_COANT_BF_SEQ_DROP_COUNT_SHFT    16
#define BN0_WF_MIB_TOP_M0SDR56_COANT_HW_FB_TX_DIM_COUNT_ADDR   BN0_WF_MIB_TOP_M0SDR56_ADDR
#define BN0_WF_MIB_TOP_M0SDR56_COANT_HW_FB_TX_DIM_COUNT_MASK   0x0000FFFF                // COANT_HW_FB_TX_DIM_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR56_COANT_HW_FB_TX_DIM_COUNT_SHFT   0

/* =====================================================================================

  ---M0DROPSR00 (0x820ED000 + 0x5A0)---

    RTS_DROP_COUNT[15..0]        - (RW) This counter is increased when the RTS Retry limit is reached
                                     (unit : MPDU or PPDU, which is selected by AGG.ACR6.RTS_FAIL_DROP_MODE)
    MPDU_RETRY_DROP_COUNT[31..16] - (RW) This counter is increased when the MPDU Retry limit is reached
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0DROPSR00_MPDU_RETRY_DROP_COUNT_ADDR   BN0_WF_MIB_TOP_M0DROPSR00_ADDR
#define BN0_WF_MIB_TOP_M0DROPSR00_MPDU_RETRY_DROP_COUNT_MASK   0xFFFF0000                // MPDU_RETRY_DROP_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0DROPSR00_MPDU_RETRY_DROP_COUNT_SHFT   16
#define BN0_WF_MIB_TOP_M0DROPSR00_RTS_DROP_COUNT_ADDR          BN0_WF_MIB_TOP_M0DROPSR00_ADDR
#define BN0_WF_MIB_TOP_M0DROPSR00_RTS_DROP_COUNT_MASK          0x0000FFFF                // RTS_DROP_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0DROPSR00_RTS_DROP_COUNT_SHFT          0

/* =====================================================================================

  ---M0DROPSR01 (0x820ED000 + 0x5A4)---

    LTO_DROP_COUNT[15..0]        - (RW) This counter is increased when the Life Time Out limit is reached
                                     (unit : MPDU)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0DROPSR01_LTO_DROP_COUNT_ADDR          BN0_WF_MIB_TOP_M0DROPSR01_ADDR
#define BN0_WF_MIB_TOP_M0DROPSR01_LTO_DROP_COUNT_MASK          0x0000FFFF                // LTO_DROP_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0DROPSR01_LTO_DROP_COUNT_SHFT          0

/* =====================================================================================

  ---M0SDR7 (0x820ED000 + 0x5A8)---

    VEC_MISS_COUNT[15..0]        - (RW) This counter is increased when RX queue and vector queue mismatch.
                                     (unit : PPDU)
    VEC_DROP_COUNT[31..16]       - (RW) This counter is increased when a vector was dropped by vector queue overflow.
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR7_VEC_DROP_COUNT_ADDR              BN0_WF_MIB_TOP_M0SDR7_ADDR
#define BN0_WF_MIB_TOP_M0SDR7_VEC_DROP_COUNT_MASK              0xFFFF0000                // VEC_DROP_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0SDR7_VEC_DROP_COUNT_SHFT              16
#define BN0_WF_MIB_TOP_M0SDR7_VEC_MISS_COUNT_ADDR              BN0_WF_MIB_TOP_M0SDR7_ADDR
#define BN0_WF_MIB_TOP_M0SDR7_VEC_MISS_COUNT_MASK              0x0000FFFF                // VEC_MISS_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR7_VEC_MISS_COUNT_SHFT              0

/* =====================================================================================

  ---M0SDR19 (0x820ED000 + 0x5AC)---

    CCK_MDRDY_TIME[23..0]        - (RW) This counter is started on CCK mode when MDRDY is active and stopped on falling edge of MDRDY, used for Measurement. This counter is saturated mode.
                                     Enable when OFDM_CCK_MDRDY_TIME_EN = target BSS
                                     (unit: 1.024us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR19_CCK_MDRDY_TIME_ADDR             BN0_WF_MIB_TOP_M0SDR19_ADDR
#define BN0_WF_MIB_TOP_M0SDR19_CCK_MDRDY_TIME_MASK             0x00FFFFFF                // CCK_MDRDY_TIME[23..0]
#define BN0_WF_MIB_TOP_M0SDR19_CCK_MDRDY_TIME_SHFT             0

/* =====================================================================================

  ---M0SDR20 (0x820ED000 + 0x5B0)---

    OFDM_LG_MIXED_VHT_MDRDY_TIME[23..0] - (RW) This counter is started on OFDM mode(non-GREEN) when MDRDY is active and stopped on falling edge of MDRDY, used for Measurement. This counter is saturated mode.
                                     Enable when OFDM_CCK_MDRDY_TIME_EN = target BSS
                                     The tagrget modulcation is selected by OFDM_NON_GREEN_MDRDY_SOURCE, and the LG_OFDM and HT_MIXED is counted which cannot be turned off
                                     (unit: 1.024us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR20_OFDM_LG_MIXED_VHT_MDRDY_TIME_ADDR BN0_WF_MIB_TOP_M0SDR20_ADDR
#define BN0_WF_MIB_TOP_M0SDR20_OFDM_LG_MIXED_VHT_MDRDY_TIME_MASK 0x00FFFFFF                // OFDM_LG_MIXED_VHT_MDRDY_TIME[23..0]
#define BN0_WF_MIB_TOP_M0SDR20_OFDM_LG_MIXED_VHT_MDRDY_TIME_SHFT 0

/* =====================================================================================

  ---M0SDR21 (0x820ED000 + 0x5B4)---

    OFDM_GREEN_MDRDY_TIME[23..0] - (RW) This counter is started on OFDM GREEN mode when MDRDY is active and stopped on falling edge of MDRDY, used for Measurement. This counter is saturated mode.
                                     Enable when OFDM_CCK_MDRDY_TIME_EN = target BSS
                                     (unit: 1.024us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR21_OFDM_GREEN_MDRDY_TIME_ADDR      BN0_WF_MIB_TOP_M0SDR21_ADDR
#define BN0_WF_MIB_TOP_M0SDR21_OFDM_GREEN_MDRDY_TIME_MASK      0x00FFFFFF                // OFDM_GREEN_MDRDY_TIME[23..0]
#define BN0_WF_MIB_TOP_M0SDR21_OFDM_GREEN_MDRDY_TIME_SHFT      0

/* =====================================================================================

  ---BROCR (0x820ED000 + 0x5B8)---

    RX_OK_COUNT2n[15..0]         - (RW) This counter is increased for each successfully received MPDU (FCS pass+RX filter pass+security pass).
                                     Total set = # of BSSID+MBSSID
                                     (unit : MPDU)
    RX_OK_COUNT2np1[31..16]      - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BROCR_RX_OK_COUNT2np1_ADDR              BN0_WF_MIB_TOP_BROCR_ADDR
#define BN0_WF_MIB_TOP_BROCR_RX_OK_COUNT2np1_MASK              0xFFFF0000                // RX_OK_COUNT2np1[31..16]
#define BN0_WF_MIB_TOP_BROCR_RX_OK_COUNT2np1_SHFT              16
#define BN0_WF_MIB_TOP_BROCR_RX_OK_COUNT2n_ADDR                BN0_WF_MIB_TOP_BROCR_ADDR
#define BN0_WF_MIB_TOP_BROCR_RX_OK_COUNT2n_MASK                0x0000FFFF                // RX_OK_COUNT2n[15..0]
#define BN0_WF_MIB_TOP_BROCR_RX_OK_COUNT2n_SHFT                0

/* =====================================================================================

  ---BRBCR (0x820ED000 + 0x5E0)---

    RX_BYTE_COUNTn[31..0]        - (RW) This counter is increased for each successfully received MPDU (payload) (FCS pass+RX filter pass+security pass).
                                     Total set = # of BSSID+MBSSID
                                     (unit : byte)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BRBCR_RX_BYTE_COUNTn_ADDR               BN0_WF_MIB_TOP_BRBCR_ADDR
#define BN0_WF_MIB_TOP_BRBCR_RX_BYTE_COUNTn_MASK               0xFFFFFFFF                // RX_BYTE_COUNTn[31..0]
#define BN0_WF_MIB_TOP_BRBCR_RX_BYTE_COUNTn_SHFT               0

/* =====================================================================================

  ---BRDCR (0x820ED000 + 0x630)---

    RX_DATA_COUNT2n[15..0]       - (RW) This counter is increased when an MSDU is successfully received (not including MMPDU/NULL frame).
                                     Total set = # of BSSID
                                     (unit : MPDU)
    RX_DATA_COUNT2np1[31..16]    - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BRDCR_RX_DATA_COUNT2np1_ADDR            BN0_WF_MIB_TOP_BRDCR_ADDR
#define BN0_WF_MIB_TOP_BRDCR_RX_DATA_COUNT2np1_MASK            0xFFFF0000                // RX_DATA_COUNT2np1[31..16]
#define BN0_WF_MIB_TOP_BRDCR_RX_DATA_COUNT2np1_SHFT            16
#define BN0_WF_MIB_TOP_BRDCR_RX_DATA_COUNT2n_ADDR              BN0_WF_MIB_TOP_BRDCR_ADDR
#define BN0_WF_MIB_TOP_BRDCR_RX_DATA_COUNT2n_MASK              0x0000FFFF                // RX_DATA_COUNT2n[15..0]
#define BN0_WF_MIB_TOP_BRDCR_RX_DATA_COUNT2n_SHFT              0

/* =====================================================================================

  ---BRMCR (0x820ED000 + 0x638)---

    RX_MSDU_COUNT2n[15..0]       - (RW) This counter is increased for each successfully received MSDU
                                     Total set = # of BSSID
                                     (unit : MSDU)
    RX_MSDU_COUNT2np1[31..16]    - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BRMCR_RX_MSDU_COUNT2np1_ADDR            BN0_WF_MIB_TOP_BRMCR_ADDR
#define BN0_WF_MIB_TOP_BRMCR_RX_MSDU_COUNT2np1_MASK            0xFFFF0000                // RX_MSDU_COUNT2np1[31..16]
#define BN0_WF_MIB_TOP_BRMCR_RX_MSDU_COUNT2np1_SHFT            16
#define BN0_WF_MIB_TOP_BRMCR_RX_MSDU_COUNT2n_ADDR              BN0_WF_MIB_TOP_BRMCR_ADDR
#define BN0_WF_MIB_TOP_BRMCR_RX_MSDU_COUNT2n_MASK              0x0000FFFF                // RX_MSDU_COUNT2n[15..0]
#define BN0_WF_MIB_TOP_BRMCR_RX_MSDU_COUNT2n_SHFT              0

/* =====================================================================================

  ---BPFCR (0x820ED000 + 0x640)---

    PF_DROP_COUNT2n[15..0]       - (RW) This counter is increased when a packet was dropped by pattern filter condition.
                                     Total set = # of BSSID
                                     (unit : MPDU)
    PF_DROP_COUNT2np1[31..16]    - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BPFCR_PF_DROP_COUNT2np1_ADDR            BN0_WF_MIB_TOP_BPFCR_ADDR
#define BN0_WF_MIB_TOP_BPFCR_PF_DROP_COUNT2np1_MASK            0xFFFF0000                // PF_DROP_COUNT2np1[31..16]
#define BN0_WF_MIB_TOP_BPFCR_PF_DROP_COUNT2np1_SHFT            16
#define BN0_WF_MIB_TOP_BPFCR_PF_DROP_COUNT2n_ADDR              BN0_WF_MIB_TOP_BPFCR_ADDR
#define BN0_WF_MIB_TOP_BPFCR_PF_DROP_COUNT2n_MASK              0x0000FFFF                // PF_DROP_COUNT2n[15..0]
#define BN0_WF_MIB_TOP_BPFCR_PF_DROP_COUNT2n_SHFT              0

/* =====================================================================================

  ---ARCR (0x820ED000 + 0x648)---

    RX_COUNT_AC2n[15..0]         - (RW) This counter is increased for each successfully received MPDU (FCS pass+RX filter pass+security pass).
                                     Total set = # of AC
                                     (unit : MPDU)
    RX_COUNT_AC2np1[31..16]      - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_ARCR_RX_COUNT_AC2np1_ADDR               BN0_WF_MIB_TOP_ARCR_ADDR
#define BN0_WF_MIB_TOP_ARCR_RX_COUNT_AC2np1_MASK               0xFFFF0000                // RX_COUNT_AC2np1[31..16]
#define BN0_WF_MIB_TOP_ARCR_RX_COUNT_AC2np1_SHFT               16
#define BN0_WF_MIB_TOP_ARCR_RX_COUNT_AC2n_ADDR                 BN0_WF_MIB_TOP_ARCR_ADDR
#define BN0_WF_MIB_TOP_ARCR_RX_COUNT_AC2n_MASK                 0x0000FFFF                // RX_COUNT_AC2n[15..0]
#define BN0_WF_MIB_TOP_ARCR_RX_COUNT_AC2n_SHFT                 0

/* =====================================================================================

  ---M0SDR29 (0x820ED000 + 0x650)---

    PF_DROP_COUNT[15..0]         - (RW) This counter is increased when a packet was dropped by pattern filter condition.
                                     (unit : MPDU)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR29_PF_DROP_COUNT_ADDR              BN0_WF_MIB_TOP_M0SDR29_ADDR
#define BN0_WF_MIB_TOP_M0SDR29_PF_DROP_COUNT_MASK              0x0000FFFF                // PF_DROP_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR29_PF_DROP_COUNT_SHFT              0

/* =====================================================================================

  ---M0DR12 (0x820ED000 + 0x654)---

    TX_DDLMT_RNG0_COUNT[15..0]   - (RW) Separate reference time (in unit of us) to 5 ranges to count dummy delimiter insertion result
                                     range0: count = 0 ref. time
                                     (unit : PPDU)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0DR12_TX_DDLMT_RNG0_COUNT_ADDR         BN0_WF_MIB_TOP_M0DR12_ADDR
#define BN0_WF_MIB_TOP_M0DR12_TX_DDLMT_RNG0_COUNT_MASK         0x0000FFFF                // TX_DDLMT_RNG0_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0DR12_TX_DDLMT_RNG0_COUNT_SHFT         0

/* =====================================================================================

  ---M0DR6 (0x820ED000 + 0x658)---

    TX_DDLMT_RNG1_COUNT[15..0]   - (RW) Separate reference time (in unit of us) to 5 ranges to count dummy delimiter insertion result
                                     range1: 0 < count < 1/4 ref. time
                                     (unit : PPDU)
    TX_DDLMT_RNG2_COUNT[31..16]  - (RW) Separate reference time (in unit of us) to 5 ranges to count dummy delimiter insertion result
                                     range2: 1/4 <= count < 1/2 ref. time
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0DR6_TX_DDLMT_RNG2_COUNT_ADDR          BN0_WF_MIB_TOP_M0DR6_ADDR
#define BN0_WF_MIB_TOP_M0DR6_TX_DDLMT_RNG2_COUNT_MASK          0xFFFF0000                // TX_DDLMT_RNG2_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0DR6_TX_DDLMT_RNG2_COUNT_SHFT          16
#define BN0_WF_MIB_TOP_M0DR6_TX_DDLMT_RNG1_COUNT_ADDR          BN0_WF_MIB_TOP_M0DR6_ADDR
#define BN0_WF_MIB_TOP_M0DR6_TX_DDLMT_RNG1_COUNT_MASK          0x0000FFFF                // TX_DDLMT_RNG1_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0DR6_TX_DDLMT_RNG1_COUNT_SHFT          0

/* =====================================================================================

  ---M0DR7 (0x820ED000 + 0x65C)---

    TX_DDLMT_RNG3_COUNT[15..0]   - (RW) Separate reference time (in unit of us) to 5 ranges to count dummy delimiter insertion result
                                     range3: 1/2 <= count < 3/4 ref. time
                                     (unit : PPDU)
    TX_DDLMT_RNG4_COUNT[31..16]  - (RW) Separate reference time (in unit of us) to 5 ranges to count dummy delimiter insertion result
                                     range4: 3/4 <= count < 1 ref. time
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0DR7_TX_DDLMT_RNG4_COUNT_ADDR          BN0_WF_MIB_TOP_M0DR7_ADDR
#define BN0_WF_MIB_TOP_M0DR7_TX_DDLMT_RNG4_COUNT_MASK          0xFFFF0000                // TX_DDLMT_RNG4_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0DR7_TX_DDLMT_RNG4_COUNT_SHFT          16
#define BN0_WF_MIB_TOP_M0DR7_TX_DDLMT_RNG3_COUNT_ADDR          BN0_WF_MIB_TOP_M0DR7_ADDR
#define BN0_WF_MIB_TOP_M0DR7_TX_DDLMT_RNG3_COUNT_MASK          0x0000FFFF                // TX_DDLMT_RNG3_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0DR7_TX_DDLMT_RNG3_COUNT_SHFT          0

/* =====================================================================================

  ---RUTCR (0x820ED000 + 0x660)---

    RU_TX_COUNT2n[15..0]         - (RW) Per RU TX counter, this counter is increased when transmitting with HE_TB_MODE & BW <= 40MHz
                                     Total set = # of RU
                                     (unit : PPDU)
    RU_TX_COUNT2np1[31..16]      - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RUTCR_RU_TX_COUNT2np1_ADDR              BN0_WF_MIB_TOP_RUTCR_ADDR
#define BN0_WF_MIB_TOP_RUTCR_RU_TX_COUNT2np1_MASK              0xFFFF0000                // RU_TX_COUNT2np1[31..16]
#define BN0_WF_MIB_TOP_RUTCR_RU_TX_COUNT2np1_SHFT              16
#define BN0_WF_MIB_TOP_RUTCR_RU_TX_COUNT2n_ADDR                BN0_WF_MIB_TOP_RUTCR_ADDR
#define BN0_WF_MIB_TOP_RUTCR_RU_TX_COUNT2n_MASK                0x0000FFFF                // RU_TX_COUNT2n[15..0]
#define BN0_WF_MIB_TOP_RUTCR_RU_TX_COUNT2n_SHFT                0

/* =====================================================================================

  ---TCSR0 (0x820ED000 + 0x674)---

    HW_BASIC_TRIG_COUNT[15..0]   - (RW) HW Basic Trigger Frame Counter
                                     (unit : MPDU)
    SW_BASIC_TRIG_COUNT[31..16]  - (RW) SW Basic Trigger Frame Counter
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TCSR0_SW_BASIC_TRIG_COUNT_ADDR          BN0_WF_MIB_TOP_TCSR0_ADDR
#define BN0_WF_MIB_TOP_TCSR0_SW_BASIC_TRIG_COUNT_MASK          0xFFFF0000                // SW_BASIC_TRIG_COUNT[31..16]
#define BN0_WF_MIB_TOP_TCSR0_SW_BASIC_TRIG_COUNT_SHFT          16
#define BN0_WF_MIB_TOP_TCSR0_HW_BASIC_TRIG_COUNT_ADDR          BN0_WF_MIB_TOP_TCSR0_ADDR
#define BN0_WF_MIB_TOP_TCSR0_HW_BASIC_TRIG_COUNT_MASK          0x0000FFFF                // HW_BASIC_TRIG_COUNT[15..0]
#define BN0_WF_MIB_TOP_TCSR0_HW_BASIC_TRIG_COUNT_SHFT          0

/* =====================================================================================

  ---TCSR1 (0x820ED000 + 0x678)---

    SW_BRP_TRIG_COUNT[15..0]     - (RW) SW Beamforming Report Poll Trigger Frame Counter
                                     (unit : MPDU)
    HW_MUBAR_TRIG_COUNT[31..16]  - (RW) HW MU BAR Trigger Frame Counter
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TCSR1_HW_MUBAR_TRIG_COUNT_ADDR          BN0_WF_MIB_TOP_TCSR1_ADDR
#define BN0_WF_MIB_TOP_TCSR1_HW_MUBAR_TRIG_COUNT_MASK          0xFFFF0000                // HW_MUBAR_TRIG_COUNT[31..16]
#define BN0_WF_MIB_TOP_TCSR1_HW_MUBAR_TRIG_COUNT_SHFT          16
#define BN0_WF_MIB_TOP_TCSR1_SW_BRP_TRIG_COUNT_ADDR            BN0_WF_MIB_TOP_TCSR1_ADDR
#define BN0_WF_MIB_TOP_TCSR1_SW_BRP_TRIG_COUNT_MASK            0x0000FFFF                // SW_BRP_TRIG_COUNT[15..0]
#define BN0_WF_MIB_TOP_TCSR1_SW_BRP_TRIG_COUNT_SHFT            0

/* =====================================================================================

  ---TCSR2 (0x820ED000 + 0x67C)---

    HW_MURTS_TRIG_COUNT[15..0]   - (RW) HW MU RTS Trigger Frame Counter
                                     (unit : MPDU)
    SW_BSRP_TRIG_COUNT[31..16]   - (RW) SW Buffer Status Report Poll Trigger Frame Counter
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TCSR2_SW_BSRP_TRIG_COUNT_ADDR           BN0_WF_MIB_TOP_TCSR2_ADDR
#define BN0_WF_MIB_TOP_TCSR2_SW_BSRP_TRIG_COUNT_MASK           0xFFFF0000                // SW_BSRP_TRIG_COUNT[31..16]
#define BN0_WF_MIB_TOP_TCSR2_SW_BSRP_TRIG_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_TCSR2_HW_MURTS_TRIG_COUNT_ADDR          BN0_WF_MIB_TOP_TCSR2_ADDR
#define BN0_WF_MIB_TOP_TCSR2_HW_MURTS_TRIG_COUNT_MASK          0x0000FFFF                // HW_MURTS_TRIG_COUNT[15..0]
#define BN0_WF_MIB_TOP_TCSR2_HW_MURTS_TRIG_COUNT_SHFT          0

/* =====================================================================================

  ---TCSR3 (0x820ED000 + 0x680)---

    SW_GCRMUBAR_TRIG_COUNT[15..0] - (RW) SW GCR MU BAR Trigger Frame Counter
                                     (unit : MPDU)
    SW_BQRP_TRIG_COUNT[31..16]   - (RW) SW Bandwidth Query Report Poll Trigger Frame Counter
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TCSR3_SW_BQRP_TRIG_COUNT_ADDR           BN0_WF_MIB_TOP_TCSR3_ADDR
#define BN0_WF_MIB_TOP_TCSR3_SW_BQRP_TRIG_COUNT_MASK           0xFFFF0000                // SW_BQRP_TRIG_COUNT[31..16]
#define BN0_WF_MIB_TOP_TCSR3_SW_BQRP_TRIG_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_TCSR3_SW_GCRMUBAR_TRIG_COUNT_ADDR       BN0_WF_MIB_TOP_TCSR3_ADDR
#define BN0_WF_MIB_TOP_TCSR3_SW_GCRMUBAR_TRIG_COUNT_MASK       0x0000FFFF                // SW_GCRMUBAR_TRIG_COUNT[15..0]
#define BN0_WF_MIB_TOP_TCSR3_SW_GCRMUBAR_TRIG_COUNT_SHFT       0

/* =====================================================================================

  ---TCSR4 (0x820ED000 + 0x684)---

    SW_NDPFRP_TRIG_COUNT[15..0]  - (RW) SW NDP Feedback Report Poll Trigger Frame Counter
                                     (unit : MPDU)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TCSR4_SW_NDPFRP_TRIG_COUNT_ADDR         BN0_WF_MIB_TOP_TCSR4_ADDR
#define BN0_WF_MIB_TOP_TCSR4_SW_NDPFRP_TRIG_COUNT_MASK         0x0000FFFF                // SW_NDPFRP_TRIG_COUNT[15..0]
#define BN0_WF_MIB_TOP_TCSR4_SW_NDPFRP_TRIG_COUNT_SHFT         0

/* =====================================================================================

  ---BSDR0 (0x820ED000 + 0x688)---

    RTSTXCOUNT2n[15..0]          - (RW) This counter is increased when RTS is successfully transmitted
                                     Total set = # of BSSID
                                     (unit : MPDU)
    RTSTXCOUNT2np1[31..16]       - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BSDR0_RTSTXCOUNT2np1_ADDR               BN0_WF_MIB_TOP_BSDR0_ADDR
#define BN0_WF_MIB_TOP_BSDR0_RTSTXCOUNT2np1_MASK               0xFFFF0000                // RTSTXCOUNT2np1[31..16]
#define BN0_WF_MIB_TOP_BSDR0_RTSTXCOUNT2np1_SHFT               16
#define BN0_WF_MIB_TOP_BSDR0_RTSTXCOUNT2n_ADDR                 BN0_WF_MIB_TOP_BSDR0_ADDR
#define BN0_WF_MIB_TOP_BSDR0_RTSTXCOUNT2n_MASK                 0x0000FFFF                // RTSTXCOUNT2n[15..0]
#define BN0_WF_MIB_TOP_BSDR0_RTSTXCOUNT2n_SHFT                 0

/* =====================================================================================

  ---BSDR1 (0x820ED000 + 0x690)---

    RTSRETRYCOUNT2n[15..0]       - (RW) This counter is increased when a CTS is not received, or 2nd CTS is failed to receive in Dual CTS mode in response to an RTS.
                                     Total set = # of BSSID
                                     (unit : MPDU)
    RTSRETRYCOUNT2np1[31..16]    - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BSDR1_RTSRETRYCOUNT2np1_ADDR            BN0_WF_MIB_TOP_BSDR1_ADDR
#define BN0_WF_MIB_TOP_BSDR1_RTSRETRYCOUNT2np1_MASK            0xFFFF0000                // RTSRETRYCOUNT2np1[31..16]
#define BN0_WF_MIB_TOP_BSDR1_RTSRETRYCOUNT2np1_SHFT            16
#define BN0_WF_MIB_TOP_BSDR1_RTSRETRYCOUNT2n_ADDR              BN0_WF_MIB_TOP_BSDR1_ADDR
#define BN0_WF_MIB_TOP_BSDR1_RTSRETRYCOUNT2n_MASK              0x0000FFFF                // RTSRETRYCOUNT2n[15..0]
#define BN0_WF_MIB_TOP_BSDR1_RTSRETRYCOUNT2n_SHFT              0

/* =====================================================================================

  ---M0SDR3 (0x820ED000 + 0x698)---

    RX_FCS_OK_CNT[15..0]         - (RW) This counter is increased when receiving frame with FCS ok
                                     (unit : MPDU)
    RX_FCS_ERROR_COUNT[31..16]   - (RW) This counter is increased when receiving frame with FCS error
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR3_RX_FCS_ERROR_COUNT_ADDR          BN0_WF_MIB_TOP_M0SDR3_ADDR
#define BN0_WF_MIB_TOP_M0SDR3_RX_FCS_ERROR_COUNT_MASK          0xFFFF0000                // RX_FCS_ERROR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0SDR3_RX_FCS_ERROR_COUNT_SHFT          16
#define BN0_WF_MIB_TOP_M0SDR3_RX_FCS_OK_CNT_ADDR               BN0_WF_MIB_TOP_M0SDR3_ADDR
#define BN0_WF_MIB_TOP_M0SDR3_RX_FCS_OK_CNT_MASK               0x0000FFFF                // RX_FCS_OK_CNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR3_RX_FCS_OK_CNT_SHFT               0

/* =====================================================================================

  ---M0NSS1MCS0 (0x820ED000 + 0x69C)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 1 and MCS =0
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 1 and MCS =0

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS0_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS1MCS0_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS0_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS1MCS0_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS1MCS0_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS1MCS0_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS0_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS0_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS1MCS1 (0x820ED000 + 0x6A0)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 1 and MCS =1
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 1 and MCS =1

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS1_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS1MCS1_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS1_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS1MCS1_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS1MCS1_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS1MCS1_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS1_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS1_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS1MCS2 (0x820ED000 + 0x6A4)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 1 and MCS =2
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 1 and MCS =2

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS2_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS1MCS2_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS2_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS1MCS2_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS1MCS2_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS1MCS2_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS2_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS2_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS1MCS3 (0x820ED000 + 0x6A8)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 1 and MCS =3
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 1 and MCS =3

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS3_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS1MCS3_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS3_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS1MCS3_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS1MCS3_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS1MCS3_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS3_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS3_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS1MCS4 (0x820ED000 + 0x6AC)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 1 and MCS =4
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 1 and MCS =4

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS4_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS1MCS4_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS4_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS1MCS4_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS1MCS4_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS1MCS4_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS4_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS4_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS1MCS5 (0x820ED000 + 0x6B0)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 1 and MCS =5
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 1 and MCS =5

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS5_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS1MCS5_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS5_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS1MCS5_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS1MCS5_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS1MCS5_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS5_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS5_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS1MCS6 (0x820ED000 + 0x6B4)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 1 and MCS =6
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 1 and MCS =6

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS6_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS1MCS6_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS6_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS1MCS6_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS1MCS6_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS1MCS6_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS6_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS6_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS1MCS7 (0x820ED000 + 0x6B8)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 1 and MCS =7
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 1 and MCS =7

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS7_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS1MCS7_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS7_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS1MCS7_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS1MCS7_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS1MCS7_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS7_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS7_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS1MCS8 (0x820ED000 + 0x6BC)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 1 and MCS =8
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 1 and MCS =8

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS8_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS1MCS8_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS8_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS1MCS8_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS1MCS8_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS1MCS8_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS8_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS8_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS1MCS9 (0x820ED000 + 0x6C0)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 1 and MCS =9
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 1 and MCS =9

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS9_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS1MCS9_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS9_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS1MCS9_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS1MCS9_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS1MCS9_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS9_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS9_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS2MCS0 (0x820ED000 + 0x6C4)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 2 and MCS =0
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 2 and MCS =0

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS0_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS2MCS0_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS0_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS2MCS0_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS2MCS0_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS2MCS0_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS0_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS0_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS2MCS1 (0x820ED000 + 0x6C8)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 2 and MCS =1
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 2 and MCS =1

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS1_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS2MCS1_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS1_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS2MCS1_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS2MCS1_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS2MCS1_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS1_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS1_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS2MCS2 (0x820ED000 + 0x6CC)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 2 and MCS =2
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 2 and MCS =2

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS2_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS2MCS2_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS2_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS2MCS2_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS2MCS2_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS2MCS2_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS2_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS2_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS2MCS3 (0x820ED000 + 0x6D0)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 2 and MCS =3
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 2 and MCS =3

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS3_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS2MCS3_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS3_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS2MCS3_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS2MCS3_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS2MCS3_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS3_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS3_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS2MCS4 (0x820ED000 + 0x6D4)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 2 and MCS =4
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 2 and MCS =4

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS4_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS2MCS4_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS4_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS2MCS4_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS2MCS4_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS2MCS4_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS4_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS4_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS2MCS5 (0x820ED000 + 0x6D8)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 2 and MCS =5
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 2 and MCS =5

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS5_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS2MCS5_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS5_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS2MCS5_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS2MCS5_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS2MCS5_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS5_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS5_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS2MCS6 (0x820ED000 + 0x6DC)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 2 and MCS =6
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 2 and MCS =6

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS6_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS2MCS6_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS6_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS2MCS6_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS2MCS6_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS2MCS6_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS6_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS6_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS2MCS7 (0x820ED000 + 0x6E0)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 2 and MCS =7
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 2 and MCS =7

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS7_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS2MCS7_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS7_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS2MCS7_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS2MCS7_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS2MCS7_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS7_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS7_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS2MCS8 (0x820ED000 + 0x6E4)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 2 and MCS =8
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 2 and MCS =8

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS8_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS2MCS8_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS8_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS2MCS8_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS2MCS8_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS2MCS8_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS8_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS8_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS2MCS9 (0x820ED000 + 0x6E8)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 2 and MCS =9
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 2 and MCS =9

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS9_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS2MCS9_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS9_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS2MCS9_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS2MCS9_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS2MCS9_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS9_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS9_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS3MCS0 (0x820ED000 + 0x6EC)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 3 and MCS =0
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 3 and MCS =0

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS0_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS3MCS0_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS0_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS3MCS0_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS3MCS0_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS3MCS0_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS0_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS0_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS3MCS1 (0x820ED000 + 0x6F0)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 3 and MCS =1
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 3 and MCS =1

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS1_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS3MCS1_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS1_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS3MCS1_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS3MCS1_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS3MCS1_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS1_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS1_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS3MCS2 (0x820ED000 + 0x6F4)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 3 and MCS =2
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 3 and MCS =2

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS2_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS3MCS2_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS2_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS3MCS2_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS3MCS2_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS3MCS2_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS2_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS2_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS3MCS3 (0x820ED000 + 0x6F8)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 3 and MCS =3
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 3 and MCS =3

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS3_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS3MCS3_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS3_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS3MCS3_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS3MCS3_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS3MCS3_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS3_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS3_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS3MCS4 (0x820ED000 + 0x6FC)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 3 and MCS =4
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 3 and MCS =4

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS4_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS3MCS4_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS4_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS3MCS4_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS3MCS4_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS3MCS4_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS4_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS4_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS3MCS5 (0x820ED000 + 0x700)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 3 and MCS =5
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 3 and MCS =5

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS5_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS3MCS5_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS5_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS3MCS5_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS3MCS5_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS3MCS5_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS5_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS5_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS3MCS6 (0x820ED000 + 0x704)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 3 and MCS =6
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 3 and MCS =6

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS6_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS3MCS6_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS6_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS3MCS6_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS3MCS6_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS3MCS6_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS6_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS6_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS3MCS7 (0x820ED000 + 0x708)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 3 and MCS =7
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 3 and MCS =7

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS7_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS3MCS7_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS7_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS3MCS7_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS3MCS7_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS3MCS7_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS7_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS7_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS3MCS8 (0x820ED000 + 0x70C)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 3 and MCS =8
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 3 and MCS =8

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS8_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS3MCS8_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS8_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS3MCS8_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS3MCS8_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS3MCS8_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS8_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS8_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS3MCS9 (0x820ED000 + 0x710)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 3 and MCS =9
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 3 and MCS =9

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS9_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS3MCS9_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS9_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS3MCS9_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS3MCS9_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS3MCS9_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS9_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS9_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS4MCS0 (0x820ED000 + 0x714)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 4 and MCS =0
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 4 and MCS =0

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS0_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS4MCS0_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS0_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS4MCS0_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS4MCS0_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS4MCS0_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS0_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS0_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS4MCS1 (0x820ED000 + 0x718)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 4 and MCS =1
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 4 and MCS =1

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS1_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS4MCS1_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS1_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS4MCS1_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS4MCS1_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS4MCS1_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS1_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS1_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS4MCS2 (0x820ED000 + 0x71C)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 4 and MCS =2
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 4 and MCS =2

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS2_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS4MCS2_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS2_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS4MCS2_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS4MCS2_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS4MCS2_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS2_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS2_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS4MCS3 (0x820ED000 + 0x720)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 4 and MCS =3
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 4 and MCS =3

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS3_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS4MCS3_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS3_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS4MCS3_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS4MCS3_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS4MCS3_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS3_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS3_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS4MCS4 (0x820ED000 + 0x724)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 4 and MCS =4
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 4 and MCS =4

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS4_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS4MCS4_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS4_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS4MCS4_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS4MCS4_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS4MCS4_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS4_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS4_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS4MCS5 (0x820ED000 + 0x728)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 4 and MCS =5
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 4 and MCS =5

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS5_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS4MCS5_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS5_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS4MCS5_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS4MCS5_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS4MCS5_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS5_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS5_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS4MCS6 (0x820ED000 + 0x72C)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 4 and MCS =6
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 4 and MCS =6

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS6_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS4MCS6_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS6_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS4MCS6_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS4MCS6_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS4MCS6_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS6_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS6_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS4MCS7 (0x820ED000 + 0x730)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 4 and MCS =7
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 4 and MCS =7

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS7_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS4MCS7_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS7_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS4MCS7_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS4MCS7_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS4MCS7_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS7_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS7_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS4MCS8 (0x820ED000 + 0x734)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 4 and MCS =8
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 4 and MCS =8

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS8_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS4MCS8_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS8_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS4MCS8_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS4MCS8_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS4MCS8_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS8_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS8_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0NSS4MCS9 (0x820ED000 + 0x738)---

    FCS_OK_COUNT[15..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 4 and MCS =9
    FCS_ERR_COUNT[31..16]        - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 4 and MCS =9

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS9_FCS_ERR_COUNT_ADDR           BN0_WF_MIB_TOP_M0NSS4MCS9_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS9_FCS_ERR_COUNT_MASK           0xFFFF0000                // FCS_ERR_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0NSS4MCS9_FCS_ERR_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_M0NSS4MCS9_FCS_OK_COUNT_ADDR            BN0_WF_MIB_TOP_M0NSS4MCS9_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS9_FCS_OK_COUNT_MASK            0x0000FFFF                // FCS_OK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS9_FCS_OK_COUNT_SHFT            0

/* =====================================================================================

  ---M0SDR52 (0x820ED000 + 0x73C)---

    UC2ME_DATA_NSS_BSSID0_COUNT[15..0] - (RW) Uc2Me Data frame and over RMAC CR Nss Counter, Nss is selected by MIB.M0SCR2.MIB_UC2ME_DATA_NSS
                                     (unit : MPDU)
    UC2ME_DATA_NSS_BSSID1_COUNT[31..16] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR52_UC2ME_DATA_NSS_BSSID1_COUNT_ADDR BN0_WF_MIB_TOP_M0SDR52_ADDR
#define BN0_WF_MIB_TOP_M0SDR52_UC2ME_DATA_NSS_BSSID1_COUNT_MASK 0xFFFF0000                // UC2ME_DATA_NSS_BSSID1_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0SDR52_UC2ME_DATA_NSS_BSSID1_COUNT_SHFT 16
#define BN0_WF_MIB_TOP_M0SDR52_UC2ME_DATA_NSS_BSSID0_COUNT_ADDR BN0_WF_MIB_TOP_M0SDR52_ADDR
#define BN0_WF_MIB_TOP_M0SDR52_UC2ME_DATA_NSS_BSSID0_COUNT_MASK 0x0000FFFF                // UC2ME_DATA_NSS_BSSID0_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR52_UC2ME_DATA_NSS_BSSID0_COUNT_SHFT 0

/* =====================================================================================

  ---M0SDR53 (0x820ED000 + 0x740)---

    UC2ME_DATA_NSS_BSSID2_COUNT[15..0] - (RW) Uc2Me Data frame and over RMAC CR Nss Counter, Nss is selected by MIB.M0SCR2.MIB_UC2ME_DATA_NSS
                                     (unit : MPDU)
    UC2ME_DATA_NSS_BSSID3_COUNT[31..16] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR53_UC2ME_DATA_NSS_BSSID3_COUNT_ADDR BN0_WF_MIB_TOP_M0SDR53_ADDR
#define BN0_WF_MIB_TOP_M0SDR53_UC2ME_DATA_NSS_BSSID3_COUNT_MASK 0xFFFF0000                // UC2ME_DATA_NSS_BSSID3_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0SDR53_UC2ME_DATA_NSS_BSSID3_COUNT_SHFT 16
#define BN0_WF_MIB_TOP_M0SDR53_UC2ME_DATA_NSS_BSSID2_COUNT_ADDR BN0_WF_MIB_TOP_M0SDR53_ADDR
#define BN0_WF_MIB_TOP_M0SDR53_UC2ME_DATA_NSS_BSSID2_COUNT_MASK 0x0000FFFF                // UC2ME_DATA_NSS_BSSID2_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR53_UC2ME_DATA_NSS_BSSID2_COUNT_SHFT 0

/* =====================================================================================

  ---M0SDR60 (0x820ED000 + 0x744)---

    RX_DUP_DROP_BSSID0_COUNT[15..0] - (RW) RX Duplicate Drop count
                                     (unit : MPDU)
    RX_DUP_DROP_BSSID1_COUNT[31..16] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR60_RX_DUP_DROP_BSSID1_COUNT_ADDR   BN0_WF_MIB_TOP_M0SDR60_ADDR
#define BN0_WF_MIB_TOP_M0SDR60_RX_DUP_DROP_BSSID1_COUNT_MASK   0xFFFF0000                // RX_DUP_DROP_BSSID1_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0SDR60_RX_DUP_DROP_BSSID1_COUNT_SHFT   16
#define BN0_WF_MIB_TOP_M0SDR60_RX_DUP_DROP_BSSID0_COUNT_ADDR   BN0_WF_MIB_TOP_M0SDR60_ADDR
#define BN0_WF_MIB_TOP_M0SDR60_RX_DUP_DROP_BSSID0_COUNT_MASK   0x0000FFFF                // RX_DUP_DROP_BSSID0_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR60_RX_DUP_DROP_BSSID0_COUNT_SHFT   0

/* =====================================================================================

  ---M0SDR61 (0x820ED000 + 0x748)---

    RX_DUP_DROP_BSSID2_COUNT[15..0] - (RW) RX Duplicate Drop count
                                     (unit : MPDU)
    RX_DUP_DROP_BSSID3_COUNT[31..16] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR61_RX_DUP_DROP_BSSID3_COUNT_ADDR   BN0_WF_MIB_TOP_M0SDR61_ADDR
#define BN0_WF_MIB_TOP_M0SDR61_RX_DUP_DROP_BSSID3_COUNT_MASK   0xFFFF0000                // RX_DUP_DROP_BSSID3_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0SDR61_RX_DUP_DROP_BSSID3_COUNT_SHFT   16
#define BN0_WF_MIB_TOP_M0SDR61_RX_DUP_DROP_BSSID2_COUNT_ADDR   BN0_WF_MIB_TOP_M0SDR61_ADDR
#define BN0_WF_MIB_TOP_M0SDR61_RX_DUP_DROP_BSSID2_COUNT_MASK   0x0000FFFF                // RX_DUP_DROP_BSSID2_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR61_RX_DUP_DROP_BSSID2_COUNT_SHFT   0

/* =====================================================================================

  ---M0SDR42 (0x820ED000 + 0x74C)---

    RX_PARTIAL_BCN_COUNT0[15..0] - (RW) This counter is increased when receiving partial beacon
                                     (unit : MPDU)
    RX_PARTIAL_BCN_COUNT1[31..16] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR42_RX_PARTIAL_BCN_COUNT1_ADDR      BN0_WF_MIB_TOP_M0SDR42_ADDR
#define BN0_WF_MIB_TOP_M0SDR42_RX_PARTIAL_BCN_COUNT1_MASK      0xFFFF0000                // RX_PARTIAL_BCN_COUNT1[31..16]
#define BN0_WF_MIB_TOP_M0SDR42_RX_PARTIAL_BCN_COUNT1_SHFT      16
#define BN0_WF_MIB_TOP_M0SDR42_RX_PARTIAL_BCN_COUNT0_ADDR      BN0_WF_MIB_TOP_M0SDR42_ADDR
#define BN0_WF_MIB_TOP_M0SDR42_RX_PARTIAL_BCN_COUNT0_MASK      0x0000FFFF                // RX_PARTIAL_BCN_COUNT0[15..0]
#define BN0_WF_MIB_TOP_M0SDR42_RX_PARTIAL_BCN_COUNT0_SHFT      0

/* =====================================================================================

  ---M0SDR43 (0x820ED000 + 0x750)---

    RX_PARTIAL_BCN_COUNT2[15..0] - (RW) This counter is increased when receiving partial beacon
                                     (unit : MPDU)
    RX_PARTIAL_BCN_COUNT3[31..16] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR43_RX_PARTIAL_BCN_COUNT3_ADDR      BN0_WF_MIB_TOP_M0SDR43_ADDR
#define BN0_WF_MIB_TOP_M0SDR43_RX_PARTIAL_BCN_COUNT3_MASK      0xFFFF0000                // RX_PARTIAL_BCN_COUNT3[31..16]
#define BN0_WF_MIB_TOP_M0SDR43_RX_PARTIAL_BCN_COUNT3_SHFT      16
#define BN0_WF_MIB_TOP_M0SDR43_RX_PARTIAL_BCN_COUNT2_ADDR      BN0_WF_MIB_TOP_M0SDR43_ADDR
#define BN0_WF_MIB_TOP_M0SDR43_RX_PARTIAL_BCN_COUNT2_MASK      0x0000FFFF                // RX_PARTIAL_BCN_COUNT2[15..0]
#define BN0_WF_MIB_TOP_M0SDR43_RX_PARTIAL_BCN_COUNT2_SHFT      0

/* =====================================================================================

  ---M0SDR49 (0x820ED000 + 0x754)---

    DTIM0_UPDATE_CHK_FAIL_COUNT[15..0] - (RW) This counter is increased when update DTIM check fail
                                     (unit : MPDU)
    DTIM1_UPDATE_CHK_FAIL_COUNT[31..16] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR49_DTIM1_UPDATE_CHK_FAIL_COUNT_ADDR BN0_WF_MIB_TOP_M0SDR49_ADDR
#define BN0_WF_MIB_TOP_M0SDR49_DTIM1_UPDATE_CHK_FAIL_COUNT_MASK 0xFFFF0000                // DTIM1_UPDATE_CHK_FAIL_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0SDR49_DTIM1_UPDATE_CHK_FAIL_COUNT_SHFT 16
#define BN0_WF_MIB_TOP_M0SDR49_DTIM0_UPDATE_CHK_FAIL_COUNT_ADDR BN0_WF_MIB_TOP_M0SDR49_ADDR
#define BN0_WF_MIB_TOP_M0SDR49_DTIM0_UPDATE_CHK_FAIL_COUNT_MASK 0x0000FFFF                // DTIM0_UPDATE_CHK_FAIL_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR49_DTIM0_UPDATE_CHK_FAIL_COUNT_SHFT 0

/* =====================================================================================

  ---M0SDR67 (0x820ED000 + 0x758)---

    DTIM2_UPDATE_CHK_FAIL_COUNT[15..0] - (RW) This counter is increased when update DTIM check fail
                                     (unit : MPDU)
    DTIM3_UPDATE_CHK_FAIL_COUNT[31..16] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR67_DTIM3_UPDATE_CHK_FAIL_COUNT_ADDR BN0_WF_MIB_TOP_M0SDR67_ADDR
#define BN0_WF_MIB_TOP_M0SDR67_DTIM3_UPDATE_CHK_FAIL_COUNT_MASK 0xFFFF0000                // DTIM3_UPDATE_CHK_FAIL_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0SDR67_DTIM3_UPDATE_CHK_FAIL_COUNT_SHFT 16
#define BN0_WF_MIB_TOP_M0SDR67_DTIM2_UPDATE_CHK_FAIL_COUNT_ADDR BN0_WF_MIB_TOP_M0SDR67_ADDR
#define BN0_WF_MIB_TOP_M0SDR67_DTIM2_UPDATE_CHK_FAIL_COUNT_MASK 0x0000FFFF                // DTIM2_UPDATE_CHK_FAIL_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR67_DTIM2_UPDATE_CHK_FAIL_COUNT_SHFT 0

/* =====================================================================================

  ---M0SDR62 (0x820ED000 + 0x75C)---

    RX_TSF_UP_BSSID0_COUNT[15..0] - (RW) RX TSF Update count
                                     (unit : MPDU)
    RX_TSF_UP_BSSID1_COUNT[31..16] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR62_RX_TSF_UP_BSSID1_COUNT_ADDR     BN0_WF_MIB_TOP_M0SDR62_ADDR
#define BN0_WF_MIB_TOP_M0SDR62_RX_TSF_UP_BSSID1_COUNT_MASK     0xFFFF0000                // RX_TSF_UP_BSSID1_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0SDR62_RX_TSF_UP_BSSID1_COUNT_SHFT     16
#define BN0_WF_MIB_TOP_M0SDR62_RX_TSF_UP_BSSID0_COUNT_ADDR     BN0_WF_MIB_TOP_M0SDR62_ADDR
#define BN0_WF_MIB_TOP_M0SDR62_RX_TSF_UP_BSSID0_COUNT_MASK     0x0000FFFF                // RX_TSF_UP_BSSID0_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR62_RX_TSF_UP_BSSID0_COUNT_SHFT     0

/* =====================================================================================

  ---M0SDR63 (0x820ED000 + 0x760)---

    RX_TSF_UP_BSSID2_COUNT[15..0] - (RW) RX TSF Update count
                                     (unit : MPDU)
    RX_TSF_UP_BSSID3_COUNT[31..16] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR63_RX_TSF_UP_BSSID3_COUNT_ADDR     BN0_WF_MIB_TOP_M0SDR63_ADDR
#define BN0_WF_MIB_TOP_M0SDR63_RX_TSF_UP_BSSID3_COUNT_MASK     0xFFFF0000                // RX_TSF_UP_BSSID3_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0SDR63_RX_TSF_UP_BSSID3_COUNT_SHFT     16
#define BN0_WF_MIB_TOP_M0SDR63_RX_TSF_UP_BSSID2_COUNT_ADDR     BN0_WF_MIB_TOP_M0SDR63_ADDR
#define BN0_WF_MIB_TOP_M0SDR63_RX_TSF_UP_BSSID2_COUNT_MASK     0x0000FFFF                // RX_TSF_UP_BSSID2_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR63_RX_TSF_UP_BSSID2_COUNT_SHFT     0

/* =====================================================================================

  ---M0SDR64 (0x820ED000 + 0x764)---

    RX_BTIM_UP_BSSID0_COUNT[15..0] - (RW) RX BTIM TSF Update count
                                     (unit : MPDU)
    RX_BTIM_UP_BSSID1_COUNT[31..16] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR64_RX_BTIM_UP_BSSID1_COUNT_ADDR    BN0_WF_MIB_TOP_M0SDR64_ADDR
#define BN0_WF_MIB_TOP_M0SDR64_RX_BTIM_UP_BSSID1_COUNT_MASK    0xFFFF0000                // RX_BTIM_UP_BSSID1_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0SDR64_RX_BTIM_UP_BSSID1_COUNT_SHFT    16
#define BN0_WF_MIB_TOP_M0SDR64_RX_BTIM_UP_BSSID0_COUNT_ADDR    BN0_WF_MIB_TOP_M0SDR64_ADDR
#define BN0_WF_MIB_TOP_M0SDR64_RX_BTIM_UP_BSSID0_COUNT_MASK    0x0000FFFF                // RX_BTIM_UP_BSSID0_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR64_RX_BTIM_UP_BSSID0_COUNT_SHFT    0

/* =====================================================================================

  ---M0SDR65 (0x820ED000 + 0x768)---

    RX_BTIM_UP_BSSID2_COUNT[15..0] - (RW) RX BTIM TSF Update count
                                     (unit : MPDU)
    RX_BTIM_UP_BSSID3_COUNT[31..16] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR65_RX_BTIM_UP_BSSID3_COUNT_ADDR    BN0_WF_MIB_TOP_M0SDR65_ADDR
#define BN0_WF_MIB_TOP_M0SDR65_RX_BTIM_UP_BSSID3_COUNT_MASK    0xFFFF0000                // RX_BTIM_UP_BSSID3_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0SDR65_RX_BTIM_UP_BSSID3_COUNT_SHFT    16
#define BN0_WF_MIB_TOP_M0SDR65_RX_BTIM_UP_BSSID2_COUNT_ADDR    BN0_WF_MIB_TOP_M0SDR65_ADDR
#define BN0_WF_MIB_TOP_M0SDR65_RX_BTIM_UP_BSSID2_COUNT_MASK    0x0000FFFF                // RX_BTIM_UP_BSSID2_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR65_RX_BTIM_UP_BSSID2_COUNT_SHFT    0

/* =====================================================================================

  ---M0SDR10 (0x820ED000 + 0x76C)---

    RX_MDRDY_COUNT[31..0]        - (RW) This counter is increased for each MDRDY rising edge occurs.
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR10_RX_MDRDY_COUNT_ADDR             BN0_WF_MIB_TOP_M0SDR10_ADDR
#define BN0_WF_MIB_TOP_M0SDR10_RX_MDRDY_COUNT_MASK             0xFFFFFFFF                // RX_MDRDY_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0SDR10_RX_MDRDY_COUNT_SHFT             0

/* =====================================================================================

  ---M0SDR22 (0x820ED000 + 0x770)---

    RX_AMPDU_COUNT[31..0]        - (RW) This counter is increased when receiving a A-MPDU with a unicast to me address
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR22_RX_AMPDU_COUNT_ADDR             BN0_WF_MIB_TOP_M0SDR22_ADDR
#define BN0_WF_MIB_TOP_M0SDR22_RX_AMPDU_COUNT_MASK             0xFFFFFFFF                // RX_AMPDU_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0SDR22_RX_AMPDU_COUNT_SHFT             0

/* =====================================================================================

  ---M0SDR23 (0x820ED000 + 0x774)---

    RX_TOTBYTE_COUNT[31..0]      - (RW) This counter counts PPDU length when receiving a A-MPDU with a unicast to me address
                                     (unit : byte)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR23_RX_TOTBYTE_COUNT_ADDR           BN0_WF_MIB_TOP_M0SDR23_ADDR
#define BN0_WF_MIB_TOP_M0SDR23_RX_TOTBYTE_COUNT_MASK           0xFFFFFFFF                // RX_TOTBYTE_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0SDR23_RX_TOTBYTE_COUNT_SHFT           0

/* =====================================================================================

  ---M0SDR24 (0x820ED000 + 0x778)---

    RX_VALIDSF_COUNT[31..0]      - (RW) This counter is increased for each MPDU in A-MPDU sub frame when receiving a A-MPDU with a unicast to me address
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR24_RX_VALIDSF_COUNT_ADDR           BN0_WF_MIB_TOP_M0SDR24_ADDR
#define BN0_WF_MIB_TOP_M0SDR24_RX_VALIDSF_COUNT_MASK           0xFFFFFFFF                // RX_VALIDSF_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0SDR24_RX_VALIDSF_COUNT_SHFT           0

/* =====================================================================================

  ---M0SDR25 (0x820ED000 + 0x77C)---

    RX_VALIDBYTE_COUNT[31..0]    - (RW) This counter counts all MPDU length in A-MPDU sub frame when receiving a A-MPDU with a unicast to me address
                                     (unit : byte)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR25_RX_VALIDBYTE_COUNT_ADDR         BN0_WF_MIB_TOP_M0SDR25_ADDR
#define BN0_WF_MIB_TOP_M0SDR25_RX_VALIDBYTE_COUNT_MASK         0xFFFFFFFF                // RX_VALIDBYTE_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0SDR25_RX_VALIDBYTE_COUNT_SHFT         0

/* =====================================================================================

  ---M0SDR5 (0x820ED000 + 0x780)---

    RX_MPDU_COUNT[31..0]         - (RW) This counter is increased for each successfully received MPDU and passed the RX filter.
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR5_RX_MPDU_COUNT_ADDR               BN0_WF_MIB_TOP_M0SDR5_ADDR
#define BN0_WF_MIB_TOP_M0SDR5_RX_MPDU_COUNT_MASK               0xFFFFFFFF                // RX_MPDU_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0SDR5_RX_MPDU_COUNT_SHFT               0

/* =====================================================================================

  ---M0SDR41 (0x820ED000 + 0x784)---

    RX_NON_NO_DATA_COUNT[15..0]  - (RW) For dynamic silence window function used. To increase need to meet second RxV is received completely, and rmac_dsw_rx_data is asserted (refer to DSW SRS). 
                                     (unit : PPDU)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR41_RX_NON_NO_DATA_COUNT_ADDR       BN0_WF_MIB_TOP_M0SDR41_ADDR
#define BN0_WF_MIB_TOP_M0SDR41_RX_NON_NO_DATA_COUNT_MASK       0x0000FFFF                // RX_NON_NO_DATA_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR41_RX_NON_NO_DATA_COUNT_SHFT       0

/* =====================================================================================

  ---M0SDR4 (0x820ED000 + 0x788)---

    RX_FIFO_FULL_COUNT[15..0]    - (RW) Counter of the number of the packets which pass RX filter but is dropped due to FIFO full.
                                     (unit : MPDU)
    RX_OUT_OF_RANGE_COUNT[31..16] - (RW) 1. a MPDU passed RX filter and encounter its PPDU length > PPDU max threshold (RMAC.CR.MAXMIN_LEN) or
                                     2. a MPDU passed RX filter and encounter its PPDU length < PPDU min threshold (RMAC.CR.MAXMIN_LEN) and not a NDP
                                     3. a MPDU passed RX filter and encounter its MPDU length > MPDU max threshold (RMAC.CR.MISC)
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR4_RX_OUT_OF_RANGE_COUNT_ADDR       BN0_WF_MIB_TOP_M0SDR4_ADDR
#define BN0_WF_MIB_TOP_M0SDR4_RX_OUT_OF_RANGE_COUNT_MASK       0xFFFF0000                // RX_OUT_OF_RANGE_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0SDR4_RX_OUT_OF_RANGE_COUNT_SHFT       16
#define BN0_WF_MIB_TOP_M0SDR4_RX_FIFO_FULL_COUNT_ADDR          BN0_WF_MIB_TOP_M0SDR4_ADDR
#define BN0_WF_MIB_TOP_M0SDR4_RX_FIFO_FULL_COUNT_MASK          0x0000FFFF                // RX_FIFO_FULL_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR4_RX_FIFO_FULL_COUNT_SHFT          0

/* =====================================================================================

  ---M0SDR8 (0x820ED000 + 0x78C)---

    DELIMITER_FAIL_COUNT[15..0]  - (RW) This counter is increased when an A-MPDU delimiter has CRC error when this is the first CRC error in the received A-MPDU or when the previous delimiter has been decoded correctly.
                                     (unit : delimiter)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR8_DELIMITER_FAIL_COUNT_ADDR        BN0_WF_MIB_TOP_M0SDR8_ADDR
#define BN0_WF_MIB_TOP_M0SDR8_DELIMITER_FAIL_COUNT_MASK        0x0000FFFF                // DELIMITER_FAIL_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR8_DELIMITER_FAIL_COUNT_SHFT        0

/* =====================================================================================

  ---M0SDR11 (0x820ED000 + 0x790)---

    RX_LEN_MISMATCH[15..0]       - (RW) This counter is increased when PHY/MAC RX length mismatch condition occurs
                                     (unit : PPDU)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR11_RX_LEN_MISMATCH_ADDR            BN0_WF_MIB_TOP_M0SDR11_ADDR
#define BN0_WF_MIB_TOP_M0SDR11_RX_LEN_MISMATCH_MASK            0x0000FFFF                // RX_LEN_MISMATCH[15..0]
#define BN0_WF_MIB_TOP_M0SDR11_RX_LEN_MISMATCH_SHFT            0

/* =====================================================================================

  ---M0SDR26 (0x820ED000 + 0x794)---

    PHY_MIB_COUNT0[31..0]        - (RW) This counter is increased when PHY MIB counter0 indicated +1
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR26_PHY_MIB_COUNT0_ADDR             BN0_WF_MIB_TOP_M0SDR26_ADDR
#define BN0_WF_MIB_TOP_M0SDR26_PHY_MIB_COUNT0_MASK             0xFFFFFFFF                // PHY_MIB_COUNT0[31..0]
#define BN0_WF_MIB_TOP_M0SDR26_PHY_MIB_COUNT0_SHFT             0

/* =====================================================================================

  ---SRVCR (0x820ED000 + 0x798)---

    NONSRG_VLD_COUNT[15..0]      - (RW) PPDU hits NONSRG condition in SR and RCPI satisfies the SR threshold
                                     (unit : PPDU)
    SRG_VLD_COUNT[31..16]        - (RW) PPDU hits SRG condition in SR and RCPI satisfies the SR threshold
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_SRVCR_SRG_VLD_COUNT_ADDR                BN0_WF_MIB_TOP_SRVCR_ADDR
#define BN0_WF_MIB_TOP_SRVCR_SRG_VLD_COUNT_MASK                0xFFFF0000                // SRG_VLD_COUNT[31..16]
#define BN0_WF_MIB_TOP_SRVCR_SRG_VLD_COUNT_SHFT                16
#define BN0_WF_MIB_TOP_SRVCR_NONSRG_VLD_COUNT_ADDR             BN0_WF_MIB_TOP_SRVCR_ADDR
#define BN0_WF_MIB_TOP_SRVCR_NONSRG_VLD_COUNT_MASK             0x0000FFFF                // NONSRG_VLD_COUNT[15..0]
#define BN0_WF_MIB_TOP_SRVCR_NONSRG_VLD_COUNT_SHFT             0

/* =====================================================================================

  ---SRCPVCR (0x820ED000 + 0x79C)---

    NONSRG_PPDUVLD_COUNT[15..0]  - (RW) PPDU hits NONSRG condition in SR and RCPI do NOT satisfy the SR threshold
                                     (unit : PPDU)
    SRG_PPDUVLD_COUNT[31..16]    - (RW) PPDU hits SRG condition in SR and RCPI do NOT satisfy the SR threshold
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_SRCPVCR_SRG_PPDUVLD_COUNT_ADDR          BN0_WF_MIB_TOP_SRCPVCR_ADDR
#define BN0_WF_MIB_TOP_SRCPVCR_SRG_PPDUVLD_COUNT_MASK          0xFFFF0000                // SRG_PPDUVLD_COUNT[31..16]
#define BN0_WF_MIB_TOP_SRCPVCR_SRG_PPDUVLD_COUNT_SHFT          16
#define BN0_WF_MIB_TOP_SRCPVCR_NONSRG_PPDUVLD_COUNT_ADDR       BN0_WF_MIB_TOP_SRCPVCR_ADDR
#define BN0_WF_MIB_TOP_SRCPVCR_NONSRG_PPDUVLD_COUNT_MASK       0x0000FFFF                // NONSRG_PPDUVLD_COUNT[15..0]
#define BN0_WF_MIB_TOP_SRCPVCR_NONSRG_PPDUVLD_COUNT_SHFT       0

/* =====================================================================================

  ---SRTRCR (0x820ED000 + 0x7A0)---

    SRT_R_COUNT[15..0]           - (RW) SR RCPI table full replace count
                                     (unit : PPDU)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_SRTRCR_SRT_R_COUNT_ADDR                 BN0_WF_MIB_TOP_SRTRCR_ADDR
#define BN0_WF_MIB_TOP_SRTRCR_SRT_R_COUNT_MASK                 0x0000FFFF                // SRT_R_COUNT[15..0]
#define BN0_WF_MIB_TOP_SRTRCR_SRT_R_COUNT_SHFT                 0

/* =====================================================================================

  ---OPCR (0x820ED000 + 0x7A4)---

    INTERBSS_PPDU_COUNT[15..0]   - (RW) Inter PPDU counter
                                     (unit : PPDU)
    INTRABSS_PPDU_COUNT[31..16]  - (RW) Intra PPDU counter
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_OPCR_INTRABSS_PPDU_COUNT_ADDR           BN0_WF_MIB_TOP_OPCR_ADDR
#define BN0_WF_MIB_TOP_OPCR_INTRABSS_PPDU_COUNT_MASK           0xFFFF0000                // INTRABSS_PPDU_COUNT[31..16]
#define BN0_WF_MIB_TOP_OPCR_INTRABSS_PPDU_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_OPCR_INTERBSS_PPDU_COUNT_ADDR           BN0_WF_MIB_TOP_OPCR_ADDR
#define BN0_WF_MIB_TOP_OPCR_INTERBSS_PPDU_COUNT_MASK           0x0000FFFF                // INTERBSS_PPDU_COUNT[15..0]
#define BN0_WF_MIB_TOP_OPCR_INTERBSS_PPDU_COUNT_SHFT           0

/* =====================================================================================

  ---M0SDR32 (0x820ED000 + 0x7A8)---

    EBF_TX_COUNT[15..0]          - (RW) TX Implicit Beamforming Apply Counter
                                     (unit : PPDU)
    IBF_TX_COUNT[31..16]         - (RW) TX Explicit Beamforming Apply Counter
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR32_IBF_TX_COUNT_ADDR               BN0_WF_MIB_TOP_M0SDR32_ADDR
#define BN0_WF_MIB_TOP_M0SDR32_IBF_TX_COUNT_MASK               0xFFFF0000                // IBF_TX_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0SDR32_IBF_TX_COUNT_SHFT               16
#define BN0_WF_MIB_TOP_M0SDR32_EBF_TX_COUNT_ADDR               BN0_WF_MIB_TOP_M0SDR32_ADDR
#define BN0_WF_MIB_TOP_M0SDR32_EBF_TX_COUNT_MASK               0x0000FFFF                // EBF_TX_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR32_EBF_TX_COUNT_SHFT               0

/* =====================================================================================

  ---M0SDR33 (0x820ED000 + 0x7AC)---

    MUBF_TX_COUNT[15..0]         - (RW) MU TX Explicit Beamforming Apply Counter
                                     (unit : PPDU)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR33_MUBF_TX_COUNT_ADDR              BN0_WF_MIB_TOP_M0SDR33_ADDR
#define BN0_WF_MIB_TOP_M0SDR33_MUBF_TX_COUNT_MASK              0x0000FFFF                // MUBF_TX_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR33_MUBF_TX_COUNT_SHFT              0

/* =====================================================================================

  ---BFCR0 (0x820ED000 + 0x7B0)---

    RX_BF_HTFBK_COUNT[15..0]     - (RW) BFer RX Feedback Statistic Counter0 (RX HT BRP count)
                                     (unit : MPDU)
    RX_BF_VHTFBK_COUNT[31..16]   - (RW) BFer RX Feedback Statistic Counter1 (RX VHT BRP count)
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BFCR0_RX_BF_VHTFBK_COUNT_ADDR           BN0_WF_MIB_TOP_BFCR0_ADDR
#define BN0_WF_MIB_TOP_BFCR0_RX_BF_VHTFBK_COUNT_MASK           0xFFFF0000                // RX_BF_VHTFBK_COUNT[31..16]
#define BN0_WF_MIB_TOP_BFCR0_RX_BF_VHTFBK_COUNT_SHFT           16
#define BN0_WF_MIB_TOP_BFCR0_RX_BF_HTFBK_COUNT_ADDR            BN0_WF_MIB_TOP_BFCR0_ADDR
#define BN0_WF_MIB_TOP_BFCR0_RX_BF_HTFBK_COUNT_MASK            0x0000FFFF                // RX_BF_HTFBK_COUNT[15..0]
#define BN0_WF_MIB_TOP_BFCR0_RX_BF_HTFBK_COUNT_SHFT            0

/* =====================================================================================

  ---BFCR1 (0x820ED000 + 0x7B4)---

    RX_BF_HEFBK_COUNT[15..0]     - (RW) BFer RX Feedback Statistic Counter2 (RX HE BRP count)
                                     (unit : MPDU)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BFCR1_RX_BF_HEFBK_COUNT_ADDR            BN0_WF_MIB_TOP_BFCR1_ADDR
#define BN0_WF_MIB_TOP_BFCR1_RX_BF_HEFBK_COUNT_MASK            0x0000FFFF                // RX_BF_HEFBK_COUNT[15..0]
#define BN0_WF_MIB_TOP_BFCR1_RX_BF_HEFBK_COUNT_SHFT            0

/* =====================================================================================

  ---BFCR2 (0x820ED000 + 0x7B8)---

    BFEE_TXFBK_TRI[15..0]        - (RW) Number of TxBF feedback triggered (NDPA Count)
                                     (unit : MPDU)
    BFEE_TXFBK_BFPOLL_TRI[31..16] - (RW) Number of HE TriggerFrame RBP packet received.
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BFCR2_BFEE_TXFBK_BFPOLL_TRI_ADDR        BN0_WF_MIB_TOP_BFCR2_ADDR
#define BN0_WF_MIB_TOP_BFCR2_BFEE_TXFBK_BFPOLL_TRI_MASK        0xFFFF0000                // BFEE_TXFBK_BFPOLL_TRI[31..16]
#define BN0_WF_MIB_TOP_BFCR2_BFEE_TXFBK_BFPOLL_TRI_SHFT        16
#define BN0_WF_MIB_TOP_BFCR2_BFEE_TXFBK_TRI_ADDR               BN0_WF_MIB_TOP_BFCR2_ADDR
#define BN0_WF_MIB_TOP_BFCR2_BFEE_TXFBK_TRI_MASK               0x0000FFFF                // BFEE_TXFBK_TRI[15..0]
#define BN0_WF_MIB_TOP_BFCR2_BFEE_TXFBK_TRI_SHFT               0

/* =====================================================================================

  ---BFCR3 (0x820ED000 + 0x7BC)---

    BFEE_RX_NDP_COUNT[15..0]     - (RW) Number of NDP packet received.
                                     (unit : MPDU)
    BFEE_RX_FBKCQI_COUNT[31..16] - (RW) Number of TxBF feedback CQI Report count
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BFCR3_BFEE_RX_FBKCQI_COUNT_ADDR         BN0_WF_MIB_TOP_BFCR3_ADDR
#define BN0_WF_MIB_TOP_BFCR3_BFEE_RX_FBKCQI_COUNT_MASK         0xFFFF0000                // BFEE_RX_FBKCQI_COUNT[31..16]
#define BN0_WF_MIB_TOP_BFCR3_BFEE_RX_FBKCQI_COUNT_SHFT         16
#define BN0_WF_MIB_TOP_BFCR3_BFEE_RX_NDP_COUNT_ADDR            BN0_WF_MIB_TOP_BFCR3_ADDR
#define BN0_WF_MIB_TOP_BFCR3_BFEE_RX_NDP_COUNT_MASK            0x0000FFFF                // BFEE_RX_NDP_COUNT[15..0]
#define BN0_WF_MIB_TOP_BFCR3_BFEE_RX_NDP_COUNT_SHFT            0

/* =====================================================================================

  ---BFCR4 (0x820ED000 + 0x7C0)---

    RX_BF_EBF_UPT_COUNT[15..0]   - (RW) BFer RX Feedback Statistic Counter5
                                     Display received number of FBK frame from BFee MAC configured in RXBF_MAC_ADDR5.
                                     (unit : MPDU)
    RX_BF_IBF_UPT_COUNT[31..16]  - (RW) BFer RX Feedback Statistic Counter4 
                                     Display received number of FBK frame from BFee MAC configured in RXBF_MAC_ADDR4.
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BFCR4_RX_BF_IBF_UPT_COUNT_ADDR          BN0_WF_MIB_TOP_BFCR4_ADDR
#define BN0_WF_MIB_TOP_BFCR4_RX_BF_IBF_UPT_COUNT_MASK          0xFFFF0000                // RX_BF_IBF_UPT_COUNT[31..16]
#define BN0_WF_MIB_TOP_BFCR4_RX_BF_IBF_UPT_COUNT_SHFT          16
#define BN0_WF_MIB_TOP_BFCR4_RX_BF_EBF_UPT_COUNT_ADDR          BN0_WF_MIB_TOP_BFCR4_ADDR
#define BN0_WF_MIB_TOP_BFCR4_RX_BF_EBF_UPT_COUNT_MASK          0x0000FFFF                // RX_BF_EBF_UPT_COUNT[15..0]
#define BN0_WF_MIB_TOP_BFCR4_RX_BF_EBF_UPT_COUNT_SHFT          0

/* =====================================================================================

  ---BFCR5 (0x820ED000 + 0x7C4)---

    BFEE_TB_LEN_ERR_COUNT[15..0] - (RW) Number of HE TxBF feedback TF length check error count
                                     (unit : MPDU)
    BFEE_SP_ABORT_COUNT[31..16]  - (RW) Number of TxBF feedback aborted due to exceptional case
                                     (1. A2 compare fail; 2. FBK invalid; 3. RXNDP TO; 4. BBRDY TO; 5. WTBL invalid)
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BFCR5_BFEE_SP_ABORT_COUNT_ADDR          BN0_WF_MIB_TOP_BFCR5_ADDR
#define BN0_WF_MIB_TOP_BFCR5_BFEE_SP_ABORT_COUNT_MASK          0xFFFF0000                // BFEE_SP_ABORT_COUNT[31..16]
#define BN0_WF_MIB_TOP_BFCR5_BFEE_SP_ABORT_COUNT_SHFT          16
#define BN0_WF_MIB_TOP_BFCR5_BFEE_TB_LEN_ERR_COUNT_ADDR        BN0_WF_MIB_TOP_BFCR5_ADDR
#define BN0_WF_MIB_TOP_BFCR5_BFEE_TB_LEN_ERR_COUNT_MASK        0x0000FFFF                // BFEE_TB_LEN_ERR_COUNT[15..0]
#define BN0_WF_MIB_TOP_BFCR5_BFEE_TB_LEN_ERR_COUNT_SHFT        0

/* =====================================================================================

  ---BFCR6 (0x820ED000 + 0x7C8)---

    BFEE_TMAC_ABORT_COUNT[15..0] - (RW) Number of TxBF feedback aborted due to TMAC Abort
                                     (unit : MPDU)
    BFEE_TXFBK_MUTE[31..16]      - (RW) Number of TxBF feedback aborted due to WTBL response control.
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BFCR6_BFEE_TXFBK_MUTE_ADDR              BN0_WF_MIB_TOP_BFCR6_ADDR
#define BN0_WF_MIB_TOP_BFCR6_BFEE_TXFBK_MUTE_MASK              0xFFFF0000                // BFEE_TXFBK_MUTE[31..16]
#define BN0_WF_MIB_TOP_BFCR6_BFEE_TXFBK_MUTE_SHFT              16
#define BN0_WF_MIB_TOP_BFCR6_BFEE_TMAC_ABORT_COUNT_ADDR        BN0_WF_MIB_TOP_BFCR6_ADDR
#define BN0_WF_MIB_TOP_BFCR6_BFEE_TMAC_ABORT_COUNT_MASK        0x0000FFFF                // BFEE_TMAC_ABORT_COUNT[15..0]
#define BN0_WF_MIB_TOP_BFCR6_BFEE_TMAC_ABORT_COUNT_SHFT        0

/* =====================================================================================

  ---BFCR7 (0x820ED000 + 0x7CC)---

    BFEE_TXFBK_CPL[15..0]        - (RW) Number of successful TxBF feedback frame transmitted (TX Feedback Report Count)
                                     (unit : MPDU)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BFCR7_BFEE_TXFBK_CPL_ADDR               BN0_WF_MIB_TOP_BFCR7_ADDR
#define BN0_WF_MIB_TOP_BFCR7_BFEE_TXFBK_CPL_MASK               0x0000FFFF                // BFEE_TXFBK_CPL[15..0]
#define BN0_WF_MIB_TOP_BFCR7_BFEE_TXFBK_CPL_SHFT               0

/* =====================================================================================

  ---M0SDR58 (0x820ED000 + 0x7D0)---

    RESERVED0[15..0]             - (RO) Reserved bits
    BFEE_COANT_BLKTX_COUNT[31..16] - (RW) Co-ANT BFEE Block TX counter
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR58_BFEE_COANT_BLKTX_COUNT_ADDR     BN0_WF_MIB_TOP_M0SDR58_ADDR
#define BN0_WF_MIB_TOP_M0SDR58_BFEE_COANT_BLKTX_COUNT_MASK     0xFFFF0000                // BFEE_COANT_BLKTX_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0SDR58_BFEE_COANT_BLKTX_COUNT_SHFT     16

/* =====================================================================================

  ---BFCR8 (0x820ED000 + 0x7D4)---

    BFEE_FBK_SEG_COUNT[15..0]    - (RW) Number of TxBF feedback segment report count
                                     (unit : MPDU)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BFCR8_BFEE_FBK_SEG_COUNT_ADDR           BN0_WF_MIB_TOP_BFCR8_ADDR
#define BN0_WF_MIB_TOP_BFCR8_BFEE_FBK_SEG_COUNT_MASK           0x0000FFFF                // BFEE_FBK_SEG_COUNT[15..0]
#define BN0_WF_MIB_TOP_BFCR8_BFEE_FBK_SEG_COUNT_SHFT           0

/* =====================================================================================

  ---M0SDR0 (0x820ED000 + 0x7D8)---

    BEACONTXCOUNT[15..0]         - (RW) This counter is increased for a beacon transmitted successfully.
                                     (unit : MPDU)
    BEACONRXCOUNT[31..16]        - (RW) This counter is increased for a beacon received successfully.
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR0_BEACONRXCOUNT_ADDR               BN0_WF_MIB_TOP_M0SDR0_ADDR
#define BN0_WF_MIB_TOP_M0SDR0_BEACONRXCOUNT_MASK               0xFFFF0000                // BEACONRXCOUNT[31..16]
#define BN0_WF_MIB_TOP_M0SDR0_BEACONRXCOUNT_SHFT               16
#define BN0_WF_MIB_TOP_M0SDR0_BEACONTXCOUNT_ADDR               BN0_WF_MIB_TOP_M0SDR0_ADDR
#define BN0_WF_MIB_TOP_M0SDR0_BEACONTXCOUNT_MASK               0x0000FFFF                // BEACONTXCOUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR0_BEACONTXCOUNT_SHFT               0

/* =====================================================================================

  ---M0DR2 (0x820ED000 + 0x7DC)---

    TRX_AGG_RANGE0_CNT[15..0]    - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 0(MIB.M0ARNGn.AGG_RANGE_SEL_0) of CR setting
                                     (unit : PPDU)
    TRX_AGG_RANGE1_CNT[31..16]   - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 1(MIB.M0ARNGn.AGG_RANGE_SEL_1) of CR setting
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0DR2_TRX_AGG_RANGE1_CNT_ADDR           BN0_WF_MIB_TOP_M0DR2_ADDR
#define BN0_WF_MIB_TOP_M0DR2_TRX_AGG_RANGE1_CNT_MASK           0xFFFF0000                // TRX_AGG_RANGE1_CNT[31..16]
#define BN0_WF_MIB_TOP_M0DR2_TRX_AGG_RANGE1_CNT_SHFT           16
#define BN0_WF_MIB_TOP_M0DR2_TRX_AGG_RANGE0_CNT_ADDR           BN0_WF_MIB_TOP_M0DR2_ADDR
#define BN0_WF_MIB_TOP_M0DR2_TRX_AGG_RANGE0_CNT_MASK           0x0000FFFF                // TRX_AGG_RANGE0_CNT[15..0]
#define BN0_WF_MIB_TOP_M0DR2_TRX_AGG_RANGE0_CNT_SHFT           0

/* =====================================================================================

  ---M0DR3 (0x820ED000 + 0x7E0)---

    TRX_AGG_RANGE2_CNT[15..0]    - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 2(MIB.M0ARNGn.AGG_RANGE_SEL_2) of CR setting
                                     (unit : PPDU)
    TRX_AGG_RANGE3_CNT[31..16]   - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 3(MIB.M0ARNGn.AGG_RANGE_SEL_3) of CR setting
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0DR3_TRX_AGG_RANGE3_CNT_ADDR           BN0_WF_MIB_TOP_M0DR3_ADDR
#define BN0_WF_MIB_TOP_M0DR3_TRX_AGG_RANGE3_CNT_MASK           0xFFFF0000                // TRX_AGG_RANGE3_CNT[31..16]
#define BN0_WF_MIB_TOP_M0DR3_TRX_AGG_RANGE3_CNT_SHFT           16
#define BN0_WF_MIB_TOP_M0DR3_TRX_AGG_RANGE2_CNT_ADDR           BN0_WF_MIB_TOP_M0DR3_ADDR
#define BN0_WF_MIB_TOP_M0DR3_TRX_AGG_RANGE2_CNT_MASK           0x0000FFFF                // TRX_AGG_RANGE2_CNT[15..0]
#define BN0_WF_MIB_TOP_M0DR3_TRX_AGG_RANGE2_CNT_SHFT           0

/* =====================================================================================

  ---M0DR4 (0x820ED000 + 0x7E4)---

    TRX_AGG_RANGE4_CNT[15..0]    - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 4(MIB.M0ARNGn.AGG_RANGE_SEL_4) of CR setting
                                     (unit : PPDU)
    TRX_AGG_RANGE5_CNT[31..16]   - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 5(MIB.M0ARNGn.AGG_RANGE_SEL_5) of CR setting
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0DR4_TRX_AGG_RANGE5_CNT_ADDR           BN0_WF_MIB_TOP_M0DR4_ADDR
#define BN0_WF_MIB_TOP_M0DR4_TRX_AGG_RANGE5_CNT_MASK           0xFFFF0000                // TRX_AGG_RANGE5_CNT[31..16]
#define BN0_WF_MIB_TOP_M0DR4_TRX_AGG_RANGE5_CNT_SHFT           16
#define BN0_WF_MIB_TOP_M0DR4_TRX_AGG_RANGE4_CNT_ADDR           BN0_WF_MIB_TOP_M0DR4_ADDR
#define BN0_WF_MIB_TOP_M0DR4_TRX_AGG_RANGE4_CNT_MASK           0x0000FFFF                // TRX_AGG_RANGE4_CNT[15..0]
#define BN0_WF_MIB_TOP_M0DR4_TRX_AGG_RANGE4_CNT_SHFT           0

/* =====================================================================================

  ---M0DR5 (0x820ED000 + 0x7E8)---

    TRX_AGG_RANGE6_CNT[15..0]    - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 6(MIB.M0ARNGn.AGG_RANGE_SEL_6) of CR setting
                                     (unit : PPDU)
    TRX_AGG_RANGE7_CNT[31..16]   - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 7(MIB.M0ARNGn.AGG_RANGE_SEL_7) of CR setting
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0DR5_TRX_AGG_RANGE7_CNT_ADDR           BN0_WF_MIB_TOP_M0DR5_ADDR
#define BN0_WF_MIB_TOP_M0DR5_TRX_AGG_RANGE7_CNT_MASK           0xFFFF0000                // TRX_AGG_RANGE7_CNT[31..16]
#define BN0_WF_MIB_TOP_M0DR5_TRX_AGG_RANGE7_CNT_SHFT           16
#define BN0_WF_MIB_TOP_M0DR5_TRX_AGG_RANGE6_CNT_ADDR           BN0_WF_MIB_TOP_M0DR5_ADDR
#define BN0_WF_MIB_TOP_M0DR5_TRX_AGG_RANGE6_CNT_MASK           0x0000FFFF                // TRX_AGG_RANGE6_CNT[15..0]
#define BN0_WF_MIB_TOP_M0DR5_TRX_AGG_RANGE6_CNT_SHFT           0

/* =====================================================================================

  ---M0DR13 (0x820ED000 + 0x7EC)---

    TRX_AGG_RANGE8_CNT[15..0]    - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 8(MIB.M0ARNGn.AGG_RANGE_SEL_8) of CR setting
                                     (unit : PPDU)
    TRX_AGG_RANGE9_CNT[31..16]   - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 9(MIB.M0ARNGn.AGG_RANGE_SEL_9) of CR setting
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0DR13_TRX_AGG_RANGE9_CNT_ADDR          BN0_WF_MIB_TOP_M0DR13_ADDR
#define BN0_WF_MIB_TOP_M0DR13_TRX_AGG_RANGE9_CNT_MASK          0xFFFF0000                // TRX_AGG_RANGE9_CNT[31..16]
#define BN0_WF_MIB_TOP_M0DR13_TRX_AGG_RANGE9_CNT_SHFT          16
#define BN0_WF_MIB_TOP_M0DR13_TRX_AGG_RANGE8_CNT_ADDR          BN0_WF_MIB_TOP_M0DR13_ADDR
#define BN0_WF_MIB_TOP_M0DR13_TRX_AGG_RANGE8_CNT_MASK          0x0000FFFF                // TRX_AGG_RANGE8_CNT[15..0]
#define BN0_WF_MIB_TOP_M0DR13_TRX_AGG_RANGE8_CNT_SHFT          0

/* =====================================================================================

  ---M0DR14 (0x820ED000 + 0x7F0)---

    TRX_AGG_RANGE10_CNT[15..0]   - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 10(MIB.M0ARNGn.AGG_RANGE_SEL_10) of CR setting
                                     (unit : PPDU)
    TRX_AGG_RANGE11_CNT[31..16]  - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 11(MIB.M0ARNGn.AGG_RANGE_SEL_11) of CR setting
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0DR14_TRX_AGG_RANGE11_CNT_ADDR         BN0_WF_MIB_TOP_M0DR14_ADDR
#define BN0_WF_MIB_TOP_M0DR14_TRX_AGG_RANGE11_CNT_MASK         0xFFFF0000                // TRX_AGG_RANGE11_CNT[31..16]
#define BN0_WF_MIB_TOP_M0DR14_TRX_AGG_RANGE11_CNT_SHFT         16
#define BN0_WF_MIB_TOP_M0DR14_TRX_AGG_RANGE10_CNT_ADDR         BN0_WF_MIB_TOP_M0DR14_ADDR
#define BN0_WF_MIB_TOP_M0DR14_TRX_AGG_RANGE10_CNT_MASK         0x0000FFFF                // TRX_AGG_RANGE10_CNT[15..0]
#define BN0_WF_MIB_TOP_M0DR14_TRX_AGG_RANGE10_CNT_SHFT         0

/* =====================================================================================

  ---M0DR15 (0x820ED000 + 0x7F4)---

    TRX_AGG_RANGE12_CNT[15..0]   - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 12(MIB.M0ARNGn.AGG_RANGE_SEL_12) of CR setting
                                     (unit : PPDU)
    TRX_AGG_RANGE13_CNT[31..16]  - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 13(MIB.M0ARNGn.AGG_RANGE_SEL_13) of CR setting
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0DR15_TRX_AGG_RANGE13_CNT_ADDR         BN0_WF_MIB_TOP_M0DR15_ADDR
#define BN0_WF_MIB_TOP_M0DR15_TRX_AGG_RANGE13_CNT_MASK         0xFFFF0000                // TRX_AGG_RANGE13_CNT[31..16]
#define BN0_WF_MIB_TOP_M0DR15_TRX_AGG_RANGE13_CNT_SHFT         16
#define BN0_WF_MIB_TOP_M0DR15_TRX_AGG_RANGE12_CNT_ADDR         BN0_WF_MIB_TOP_M0DR15_ADDR
#define BN0_WF_MIB_TOP_M0DR15_TRX_AGG_RANGE12_CNT_MASK         0x0000FFFF                // TRX_AGG_RANGE12_CNT[15..0]
#define BN0_WF_MIB_TOP_M0DR15_TRX_AGG_RANGE12_CNT_SHFT         0

/* =====================================================================================

  ---M0DR16 (0x820ED000 + 0x7F8)---

    TRX_AGG_RANGE14_CNT[15..0]   - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 14(MIB.M0ARNGn.AGG_RANGE_SEL_14) of CR setting
                                     (unit : PPDU)
    TRX_AGG_RANGE15_CNT[31..16]  - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 15(MIB.M0ARNGn.AGG_RANGE_SEL_15) of CR setting
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0DR16_TRX_AGG_RANGE15_CNT_ADDR         BN0_WF_MIB_TOP_M0DR16_ADDR
#define BN0_WF_MIB_TOP_M0DR16_TRX_AGG_RANGE15_CNT_MASK         0xFFFF0000                // TRX_AGG_RANGE15_CNT[31..16]
#define BN0_WF_MIB_TOP_M0DR16_TRX_AGG_RANGE15_CNT_SHFT         16
#define BN0_WF_MIB_TOP_M0DR16_TRX_AGG_RANGE14_CNT_ADDR         BN0_WF_MIB_TOP_M0DR16_ADDR
#define BN0_WF_MIB_TOP_M0DR16_TRX_AGG_RANGE14_CNT_MASK         0x0000FFFF                // TRX_AGG_RANGE14_CNT[15..0]
#define BN0_WF_MIB_TOP_M0DR16_TRX_AGG_RANGE14_CNT_SHFT         0

/* =====================================================================================

  ---M0SDR16 (0x820ED000 + 0x7FC)---

    P_CCA_TIME[23..0]            - (RW) This counter measures primary CCA. Primary CCA is from (MDRDY|pED). (primary channel busy time) This counter is saturated mode.
                                     Enable when PSCCA_TIME_EN = target BSS
                                     The target source is selected by PRIM_CS_ED_SEL
                                     (unit: 1us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR16_P_CCA_TIME_ADDR                 BN0_WF_MIB_TOP_M0SDR16_ADDR
#define BN0_WF_MIB_TOP_M0SDR16_P_CCA_TIME_MASK                 0x00FFFFFF                // P_CCA_TIME[23..0]
#define BN0_WF_MIB_TOP_M0SDR16_P_CCA_TIME_SHFT                 0

/* =====================================================================================

  ---M0SDR17 (0x820ED000 + 0x800)---

    S_CCA_TIME[23..0]            - (RW) This counter measures secondary CCA. Secondary CCA is from ((MDRDY&>=target BW)|sED). 
                                     (Secondary channel busy time, 20/40/80/160MHz) This counter is saturated mode.
                                     Enable when PSCCA_TIME_EN = target BSS
                                     The target source is selected by SEC_CS_ED_SEL
                                     (unit: 1us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR17_S_CCA_TIME_ADDR                 BN0_WF_MIB_TOP_M0SDR17_ADDR
#define BN0_WF_MIB_TOP_M0SDR17_S_CCA_TIME_MASK                 0x00FFFFFF                // S_CCA_TIME[23..0]
#define BN0_WF_MIB_TOP_M0SDR17_S_CCA_TIME_SHFT                 0

/* =====================================================================================

  ---MCTR0 (0x820ED000 + 0x804)---

    CCA_TIME[23..0]              - (RW) This counter measures primary/secondary ED or CS CCA
                                     The source is selected by CS_ED_SEL
                                     (unit: 1us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCTR0_CCA_TIME_ADDR                     BN0_WF_MIB_TOP_MCTR0_ADDR
#define BN0_WF_MIB_TOP_MCTR0_CCA_TIME_MASK                     0x00FFFFFF                // CCA_TIME[23..0]
#define BN0_WF_MIB_TOP_MCTR0_CCA_TIME_SHFT                     0

/* =====================================================================================

  ---MCTR1 (0x820ED000 + 0x808)---

    S_20BW_CCA_TIME[23..0]       - (RW) This counter measures secondary ED or CS CCA
                                     The source is selected by S20BW_CS_ED_SEL
                                     (unit: 1us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCTR1_S_20BW_CCA_TIME_ADDR              BN0_WF_MIB_TOP_MCTR1_ADDR
#define BN0_WF_MIB_TOP_MCTR1_S_20BW_CCA_TIME_MASK              0x00FFFFFF                // S_20BW_CCA_TIME[23..0]
#define BN0_WF_MIB_TOP_MCTR1_S_20BW_CCA_TIME_SHFT              0

/* =====================================================================================

  ---MCTR2 (0x820ED000 + 0x80C)---

    S_40BW_CCA_TIME[23..0]       - (RW) This counter measures secondary ED or CS CAA
                                     The source is selected by S40BW_CS_ED_SEL
                                     (unit: 1us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCTR2_S_40BW_CCA_TIME_ADDR              BN0_WF_MIB_TOP_MCTR2_ADDR
#define BN0_WF_MIB_TOP_MCTR2_S_40BW_CCA_TIME_MASK              0x00FFFFFF                // S_40BW_CCA_TIME[23..0]
#define BN0_WF_MIB_TOP_MCTR2_S_40BW_CCA_TIME_SHFT              0

/* =====================================================================================

  ---MCTR3 (0x820ED000 + 0x810)---

    S_80BW_CCA_TIME[23..0]       - (RW) This counter measures secondary ED or CS CCA
                                     The source is selected by S80BW_CS_ED_SEL
                                     (unit: 1us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCTR3_S_80BW_CCA_TIME_ADDR              BN0_WF_MIB_TOP_MCTR3_ADDR
#define BN0_WF_MIB_TOP_MCTR3_S_80BW_CCA_TIME_MASK              0x00FFFFFF                // S_80BW_CCA_TIME[23..0]
#define BN0_WF_MIB_TOP_MCTR3_S_80BW_CCA_TIME_SHFT              0

/* =====================================================================================

  ---MCS2TR0 (0x820ED000 + 0x814)---

    S_P20BW_ED_TIME[23..0]       - (RW) This counter measures secondary ED CCA for each sub 20MHz channel
                                     (unit: 1us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCS2TR0_S_P20BW_ED_TIME_ADDR            BN0_WF_MIB_TOP_MCS2TR0_ADDR
#define BN0_WF_MIB_TOP_MCS2TR0_S_P20BW_ED_TIME_MASK            0x00FFFFFF                // S_P20BW_ED_TIME[23..0]
#define BN0_WF_MIB_TOP_MCS2TR0_S_P20BW_ED_TIME_SHFT            0

/* =====================================================================================

  ---MCS2TR1 (0x820ED000 + 0x818)---

    S_P20BW_ED_TIME[23..0]       - (RW) This counter measures secondary ED CCA for each sub 20MHz channel
                                     (unit: 1us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCS2TR1_S_P20BW_ED_TIME_ADDR            BN0_WF_MIB_TOP_MCS2TR1_ADDR
#define BN0_WF_MIB_TOP_MCS2TR1_S_P20BW_ED_TIME_MASK            0x00FFFFFF                // S_P20BW_ED_TIME[23..0]
#define BN0_WF_MIB_TOP_MCS2TR1_S_P20BW_ED_TIME_SHFT            0

/* =====================================================================================

  ---MCS2TR2 (0x820ED000 + 0x81C)---

    S_P20BW_ED_TIME[23..0]       - (RW) This counter measures secondary ED CCA for each sub 20MHz channel
                                     (unit: 1us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCS2TR2_S_P20BW_ED_TIME_ADDR            BN0_WF_MIB_TOP_MCS2TR2_ADDR
#define BN0_WF_MIB_TOP_MCS2TR2_S_P20BW_ED_TIME_MASK            0x00FFFFFF                // S_P20BW_ED_TIME[23..0]
#define BN0_WF_MIB_TOP_MCS2TR2_S_P20BW_ED_TIME_SHFT            0

/* =====================================================================================

  ---MCS2TR3 (0x820ED000 + 0x820)---

    S_P20BW_ED_TIME[23..0]       - (RW) This counter measures secondary ED CCA for each sub 20MHz channel
                                     (unit: 1us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCS2TR3_S_P20BW_ED_TIME_ADDR            BN0_WF_MIB_TOP_MCS2TR3_ADDR
#define BN0_WF_MIB_TOP_MCS2TR3_S_P20BW_ED_TIME_MASK            0x00FFFFFF                // S_P20BW_ED_TIME[23..0]
#define BN0_WF_MIB_TOP_MCS2TR3_S_P20BW_ED_TIME_SHFT            0

/* =====================================================================================

  ---MCS2TR4 (0x820ED000 + 0x824)---

    S_P20BW_ED_TIME[23..0]       - (RW) This counter measures secondary ED CCA for each sub 20MHz channel
                                     (unit: 1us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCS2TR4_S_P20BW_ED_TIME_ADDR            BN0_WF_MIB_TOP_MCS2TR4_ADDR
#define BN0_WF_MIB_TOP_MCS2TR4_S_P20BW_ED_TIME_MASK            0x00FFFFFF                // S_P20BW_ED_TIME[23..0]
#define BN0_WF_MIB_TOP_MCS2TR4_S_P20BW_ED_TIME_SHFT            0

/* =====================================================================================

  ---MCS2TR5 (0x820ED000 + 0x828)---

    S_P20BW_ED_TIME[23..0]       - (RW) This counter measures secondary ED CCA for each sub 20MHz channel
                                     (unit: 1us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCS2TR5_S_P20BW_ED_TIME_ADDR            BN0_WF_MIB_TOP_MCS2TR5_ADDR
#define BN0_WF_MIB_TOP_MCS2TR5_S_P20BW_ED_TIME_MASK            0x00FFFFFF                // S_P20BW_ED_TIME[23..0]
#define BN0_WF_MIB_TOP_MCS2TR5_S_P20BW_ED_TIME_SHFT            0

/* =====================================================================================

  ---MCS2TR6 (0x820ED000 + 0x82C)---

    S_P20BW_ED_TIME[23..0]       - (RW) This counter measures secondary ED CCA for each sub 20MHz channel
                                     (unit: 1us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCS2TR6_S_P20BW_ED_TIME_ADDR            BN0_WF_MIB_TOP_MCS2TR6_ADDR
#define BN0_WF_MIB_TOP_MCS2TR6_S_P20BW_ED_TIME_MASK            0x00FFFFFF                // S_P20BW_ED_TIME[23..0]
#define BN0_WF_MIB_TOP_MCS2TR6_S_P20BW_ED_TIME_SHFT            0

/* =====================================================================================

  ---MCS2TR7 (0x820ED000 + 0x830)---

    S_P20BW_ED_TIME[23..0]       - (RW) This counter measures secondary ED CCA for each sub 20MHz channel
                                     (unit: 1us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCS2TR7_S_P20BW_ED_TIME_ADDR            BN0_WF_MIB_TOP_MCS2TR7_ADDR
#define BN0_WF_MIB_TOP_MCS2TR7_S_P20BW_ED_TIME_MASK            0x00FFFFFF                // S_P20BW_ED_TIME[23..0]
#define BN0_WF_MIB_TOP_MCS2TR7_S_P20BW_ED_TIME_SHFT            0

/* =====================================================================================

  ---BRIPCR0 (0x820ED000 + 0x834)---

    RX_IPV4_COUNT2n[15..0]       - (RW) This counter is increased for each MSDU with IPv4 header
                                     (unit : MSDU)
    RX_IPV4_COUNT2np1[31..16]    - (RW) This counter is increased for each MSDU with IPv4 header
                                     (unit : MSDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BRIPCR0_RX_IPV4_COUNT2np1_ADDR          BN0_WF_MIB_TOP_BRIPCR0_ADDR
#define BN0_WF_MIB_TOP_BRIPCR0_RX_IPV4_COUNT2np1_MASK          0xFFFF0000                // RX_IPV4_COUNT2np1[31..16]
#define BN0_WF_MIB_TOP_BRIPCR0_RX_IPV4_COUNT2np1_SHFT          16
#define BN0_WF_MIB_TOP_BRIPCR0_RX_IPV4_COUNT2n_ADDR            BN0_WF_MIB_TOP_BRIPCR0_ADDR
#define BN0_WF_MIB_TOP_BRIPCR0_RX_IPV4_COUNT2n_MASK            0x0000FFFF                // RX_IPV4_COUNT2n[15..0]
#define BN0_WF_MIB_TOP_BRIPCR0_RX_IPV4_COUNT2n_SHFT            0

/* =====================================================================================

  ---BRIPCR1 (0x820ED000 + 0x83C)---

    RX_IPV4_DROP_COUNT2n[15..0]  - (RW) This counter is increased for each MSDU with IPv4 header and is dropped by PF
                                     (unit : MSDU)
    RX_IPV4_DROP_COUNT2np1[31..16] - (RW) This counter is increased for each MSDU with IPv4 header and is dropped by PF
                                     (unit : MSDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BRIPCR1_RX_IPV4_DROP_COUNT2np1_ADDR     BN0_WF_MIB_TOP_BRIPCR1_ADDR
#define BN0_WF_MIB_TOP_BRIPCR1_RX_IPV4_DROP_COUNT2np1_MASK     0xFFFF0000                // RX_IPV4_DROP_COUNT2np1[31..16]
#define BN0_WF_MIB_TOP_BRIPCR1_RX_IPV4_DROP_COUNT2np1_SHFT     16
#define BN0_WF_MIB_TOP_BRIPCR1_RX_IPV4_DROP_COUNT2n_ADDR       BN0_WF_MIB_TOP_BRIPCR1_ADDR
#define BN0_WF_MIB_TOP_BRIPCR1_RX_IPV4_DROP_COUNT2n_MASK       0x0000FFFF                // RX_IPV4_DROP_COUNT2n[15..0]
#define BN0_WF_MIB_TOP_BRIPCR1_RX_IPV4_DROP_COUNT2n_SHFT       0

/* =====================================================================================

  ---BRIPCR2 (0x820ED000 + 0x844)---

    RX_ICMP4_COUNT2n[15..0]      - (RW) This counter is increased for each MSDU with ICMPv4 header
                                     (unit : MSDU)
    RX_ICMP4_COUNT2np1[31..16]   - (RW) This counter is increased for each MSDU with ICMPv4 header
                                     (unit : MSDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BRIPCR2_RX_ICMP4_COUNT2np1_ADDR         BN0_WF_MIB_TOP_BRIPCR2_ADDR
#define BN0_WF_MIB_TOP_BRIPCR2_RX_ICMP4_COUNT2np1_MASK         0xFFFF0000                // RX_ICMP4_COUNT2np1[31..16]
#define BN0_WF_MIB_TOP_BRIPCR2_RX_ICMP4_COUNT2np1_SHFT         16
#define BN0_WF_MIB_TOP_BRIPCR2_RX_ICMP4_COUNT2n_ADDR           BN0_WF_MIB_TOP_BRIPCR2_ADDR
#define BN0_WF_MIB_TOP_BRIPCR2_RX_ICMP4_COUNT2n_MASK           0x0000FFFF                // RX_ICMP4_COUNT2n[15..0]
#define BN0_WF_MIB_TOP_BRIPCR2_RX_ICMP4_COUNT2n_SHFT           0

/* =====================================================================================

  ---BRIPCR3 (0x820ED000 + 0x84C)---

    RX_IPV6_COUNT2n[15..0]       - (RW) This counter is increased for each MSDU with IPv6 header
                                     (unit : MSDU)
    RX_IPV6_COUNT2np1[31..16]    - (RW) This counter is increased for each MSDU with IPv6 header
                                     (unit : MSDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BRIPCR3_RX_IPV6_COUNT2np1_ADDR          BN0_WF_MIB_TOP_BRIPCR3_ADDR
#define BN0_WF_MIB_TOP_BRIPCR3_RX_IPV6_COUNT2np1_MASK          0xFFFF0000                // RX_IPV6_COUNT2np1[31..16]
#define BN0_WF_MIB_TOP_BRIPCR3_RX_IPV6_COUNT2np1_SHFT          16
#define BN0_WF_MIB_TOP_BRIPCR3_RX_IPV6_COUNT2n_ADDR            BN0_WF_MIB_TOP_BRIPCR3_ADDR
#define BN0_WF_MIB_TOP_BRIPCR3_RX_IPV6_COUNT2n_MASK            0x0000FFFF                // RX_IPV6_COUNT2n[15..0]
#define BN0_WF_MIB_TOP_BRIPCR3_RX_IPV6_COUNT2n_SHFT            0

/* =====================================================================================

  ---BRIPCR4 (0x820ED000 + 0x854)---

    RX_IPV6_DROP_COUNT2n[15..0]  - (RW) This counter is increased for each MSDU with IPv6 header and is dropped by PF
                                     (unit : MSDU)
    RX_IPV6_DROP_COUNT2np1[31..16] - (RW) This counter is increased for each MSDU with IPv6 header and is dropped by PF
                                     (unit : MSDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BRIPCR4_RX_IPV6_DROP_COUNT2np1_ADDR     BN0_WF_MIB_TOP_BRIPCR4_ADDR
#define BN0_WF_MIB_TOP_BRIPCR4_RX_IPV6_DROP_COUNT2np1_MASK     0xFFFF0000                // RX_IPV6_DROP_COUNT2np1[31..16]
#define BN0_WF_MIB_TOP_BRIPCR4_RX_IPV6_DROP_COUNT2np1_SHFT     16
#define BN0_WF_MIB_TOP_BRIPCR4_RX_IPV6_DROP_COUNT2n_ADDR       BN0_WF_MIB_TOP_BRIPCR4_ADDR
#define BN0_WF_MIB_TOP_BRIPCR4_RX_IPV6_DROP_COUNT2n_MASK       0x0000FFFF                // RX_IPV6_DROP_COUNT2n[15..0]
#define BN0_WF_MIB_TOP_BRIPCR4_RX_IPV6_DROP_COUNT2n_SHFT       0

#ifdef __cplusplus
}
#endif

#endif // __BN0_WF_MIB_TOP_REGS_H__
